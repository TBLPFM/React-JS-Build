{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","views/pages/Setups/SystemStatus/Tables/SystemStatusTable.js","views/pages/Setups/SystemStatus/Modals/SystemStatusModals.js","views/pages/Setups/SystemStatus/SystemStatus.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","hasOwnProperty","createButton","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","SystemStatusTable","tableProperties","columns","name","cell","row","Button","handleEdit","handleDelete","selector","sortable","SYS_STATUS_NAME","CATEGORY","data","filteredData","noHeader","pagination","subHeader","striped","subHeaderComponent","SystemStatusModal","Modal","show","onHide","handleHide","Header","closeButton","Title","id","InsertUpdate","Form","noValidate","validated","onSubmit","handleSubmit","autoComplete","Body","Group","controlId","Label","Control","type","placeholder","StatusName","changeStatusName","required","Feedback","Category","changeCategory","Footer","variant","isEnabled","showdelete","handleHideDelete","readOnly","SystemStatus","event","preventDefault","currentTarget","checkValidity","stopPropagation","form","state","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","formEdit","SYS_STATUS_ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","setState","formDelete","warning","handleEditData","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","EMAIL","Date","items","rowData","console","Helmet","Fragment","Row","Col","sm","Card","CardHeader","CardTitle","CardBody","constructor","SystemStatusModals","connect"],"mappings":"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","file":"static/js/73.33326dec.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n        { \n          (!props.hasOwnProperty('createButton') || (props.hasOwnProperty('createButton') && props.createButton)) ? (\n            <Can I=\"create\" a={props.role} passThrough>\n              { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n            </Can>\n          ) : (\"\")\n        }\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\nclass SystemStatusTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"Status Name\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            },\n            {\n                name: \"Category\",\n                selector: \"CATEGORY\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CATEGORY}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n            <DataTable\n                className=\"dataTable-custom\"\n                data={this.props.value.length ? this.props.filteredData : this.props.data}\n                columns={this.tableProperties.columns}\n                noHeader\n                pagination\n                subHeader\n                striped\n                subHeaderComponent={\n                    <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                }\n            />\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTable\n\n","import React from 'react';\nimport { Button, Modal, Form } from 'react-bootstrap';\n\nclass SystemStatusModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} System Status\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form noValidate validated={this.props.validated} onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"StatusName\">\n                                <Form.Label>Status Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Status Name\" \n                                value={this.props.StatusName} \n                                onChange={this.props.changeStatusName}\n                                required />\n                                 <Form.Control.Feedback type=\"invalid\">\n                                    Please enter status Name.\n                                 </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group controlId=\"Category\">\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Category\" \n                                value={this.props.Category} onChange={this.props.changeCategory}\n                                required />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please enter Category.\n                                 </Form.Control.Feedback>\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete System Status\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"StatusName\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.StatusName} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default SystemStatusModal;","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport * as API from \"../../../../utility/crud/app.crud\"\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport SystemStatusTable from \"./Tables/SystemStatusTable\"\nimport SystemStatusModals from \"./Modals/SystemStatusModals\";\nimport { toastr } from 'react-redux-toastr'\n\nclass SystemStatus extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            validated: false,\n            columns: [],\n            data: [],\n            filteredData: [],\n            value: '',\n            SYS_STATUS_ID: 0,\n            SYS_STATUS_NAME: '',\n            CATEGORY: '',\n            CREATEDBY:props.user.EMAIL,\n            MODIFIEDBY:props.user.EMAIL,\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n            InsertUpdate: ''\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n    }\n\n    componentDidMount() {\n        this.populateData();\n    }\n\n    populateData() {\n        const getItemsQuery = `\n        query {\n            SystemStatus {\n                SYS_STATUS_ID\n                SYS_STATUS_NAME\n                CATEGORY\n                CREATEDBY\n                MODIFIEDBY\n                CREATED_DATE\n                MODIFIED_DATE\n\n            }\n        }\n      `;\n  \n          API.getData(getItemsQuery)\n              .then(({ data }) => {\n  \n                  let items = data.data.SystemStatus;\n                  let rowData = [];\n  \n                  items.forEach(item => {\n  \n                      rowData.push({\n                          SYS_STATUS_ID: item.SYS_STATUS_ID,\n                          SYS_STATUS_NAME: item.SYS_STATUS_NAME,\n                          CATEGORY: item.CATEGORY\n                      })\n  \n                  });\n  \n                  this.setState({ data: rowData })\n              })\n              .catch(error => {\n                  console.error(error);\n              })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const validate = event.currentTarget;\n        if (validate.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n        const form = `\n        mutation{\n            addSystemStatus(\n                SYS_STATUS_NAME:\"${this.state.SYS_STATUS_NAME}\"\n                CATEGORY:\"${this.state.CATEGORY}\"\n                CREATEDBY:\"${this.state.CREATEDBY}\"\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\"\n                CREATED_DATE:\"${this.state.CREATED_DATE}\"\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                ){\n                    SYS_STATUS_ID\n            }\n        }\n        `;\n\n\n        const formEdit = `\n        mutation{\n            updateSystemStatus(\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID}\n                SYS_STATUS_NAME:\"${this.state.SYS_STATUS_NAME}\"\n                CATEGORY:\"${this.state.CATEGORY}\"\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\"\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                ){\n                    SYS_STATUS_ID\n            }\n        }\n        `;\n\n        if (this.state.InsertUpdate === 'Insert') {\n            API.create(form)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.success('Create Record', 'Record Created Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        } else {\n            API.update(formEdit)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.info('Update Record', 'Record Updated Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        }\n    }\n    this.setState({\n        validated: true\n    })\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteSystemStatus(\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID}\n                ){\n                    SYS_STATUS_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleEditData = (e) => {\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYS_STATUS_NAME: e.SYS_STATUS_NAME,\n            CATEGORY: e.CATEGORY,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYS_STATUS_NAME: e.SYS_STATUS_NAME,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            SYS_STATUS_NAME: '',\n            CATEGORY: ''\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CATEGORY.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.CATEGORY.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    render() {\n        const { data, columns, value, filteredData } = this.state\n        return (\n            <>\n            <Helmet><title>System Status</title></Helmet>\n            <React.Fragment>\n                <Breadcrumbs\n                    breadCrumbTitle=\"Admin\"\n                    breadCrumbParent=\"Setup\"\n                    breadCrumbActive=\"System Status\"\n                />\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle>System Status</CardTitle>\n                            </CardHeader>\n                            <CardBody className=\"rdt_Wrapper\">\n                                \n                                <SystemStatusTable\n                                    role={this.constructor.name}\n                                    handleEdit={this.handleEditData}\n                                    handleDelete={this.handleDeleteData}\n                                    value={value}\n                                    data={data}\n                                    columns={columns}\n                                    filteredData={filteredData}\n                                    handleShow={this.handleShow}\n                                    handleFilter={this.handleFilter}\n                                />\n\n                                <SystemStatusModals\n                                   validated={this.state.validated}\n                                    show={this.state.show}\n                                    handleHide={this.handleHide}\n                                    InsertUpdate={this.state.InsertUpdate}\n                                    handleSubmit={this.handleSubmit}\n                                    StatusName={this.state.SYS_STATUS_NAME}\n                                    changeStatusName={e => this.setState({SYS_STATUS_NAME: e.target.value })}\n                                    Category={this.state.CATEGORY}\n                                    changeCategory={e => this.setState({ CATEGORY: e.target.value })}\n                                    showdelete={this.state.showdelete}\n                                    handleHideDelete={this.handleHideDelete}\n                                    handleDelete={this.handleDelete}\n                                />\n\n\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </React.Fragment>\n            </>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(SystemStatus)\n\n"],"sourceRoot":""}