{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/Setups/BettingTypes/Tables/BettingTypesTable.js","views/pages/Setups/BettingTypes/Modals/BettingTypesModal.js","views/pages/Setups/BettingTypes/BettingTypes.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","hasOwnProperty","createButton","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","BettingTypesTable","Button","handleEdit","handleDelete","BETTING_TYPE_NAME","SYSTEMSTATUS","subHeader","responsive","subHeaderComponent","BettingTypesModal","Modal","handleHide","id","InsertUpdate","Form","noValidate","validated","onSubmit","handleSubmit","autoComplete","Group","controlId","Label","Control","placeholder","BettingTypeName","changeBettingTypeName","required","Feedback","SystemStatusTypeDescription","aria-describedby","variant","handleShowSearch","Check","label","checked","Inspection","changeInspection","Footer","isEnabled","showdelete","handleHideDelete","readOnly","BettingTypes","context","event","preventDefault","currentTarget","checkValidity","stopPropagation","form","state","SYS_STATUS_ID","INSPECTION","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","formEdit","BETTING_TYPE_ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","setState","formDelete","warning","handleCloseSearch","SYSTEMSTATUSTYPEDESCRIPTION","handleEditData","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","handleSearchFilter","searchdata","searchFilteredData","searchvalue","showStatus","EMAIL","Date","searchcolumns","populateStatus","SystemStatusFilter","Helmet","Fragment","Row","Col","sm","Card","CardHeader","CardTitle","CardBody","constructor","connect"],"mappings":"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","file":"static/js/45.40e0ccc0.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n        { \n          (!props.hasOwnProperty('createButton') || (props.hasOwnProperty('createButton') && props.createButton)) ? (\n            <Can I=\"create\" a={props.role} passThrough>\n              { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n            </Can>\n          ) : (\"\")\n        }\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\nclass BettingTypesTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            {allowed =>\n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            {allowed =>\n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"Betting Type Name\",\n                selector: \"BETTING_TYPE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.BETTING_TYPE_NAME}</p>\n            },\n            // {\n            //     name: \"Inspection\",\n            //     selector: \"INSPECTION\",\n            //     sortable: true,\n\n            //     cell: row => <p className=\"mb-0\">{row.INSPECTION === '1' ? true : false}</p>\n            // },\n            {\n                name: \"Status\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYSTEMSTATUS.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n                <DataTable\n                    className=\"dataTable-custom\"\n                    data={this.props.value.length ? this.props.filteredData : this.props.data}\n                    columns={this.tableProperties.columns}\n                    noHeader\n                    pagination\n                    subHeader\n                    striped\n                    responsive\n                    subHeaderComponent={\n                        <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                    }\n                />\n            </>\n\n        )\n    }\n}\n\n\nexport default BettingTypesTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup } from 'react-bootstrap';\nimport \"../../../../../assets/scss/plugins/forms/react-select/_react-select.scss\";\nimport { Search } from 'react-feather';\n\nclass BettingTypesModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}>\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Betting Type\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form noValidate validated={this.props.validated} onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n\n                            <Form.Group controlId=\"BettingTypeName\">\n                                <Form.Label>Betting Type Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Betting Type Name\"\n                                    value={this.props.BettingTypeName}\n                                    onChange={this.props.changeBettingTypeName}\n                                  required\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please enter Betting Type Name.\n                                 </Form.Control.Feedback>\n                            </Form.Group>\n                           \n                            <Form.Group controlId=\"SystemStatusType\">\n                                <Form.Label>System Status Type</Form.Label>\n                                <InputGroup>\n                                    \n                                    <Form.Control\n                                        type=\"text\"\n                                        value={this.props.SystemStatusTypeDescription}\n                                        placeholder=\"Search System Status Type\"\n                                        aria-describedby=\"inputGroupPrepend\"\n                                        required\n                                    />\n                                    <InputGroup.Prepend>\n                                        <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSearch}>\n                                            <Search />\n                                        </Button>\n                                    </InputGroup.Prepend>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select status.\n                                 </Form.Control.Feedback>\n                                </InputGroup>\n                               \n                            </Form.Group>\n                            <Form.Group  id=\"formGridCheckbox\" controlId=\"Inspection\">\n                                  \n                                  <Form.Label>Inspection</Form.Label>\n                                  <Form.Check\n                                      type=\"switch\"\n                                      id=\"custom-switch\"\n                                      label=\"\"\n                                      name=\"Inspection\"\n                                      checked={this.props.Inspection === 1 ? true : false}\n                                      onChange={this.props.changeInspection}\n                                  />\n                              </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete Betting Type\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.BettingTypeName}  readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default BettingTypesModal;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport BettingTypesTable from './Tables/BettingTypesTable';\nimport BettingTypesModal from './Modals/BettingTypesModal';\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr'\n\nclass BettingTypes extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n       \n        this.state = {\n            validated: false,\n            columns: [],\n            data: [],\n            filteredData: [],\n            value: '',\n            show: false,\n            showStatus: true,\n            showdelete: false,\n\n            BETTING_TYPE_ID: 0,\n            BETTING_TYPE_NAME: '',\n            SYS_STATUS_ID: 0,\n            CREATEDBY:props.user.EMAIL,\n            MODIFIEDBY:props.user.EMAIL,\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n            INSPECTION:0,\n            InsertUpdate: '',\n\n            opensearch: false,\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            searchcolumns: [],\n            searchdata: [],\n            searchFilteredData: [],\n            searchvalue: '',\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n        this.handleShowSearch = () => {\n            this.setState({ opensearch: true });\n        };\n\n        this.handleHideSearch = () => {\n            this.setState({ opensearch: false });\n        };\n\n        this.populateData();\n        this.populateStatus();\n    }\n   \n    populateData() {\n        const getdata = `\n            query{\n                BettingTypes{\n                    BETTING_TYPE_ID\n                    BETTING_TYPE_NAME\n                    SYS_STATUS_ID\n                    INSPECTION\n                    SYSTEMSTATUS{\n                        SYS_STATUS_ID\n                        SYS_STATUS_NAME\n                    }\n                    CREATEDBY\n                    MODIFIEDBY\n                    CREATED_DATE\n                    MODIFIED_DATE\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                data: data.data.BettingTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    populateStatus() {\n        const getdata = `\n            query {\n                SystemStatusFilter (\n                    CATEGORY:\"SET\"\n                    ){\n                        SYS_STATUS_ID,\n                        SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to System Status Type Load Data');\n                }\n            })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const validate = event.currentTarget;\n        if (validate.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n            const form = `\n        mutation{\n            addBettingType(\n                BETTING_TYPE_NAME:\"${this.state.BETTING_TYPE_NAME}\",\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                INSPECTION:${this.state.INSPECTION},\n                CREATEDBY:\"${this.state.CREATEDBY}\",\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                ){\n                    BETTING_TYPE_ID\n            }\n        }\n        `;\n\n            const formEdit = `\n        mutation{\n            updateBettingType(\n                BETTING_TYPE_ID:${this.state.BETTING_TYPE_ID},\n                BETTING_TYPE_NAME:\"${this.state.BETTING_TYPE_NAME}\",\n                INSPECTION:${this.state.INSPECTION},\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CREATEDBY:\"${this.state.CREATEDBY}\",\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                ){\n                    BETTING_TYPE_ID\n            }\n        }\n        `;\n\n            if (this.state.InsertUpdate === 'Insert') {\n                API.create(form)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.success('Create Record', 'Record Created Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            } else {\n                API.update(formEdit)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.info('Update Record', 'Record Updated Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            }\n        }\n        this.setState({\n            validated: true\n        })\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteBettingType(\n                BETTING_TYPE_ID:${this.state.BETTING_TYPE_ID}\n                ){\n                    BETTING_TYPE_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleCloseSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            opensearch: false,\n\n        });\n       \n\n    };\n\n    handleEditData = (e) => {\n        this.setState({\n            BETTING_TYPE_ID: e.BETTING_TYPE_ID,\n            INSPECTION:e.INSPECTION,\n            BETTING_TYPE_NAME: e.BETTING_TYPE_NAME,\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            BETTING_TYPE_ID: e.BETTING_TYPE_ID,\n            BETTING_TYPE_NAME: e.BETTING_TYPE_NAME,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            BETTING_TYPE_NAME: '',\n            SYS_STATUS_ID: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            INSPECTION:0,\n            validated: false,\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.BETTING_TYPE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.BETTING_TYPE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n    handleSearchFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchdata\n        let filteredData = this.state.searchFilteredData\n        this.setState({ searchvalue: value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n    \n    render() {\n        const { data, columns, value, filteredData, searchdata, searchvalue } = this.state\n        return (\n            <>\n                <Helmet><title>Betting Types</title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"Betting Types\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Betting Types</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseSearch}\n                                        opensearch={this.state.opensearch}\n                                        handleHideSearch={this.handleHideSearch}\n                                        value={searchvalue}\n                                        data={searchdata}\n                                        handleFilter={this.handleSearchFilter}\n                                        filteredData={filteredData}\n                                    />\n                                    <BettingTypesTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        columns={columns}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <BettingTypesModal\n                                        validated={this.state.validated}\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowSearch={this.handleShowSearch}\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n                                        Inspection={this.state.INSPECTION}\n                                        changeInspection={e => this.setState({ INSPECTION: e.target.checked === true ? 1 : 0 })}\n                                        BettingTypeName={this.state.BETTING_TYPE_NAME}\n                                        changeBettingTypeName={e => this.setState({ BETTING_TYPE_NAME: e.target.value})}\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n                                    />\n\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(BettingTypes));"],"sourceRoot":""}