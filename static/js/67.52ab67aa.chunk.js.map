{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/Setups/DocumentTypes/Tables/DocumentTypesTable.js","views/pages/Setups/DocumentTypes/Modals/DocumentTypesModal.js","views/pages/SearchComponents/CategoryTypeSearch/CategoryTypeSearch.js","views/pages/Setups/DocumentTypes/DocumentTypes.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","hasOwnProperty","createButton","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","DocumentTypesTable","tableProperties","columns","name","cell","row","Button","handleEdit","handleDelete","selector","sortable","DOCUMENTTYPENAME","CATEGORY_TYPE","DESCRIPTION","data","filteredData","noHeader","pagination","subHeader","striped","responsive","subHeaderComponent","DocumentTypesModal","Modal","show","onHide","handleHide","Header","closeButton","Title","id","InsertUpdate","Form","onSubmit","handleSubmit","autoComplete","Body","Group","controlId","Label","Control","placeholder","DocumentTypeName","changeDocumentTypeName","required","CategoryTypeDescription","handleChangeCategoryTypeDescription","aria-describedby","readOnly","variant","handleShowSearch","Footer","isEnabled","showdelete","handleHideDelete","CategoryTypeSearch","handleSearchCategoryType","opensearch","handleHideSearch","Input","DocumentTypes","context","event","preventDefault","form","state","CATEGORYID","CREATEDBYID","LASTMODIFIEDBYID","DATECREATED","DATELASTMODIFIED","formEdit","ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","formDelete","warning","handleCloseSearch","setState","CATEGORYDESCRIPTION","handleEditData","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","handleSearchFilter","searchdata","searchFilteredData","searchvalue","Date","searchcolumns","populateTypes","CategoryTypes","Helmet","Fragment","Row","Col","sm","Card","CardHeader","CardTitle","CardBody","constructor","CategoryTypeID","handleChangeCategoryTypeID","connect"],"mappings":"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","file":"static/js/67.52ab67aa.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n        { \n          (!props.hasOwnProperty('createButton') || (props.hasOwnProperty('createButton') && props.createButton)) ? (\n            <Can I=\"create\" a={props.role} passThrough>\n              { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n            </Can>\n          ) : (\"\")\n        }\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport {\n    Button\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\";\nimport Can from '../../../../../utility/permissions/can';\nclass DocumentTypesTable extends React.Component {\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"Document Type Name\",\n                selector: \"DOCUMENTTYPENAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.DOCUMENTTYPENAME}</p>\n            },\n\n            {\n\n                name: \"Category Type\",\n                selector: \"CATEGORY_TYPE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CATEGORY_TYPE.DESCRIPTION}</p>\n            }\n\n        ]\n    }\n    render() {\n        return (\n            <>\n                <DataTable\n                    className=\"dataTable-custom\"\n                    data={this.props.value.length ? this.props.filteredData : this.props.data}\n                    columns={this.tableProperties.columns}\n                    noHeader\n                    pagination\n                    subHeader\n                    striped\n                    responsive\n                    subHeaderComponent={\n                        <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                    }\n                />\n            </>\n        )\n    }\n}\nexport default DocumentTypesTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup } from 'react-bootstrap';\nimport \"../../../../../assets/scss/plugins/forms/react-select/_react-select.scss\";\nimport { Search } from 'react-feather';\n\nclass DocumentTypesModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Document Type\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"Document Type Name\">\n                                <Form.Label>Document Type</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Document Type Name\" value={this.props.DocumentTypeName} onChange={this.props.changeDocumentTypeName} required />\n                            </Form.Group>\n                            <Form.Group controlId=\"CategoryType\">\n                                <Form.Label>Category Type</Form.Label>\n                                <InputGroup>\n                                    <Form.Control\n                                        type=\"text\"\n                                        value={this.props.CategoryTypeDescription}\n                                        onChange={this.props.handleChangeCategoryTypeDescription}\n                                        placeholder=\"Search Category Type\"\n                                        aria-describedby=\"inputGroupPrepend\"\n                                        required\n                                        readOnly\n                                    />\n                                    <InputGroup.Prepend>\n                                        <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSearch}>\n                                            <Search />\n                                        </Button>\n                                    </InputGroup.Prepend>\n                                </InputGroup>\n                            </Form.Group>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete Document Type\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description_del\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.DocumentTypeName} onChange={this.props.changeDocumentTypeName} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default DocumentTypesModal;","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass CategoryTypeSearch extends React.Component {\n    debugger;\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchCategoryType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"DESCRIPTION\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.DESCRIPTION}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Category Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default CategoryTypeSearch","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\";\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport DocumentTypesTable from './Tables/DocumentTypesTable';\nimport DocumentTypesModal from './Modals/DocumentTypesModal';\nimport CategoryTypeSearch from '../../SearchComponents/CategoryTypeSearch/CategoryTypeSearch';\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr';\n\nclass DocumentTypes extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            columns: [],\n            data: [],\n            filteredData: [],\n            value: '',\n            show: false,\n            showdelete: false,\n            ID: 0,\n            DOCUMENTTYPENAME: '',\n            CATEGORYID: 0,\n            CREATEDBYID: 1,\n            LASTMODIFIEDBYID: 1,\n            DATECREATED: Date.ShowDate(),\n            DATELASTMODIFIED: Date.ShowDate(),\n            InsertUpdate: '',\n            opensearch: false,\n            CATEGORYDESCRIPTION: '',\n            searchcolumns: [],\n            searchdata: [],\n            searchFilteredData: [],\n            searchvalue: '',\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n        this.handleShowSearch = () => {\n            this.setState({ opensearch: true });\n        };\n\n        this.handleHideSearch = () => {\n            this.setState({ opensearch: false });\n        };\n\n        this.populateData();\n        this.populateTypes();\n    }\n\n    populateData() {\n        const getdata = `\n            query{\n                DocumentTypes{\n                    ID\n                    DOCUMENTTYPENAME\n                    CATEGORYID                    \n                    CATEGORY_TYPE{\n                        ID\n                        DESCRIPTION\n                    }                \n                    CREATEDBYID\n                    LASTMODIFIEDBYID\n                    DATECREATED\n                    DATELASTMODIFIED\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                data: data.data.DocumentTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    populateTypes() {\n        const getdata = `\n            query {\n                CategoryTypes {\n                    ID,\n                    DESCRIPTION\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchdata: data.data.CategoryTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Admin Type Load Data');\n                }\n            })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const form = `\n        mutation{\n            addDocumentType(                \n                DOCUMENTTYPENAME:\"${this.state.DOCUMENTTYPENAME}\",\n                CATEGORYID:${this.state.CATEGORYID},                                        \n                CREATEDBYID:${this.state.CREATEDBYID},\n                LASTMODIFIEDBYID:${this.state.LASTMODIFIEDBYID},\n                DATECREATED:\"${this.state.DATECREATED}\",\n                DATELASTMODIFIED:\"${this.state.DATELASTMODIFIED}\"\n                ){\n                ID\n            }\n        }\n        `;\n\n        const formEdit = `\n        mutation{\n            updateDocumentType(\n                ID:${this.state.ID},\n                DOCUMENTTYPENAME:\"${this.state.DOCUMENTTYPENAME}\",\n                CATEGORYID:${this.state.CATEGORYID},\n                LASTMODIFIEDBYID:${this.state.LASTMODIFIEDBYID},\n                DATELASTMODIFIED:\"${this.state.DATELASTMODIFIED}\"\n                ){\n                ID\n            }\n        }\n        `;\n        if (this.state.InsertUpdate === 'Insert') {\n            API.create(form)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.success('Create Record', 'Record Created Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        } else {\n            API.update(formEdit)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.info('Update Record', 'Record Updated Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        }\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteDocumentType (\n                ID:${this.state.ID}\n                ){\n                ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n    }\n\n    handleCloseSearch = (e) => {\n\n        this.setState({\n            CATEGORYID: e.ID,\n            CATEGORYDESCRIPTION: e.DESCRIPTION,\n            opensearch: false,\n        });\n    };\n\n    handleEditData = (e) => {\n        this.setState({\n            ID: e.ID,\n            DOCUMENTTYPENAME: e.DOCUMENTTYPENAME,\n            CATEGORYID: e.CATEGORYID,\n            CATEGORYDESCRIPTION: e.CATEGORY_TYPE.DESCRIPTION,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            ID: e.ID,\n            DOCUMENTTYPENAME: e.DOCUMENTTYPENAME,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            DOCUMENTTYPENAME: '',\n            CATEGORYID: '',\n            CATEGORYDESCRIPTION: ''\n        })\n    }\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.DESCRIPTION.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.DESCRIPTION.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    handleSearchFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchdata\n        let filteredData = this.state.searchFilteredData\n        this.setState({ searchvalue: value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.DESCRIPTION.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.DESCRIPTION.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    render() {\n        const { data, value, filteredData, searchdata, searchvalue } = this.state\n        return (\n            <>\n                <Helmet><title>Document Types</title></Helmet>\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"Document Types\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Document Types</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n                                    <CategoryTypeSearch\n                                        handleSearchCategoryType={this.handleCloseSearch}\n                                        opensearch={this.state.opensearch}\n                                        handleHideSearch={this.handleHideSearch}\n                                        value={searchvalue}\n                                        data={searchdata}\n                                        handleFilter={this.handleSearchFilter}\n                                        filteredData={filteredData}\n                                    />\n                                    <DocumentTypesTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <DocumentTypesModal\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowSearch={this.handleShowSearch}\n\n                                        CategoryTypeID={this.state.CATEGORYID}\n                                        handleChangeCategoryTypeID={e => this.setState({ CATEGORYID: e.target.value })}\n\n                                        CategoryTypeDescription={this.state.CATEGORYDESCRIPTION}\n                                        handleChangeCategoryTypeDescription={e => this.setState({ CATEGORYDESCRIPTION: e.target.value })}\n\n                                        DocumentTypeName={this.state.DOCUMENTTYPENAME}\n                                        changeDocumentTypeName={e => this.setState({ DOCUMENTTYPENAME: e.target.value })}\n\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n\n                                    />\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n            </>\n        )\n    }\n\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\nexport default (connect(mapStateToProps)(DocumentTypes));"],"sourceRoot":""}