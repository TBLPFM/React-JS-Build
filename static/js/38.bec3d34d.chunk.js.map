{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/SearchComponents/HouseTypeSearch/HouseTypeSearch.js","views/pages/Setups/HouseDetails/Tables/HouseDetailsTable.js","views/pages/Setups/HouseDetails/Modals/HouseDetailsModal.js","views/pages/SearchComponents/EstateSearch/EstateSearch.js","views/pages/Setups/HouseDetails/HouseDetails.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","hasOwnProperty","createButton","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","HouseTypeSearch","handleSearchHouseTypes","HOUSE_TYPE","HOUSETYPE","HouseDetailsTable","Button","handleEdit","handleDelete","HOUSE_NUMBER","ESTATETYPE","ESTATE_NAME","TOTAL_NUM_OF_HOUSES","HOUSES_ALLOCATED","HOUSES_REMAINING","SYSTEMSTATUS","subHeader","responsive","subHeaderComponent","HouseDetailsModal","Modal","handleHide","id","InsertUpdate","Form","noValidate","validated","onSubmit","handleSubmit","autoComplete","Row","Group","Col","md","controlId","Label","Control","placeholder","HouseNumber","changeHouseNumber","required","Feedback","TotalHouses","changeTotalHouses","HouseTypeDescription","aria-describedby","variant","handleShowHouseTypeSearch","EstateName","handleShowEstateSearch","SubCounty","changeSubCounty","readOnly","Ward","changeWard","SystemStatusTypeDescription","handleShowStatusSearch","Footer","isEnabled","showdelete","handleHideDelete","EstateSearch","handleSearchEstates","Input","HouseDetails","context","event","preventDefault","currentTarget","checkValidity","stopPropagation","form","state","TOTAL_HOUSES","ESTATE_ID","HOUSE_TYPE_ID","SYS_STATUS_ID","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","formEdit","HOUSE_DETAILS_ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","setState","formDelete","warning","handleCloseEstateSearch","ESTATENAME","SUBCOUNTY_NAME","SUB_COUNTY","WARD_NAME","WARD","openestatesearch","handleCloseHouseTypeSearch","HOUSETYPEDESCRIPTION","openhousetypesearch","handleCloseStatusSearch","SYSTEMSTATUSTYPEDESCRIPTION","openstatussearch","handleEditData","SET_ESTATE_ID","SET_HOUSE_TYPE_ID","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","handleSearchEstateFilter","searchestatedata","filteredEstateData","searchFilteredEstateData","searchestatevalue","includes","handleSearchHouseTypeFilter","searchhousetypedata","filteredHouseTypeData","searchFilteredHouseTypeData","searchhousetypevalue","handleSearchStatusFilter","searchstatusdata","filteredStatusData","searchFilteredStatusData","searchstatusvalue","EMAIL","Date","searchcolumns","searchdata","handleHideEstateSearch","handleHideHouseTypeSearch","handleHideStatusSearch","populateEstates","populateHouseTypes","populateStatus","Estates","HouseTypes","SystemStatusFilter","Helmet","Fragment","sm","Card","CardHeader","CardTitle","CardBody","constructor","connect"],"mappings":"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","file":"static/js/38.bec3d34d.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n        { \n          (!props.hasOwnProperty('createButton') || (props.hasOwnProperty('createButton') && props.createButton)) ? (\n            <Can I=\"create\" a={props.role} passThrough>\n              { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n            </Can>\n          ) : (\"\")\n        }\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass HouseTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchHouseTypes(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"House Type\",\n                selector: \"HOUSE_TYPE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">\n                    {\n\n                    row.HOUSE_TYPE ? row.HOUSE_TYPE : row.HOUSETYPE.HOUSE_TYPE\n                    }\n                    </p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search House Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default HouseTypeSearch","import React from \"react\"\nimport {\n    Button\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\n\nclass HouseDetailsTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            {allowed =>\n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            {allowed =>\n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"House Number\",\n                selector: \"HOUSE_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.HOUSE_NUMBER}</p>\n\n\n            },\n            {\n                name: \"Estate Name\",\n                selector: \"ESTATE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.ESTATETYPE.ESTATE_NAME}</p>\n            },\n            {\n                name: \"Type of House\",\n                selector: \"HOUSE_TYPE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.HOUSETYPE.HOUSE_TYPE}</p>\n            },\n            {\n                name: \"Total Num of Houses\",\n                selector: \"TOTAL_NUM_OF_HOUSES\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.TOTAL_NUM_OF_HOUSES}</p>\n            },\n            {\n                name: \"Houses Allocated\",\n                selector: \"HOUSES_ALLOCATED\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.HOUSES_ALLOCATED}</p>\n            },\n            {\n                name: \"Houses Remaining\",\n                selector: \"HOUSES_REMAINING\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.HOUSES_REMAINING}</p>\n            },\n            {\n                name: \"Status\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYSTEMSTATUS.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n                <DataTable\n                    className=\"dataTable-custom\"\n                    data={this.props.value.length ? this.props.filteredData : this.props.data}\n                    columns={this.tableProperties.columns}\n                    noHeader\n                    pagination\n                    subHeader\n                    striped\n                    responsive\n                    subHeaderComponent={\n                        <TableCustomHeader role={this.props.role}\n                            value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                    }\n                />\n            </>\n\n        )\n    }\n}\n\n\nexport default HouseDetailsTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup, Col } from 'react-bootstrap';\n\nimport { Search } from 'react-feather';\n\nclass HouseDetailsModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                    size=\"lg\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} House Details\n                        </Modal.Title>\n                    </Modal.Header>\n\n                    <Form noValidate validated={this.props.validated} onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"HouseNumber\">\n                                    <Form.Label>House Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter House Number\"\n                                        value={this.props.HouseNumber}\n                                        onChange={this.props.changeHouseNumber} required />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please enter House Number.\n                                 </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"HouseCount\">\n                                    <Form.Label>Number of Houses</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Number of Houses\"\n                                        value={this.props.TotalHouses}\n                                        onChange={this.props.changeTotalHouses} required />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please enter Number of Houses.\n                                 </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"HouseType\">\n                                    <Form.Label>Type of House</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.HouseTypeDescription}\n                                            placeholder=\"Search House Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowHouseTypeSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select House Type.\n                                 </Form.Control.Feedback>\n                                    </InputGroup>\n\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"Estate\">\n                                    <Form.Label>Estate Name</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type=\"text\" value={this.props.EstateName}\n                                            placeholder=\"Search Estate\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowEstateSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select Estate.\n                                 </Form.Control.Feedback>\n                                    </InputGroup>\n\n                                </Form.Group>\n\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"SubCounty\">\n                                    <Form.Label>Sub County</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Sub County\" value={this.props.SubCounty}\n                                        onChange={this.props.changeSubCounty} readOnly />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"Ward\">\n                                    <Form.Label>Ward</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Ward\" value={this.props.Ward}\n                                        onChange={this.props.changeWard} readOnly />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n\n                                <Form.Group as={Col} md=\"6\" controlId=\"SystemStatusType\">\n                                    <Form.Label> Status </Form.Label>\n                                    <InputGroup>\n\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.SystemStatusTypeDescription}\n                                            placeholder=\"Search System Status Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowStatusSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select Status.\n                                 </Form.Control.Feedback>\n                                    </InputGroup>\n\n                                </Form.Group>\n                            </Form.Row>\n\n\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete House Details\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description_del\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.HouseNumber} onChange={this.props.changeHouseNumber} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default HouseDetailsModal;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass EstateSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchEstates(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Estate Type\",\n                selector: \"ESTATE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.ESTATE_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Estates\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default EstateSearch","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\";\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport HouseDetailsTable from './Tables/HouseDetailsTable';\nimport HouseDetailsModal from './Modals/HouseDetailsModal';\nimport HouseTypeSearch from '../../SearchComponents/HouseTypeSearch/HouseTypeSearch';\nimport EstateSearch from '../../SearchComponents/EstateSearch/EstateSearch';\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr';\n\nclass HouseDetails extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            validated: false,\n            columns: [],\n            data: [],\n            filteredData: [],\n            filteredHouseTypeData: [],\n            filteredEstateData: [],\n            filteredStatusData: [],\n            value: '',\n            show: false,\n            showdelete: false,\n            HOUSE_DETAILS_ID: 0,\n            HOUSE_NUMBER: '',\n            TOTAL_HOUSES: 0,\n            SET_ESTATE_ID: 0,\n            SET_HOUSE_TYPE_ID: 0,\n            SUBCOUNTY_NAME: '',\n            WARD_NAME: '',\n            SYS_STATUS_ID: 0,\n            CREATEDBY: props.user.EMAIL,\n            MODIFIEDBY: props.user.EMAIL,\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n            InsertUpdate: '',\n\n            openestatesearch: false,\n            openhousetypesearch: false,\n            openstatussearch: false,\n\n            ESTATENAME: '',\n            HOUSETYPEDESCRIPTION: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n\n            searchcolumns: [],\n\n            searchdata: [],\n            searchestatedata: [],\n            searchhousetypedata: [],\n            searchstatusdata: [],\n\n            searchFilteredEstateData: [],\n            searchFilteredHouseTypeData: [],\n            searchFilteredStatusData: [],\n\n            searchestatevalue: '',\n            searchhousetypevalue: '',\n            searchstatusvalue: '',\n\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n        this.handleShowEstateSearch = () => {\n            this.setState({ openestatesearch: true });\n        };\n        this.handleShowHouseTypeSearch = () => {\n            this.setState({ openhousetypesearch: true });\n        };\n        this.handleShowStatusSearch = () => {\n            this.setState({ openstatussearch: true });\n        };\n\n\n        this.handleHideEstateSearch = () => {\n            this.setState({ openestatesearch: false });\n        };\n        this.handleHideHouseTypeSearch = () => {\n            this.setState({ openhousetypesearch: false });\n        };\n\n        this.handleHideStatusSearch = () => {\n            this.setState({ openstatussearch: false });\n        };\n\n        this.populateData();\n        this.populateEstates();\n        this.populateHouseTypes();\n        this.populateStatus();\n\n    }\n\n\n\n    populateData() {\n        const getdata = `\n            query{\n                HouseDetails{\n                    HOUSE_DETAILS_ID\n                    HOUSE_NUMBER   \n                    TOTAL_HOUSES                 \n                    SET_ESTATE_ID   \n                    ESTATETYPE{\n                        ESTATE_ID\n                        ESTATE_NAME\n                        SET_SUBCOUNTY_ID\n                        SUB_COUNTY\n                    {\n                        SUBCOUNTY_NAME\n                    }\n                        SET_WARD_ID\n                        WARD\n                    {\n                        WARD_NAME\n                    }\n                    }\n                    SET_HOUSE_TYPE_ID   \n                    HOUSETYPE{\n                        HOUSE_TYPE_ID\n                        HOUSE_TYPE\n                    }\n                    SYS_STATUS_ID\n                    SYSTEMSTATUS{\n                        SYS_STATUS_ID\n                        SYS_STATUS_NAME\n                    }\n                    HOUSES_ALLOCATED\n                    HOUSES_REMAINING\n                    TOTAL_NUM_OF_HOUSES\n                    CREATEDBY\n                    MODIFIEDBY\n                    CREATED_DATE\n                    MODIFIED_DATE\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                data: data.data.HouseDetails\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load House Details Data');\n                }\n            })\n\n    }\n\n    populateEstates() {\n        const getdata = `\n            query {\n                Estates {\n                    ESTATE_ID,\n                    ESTATE_NAME,\n                    SET_SUBCOUNTY_ID,\n                    SUB_COUNTY\n                    {\n                        SUBCOUNTY_NAME\n                    }\n                    SET_WARD_ID\n                    WARD\n                    {\n                        WARD_NAME\n                    }\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchestatedata: data.data.Estates\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Estate Data');\n                }\n            })\n    }\n\n    populateHouseTypes() {\n        const getdata = `\n            query {\n                HouseTypes {\n                    HOUSE_TYPE_ID,\n                    HOUSE_TYPE\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchhousetypedata: data.data.HouseTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to House Types Data');\n                }\n            })\n    }\n\n    populateStatus() {\n        const getdata = `\n            query {\n                SystemStatusFilter (\n                    CATEGORY:\"SET\"\n                    ){\n                        SYS_STATUS_ID,\n                        SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchstatusdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to System Status');\n                }\n            })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const validate = event.currentTarget;\n        if (validate.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n\n            const form = `\n            mutation{\n                addHouseDetail(                    \n                    HOUSE_NUMBER:\"${this.state.HOUSE_NUMBER}\",  \n                    TOTAL_HOUSES:${this.state.TOTAL_HOUSES},\n                    SET_ESTATE_ID:${this.state.ESTATE_ID},                        \n                    SET_HOUSE_TYPE_ID:${this.state.HOUSE_TYPE_ID},                      \n                    SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                    CREATEDBY:\"${this.state.CREATEDBY}\",\n                    MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                    CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                    MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                    ){\n                        HOUSE_NUMBER\n                }\n            }\n            `;\n\n            const formEdit = `\n            mutation{\n                updateHouseDetail(\n                    HOUSE_DETAILS_ID:${this.state.HOUSE_DETAILS_ID},\n                    HOUSE_NUMBER:\"${this.state.HOUSE_NUMBER}\",      \n                    TOTAL_HOUSES:${this.state.TOTAL_HOUSES},             \n                    SET_ESTATE_ID:${this.state.ESTATE_ID},                        \n                    SET_HOUSE_TYPE_ID:${this.state.HOUSE_TYPE_ID},                      \n                    SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                    CREATEDBY:\"${this.state.CREATEDBY}\",\n                    MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                    CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                    MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                    ){\n                        HOUSE_DETAILS_ID\n                }\n            }\n            `;\n\n            if (this.state.InsertUpdate === 'Insert') {\n                API.create(form)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.success('Create Record', 'Record Created Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            } else {\n                API.update(formEdit)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.info('Update Record', 'Record Updated Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            }\n        }\n        this.setState({\n            validated: true\n        })\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteHouseDetail(\n                HOUSE_DETAILS_ID:${this.state.HOUSE_DETAILS_ID}\n                ){\n                    HOUSE_DETAILS_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleCloseEstateSearch = (e) => {\n\n        this.setState({\n            ESTATE_ID: e.ESTATE_ID,\n            ESTATENAME: e.ESTATE_NAME,\n            SUBCOUNTY_NAME: e.SUB_COUNTY.SUBCOUNTY_NAME,\n            WARD_NAME: e.WARD.WARD_NAME,\n            openestatesearch: false,\n        });\n\n    };\n\n    handleCloseHouseTypeSearch = (e) => {\n\n        this.setState({\n            HOUSE_TYPE_ID: e.HOUSE_TYPE_ID,\n            HOUSETYPEDESCRIPTION: e.HOUSE_TYPE,\n            openhousetypesearch: false,\n        });\n\n    };\n\n    handleCloseStatusSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            openstatussearch: false,\n        });\n\n    };\n\n    handleEditData = (e) => {\n        this.setState({\n            HOUSE_DETAILS_ID: e.HOUSE_DETAILS_ID,\n            HOUSE_NUMBER: e.HOUSE_NUMBER,\n            TOTAL_HOUSES: e.TOTAL_HOUSES,\n            SET_ESTATE_ID: e.SET_ESTATE_ID,\n            ESTATENAME: e.ESTATETYPE.ESTATE_NAME,\n            SET_HOUSE_TYPE_ID: e.SET_HOUSE_TYPE_ID,\n            HOUSETYPEDESCRIPTION: e.HOUSETYPE.HOUSE_TYPE,\n\n            SUBCOUNTY_NAME: e.ESTATETYPE.SUB_COUNTY.SUBCOUNTY_NAME,\n            WARD_NAME: e.ESTATETYPE.WARD.WARD_NAME,\n\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            HOUSE_DETAILS_ID: e.HOUSE_DETAILS_ID,\n            HOUSE_NUMBER: e.HOUSE_NUMBER,\n            TOTAL_HOUSES: e.TOTAL_HOUSES,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            HOUSE_NUMBER: '',\n            TOTAL_HOUSES: '',\n            SET_ESTATE_ID: '',\n            ESTATENAME: '',\n            SUBCOUNTY_NAME: '',\n            WARD_NAME: '',\n            SET_HOUSE_TYPE_ID: '',\n            HOUSETYPEDESCRIPTION: '',\n            SYS_STATUS_ID: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            validated: false\n\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.HOUSE_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.TOTAL_HOUSES.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.ESTATETYPE.ESTATE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.HOUSETYPE.HOUSE_TYPE.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.HOUSE_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.TOTAL_HOUSES.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.ESTATETYPE.ESTATE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.HOUSETYPE.HOUSE_TYPE.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    handleSearchEstateFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchestatedata\n        let filteredEstateData = this.state.searchFilteredEstateData\n        this.setState({ searchestatevalue: value });\n\n        if (value.length) {\n            filteredEstateData = data.filter(item => {\n                let startsWithCondition =\n                    item.ESTATE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.ESTATE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredEstateData })\n        }\n    }\n\n    handleSearchHouseTypeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchhousetypedata\n        let filteredHouseTypeData = this.state.searchFilteredHouseTypeData\n        this.setState({ searchhousetypevalue: value });\n\n        if (value.length) {\n            filteredHouseTypeData = data.filter(item => {\n                let startsWithCondition =\n                    item.HOUSE_TYPE.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.HOUSE_TYPE.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredHouseTypeData })\n        }\n    }\n\n    handleSearchStatusFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchstatusdata\n        let filteredStatusData = this.state.searchFilteredStatusData\n        this.setState({ searchstatusvalue: value });\n\n        if (value.length) {\n            filteredStatusData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredStatusData })\n        }\n    }\n\n\n\n    render() {\n\n        const { data, columns, value, filteredData, filteredEstateData, filteredHouseTypeData, filteredStatusData, searchestatevalue, searchhousetypevalue, searchstatusvalue, searchestatedata, searchhousetypedata, searchstatusdata } = this.state\n\n        return (\n            <>\n                <Helmet><title>House Details</title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"House Details\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>House Details</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n\n                                    <EstateSearch\n                                        handleSearchEstates={this.handleCloseEstateSearch}\n                                        opensearch={this.state.openestatesearch}\n                                        handleHideSearch={this.handleHideEstateSearch}\n                                        value={searchestatevalue}\n                                        data={searchestatedata}\n                                        handleFilter={this.handleSearchEstateFilter}\n                                        filteredData={filteredEstateData}\n                                    />\n\n                                    <HouseTypeSearch\n                                        handleSearchHouseTypes={this.handleCloseHouseTypeSearch}\n                                        opensearch={this.state.openhousetypesearch}\n                                        handleHideSearch={this.handleHideHouseTypeSearch}\n                                        value={searchhousetypevalue}\n                                        data={searchhousetypedata}\n                                        handleFilter={this.handleSearchHouseTypeFilter}\n                                        filteredData={filteredHouseTypeData}\n                                    />\n\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseStatusSearch}\n                                        opensearch={this.state.openstatussearch}\n                                        handleHideSearch={this.handleHideStatusSearch}\n                                        value={searchstatusvalue}\n                                        data={searchstatusdata}\n                                        handleFilter={this.handleSearchStatusFilter}\n                                        filteredData={filteredStatusData}\n                                    />\n\n                                    <HouseDetailsTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        columns={columns}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <HouseDetailsModal\n                                        validated={this.state.validated}\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowEstateSearch={this.handleShowEstateSearch}\n                                        handleShowHouseTypeSearch={this.handleShowHouseTypeSearch}\n                                        handleShowStatusSearch={this.handleShowStatusSearch}\n                                        HouseNumber={this.state.HOUSE_NUMBER}\n                                        changeHouseNumber={e => this.setState({ HOUSE_NUMBER: e.target.value })}\n                                        TotalHouses={this.state.TOTAL_HOUSES}\n                                        changeTotalHouses={e => this.setState({ TOTAL_HOUSES: e.target.value })}\n\n                                        SubCounty={this.state.SUBCOUNTY_NAME}\n                                        changeSubCounty={e => this.setState({ SUBCOUNTY_NAME: e.target.value })}\n\n                                        Ward={this.state.WARD_NAME}\n                                        changeWard={e => this.setState({ WARD_NAME: e.target.value })}\n\n                                        EstateName={this.state.ESTATENAME}\n                                        HouseTypeDescription={this.state.HOUSETYPEDESCRIPTION}\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n\n                                    />\n\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(HouseDetails));"],"sourceRoot":""}