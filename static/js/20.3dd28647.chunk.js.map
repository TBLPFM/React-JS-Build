{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","utility/dateAndTime.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/SearchComponents/ClientTypeSearch/ClientTypeSearch.js","views/pages/Registration/ClientRegistration/Tables/ClientRegistrationTable.js","views/pages/Registration/ClientRegistration/Modals/ClientRegistrationModal.js","views/pages/SearchComponents/ClientDocumentTypeSearch/ClientDocumentTypeSearch.js","views/pages/Registration/ClientRegistration/ClientRegistration.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","ShowDate","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","ClientTypeSearch","handleSearchClientType","CLIENT_TYPE_DESCRIPTION","ClientRegistrationTable","Button","handleEdit","handleDelete","CLIENT_REG_NUMBER","CLIENT_DOCUMENT_NUMBER","PIN_NUMBER","CITY","POSTAL_ADDRESS","POSTAL_CODE","TELEPHONE_NUMBER","MOBILE_NUMBER","EMAIL","WEBSITE","ClientTypes","Client_DocumentType","CLIENT_DOCUMENT_TYPE_NAME","SYSTEMSTATUS","subHeader","responsive","subHeaderComponent","ClientRegistrationModal","Modal","handleHide","id","InsertUpdate","Form","onSubmit","handleSubmit","autoComplete","Row","Group","Col","md","controlId","Label","Control","placeholder","changeEventandValidation","ErrorCLIENT_REG_NUMBER","CLIENT_NAME","ErrorCLIENT_NAME","ErrorCLIENT_DOCUMENT_NUMBER","CLIENT_TYPE_ID","hidden","aria-describedby","readOnly","variant","handleClientTypeSearch","ErrorCLIENT_TYPE_DESCRIPTION","CLIENT_DOCUMENT_TYPE_ID","handleClientDocumentTypeSearch","ErrorCLIENT_DOCUMENT_TYPE_NAME","ErrorPIN_NUMBER","ErrorPOSTAL_ADDRESS","ErrorCITY","ErrorPOSTAL_CODE","ErrorTELEPHONE_NUMBER","ErrorMOBILE_NUMBER","ErrorEMAIL","ErrorWEBSITE","SystemStatusTypeID","SystemStatusTypeDescription","handleShowSearch","ErrorStatus","Footer","isEnabled","showdelete","handleHideDelete","ClientDocumentTypeSearch","handleSearchClientDocumentType","Input","ClientRegistration","context","event","preventDefault","handleValidation","form","state","SYS_STATUS_ID","CREATEDBY","MODIFIEDBY","CREATEDDATE","MODIFIEDDATE","formEdit","CLIENT_ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","formDelete","warning","handleCloseSearch","setState","SYSTEMSTATUSTYPEDESCRIPTION","Dropdownvalidation","Dropdownvalidation1","Dropdownvalidation2","handleCloseClientTypeSearch","openClientTypeSearch","populateCDT","handleCloseCDTSearch","openCDTsearch","handleEditData","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","handleSearchClientTypeFilter","searchClientTypedata","filteredClientTypeData","searchFilteredData","searchClientTypevalue","handleSearchClientDocumentTypeFilter","searchCDTdata","filteredCDTData","searchCDTvalue","handleSearchFilter","searchdata","searchvalue","errors","searchcolumns","handleHideClientTypeSearch","handleHideCDTSearch","populateTypes","populateClientTypes","formIsValid","Clients","SystemStatusFilter","getdata","ClientDocumentTypesFilter","Helmet","Fragment","sm","Card","CardHeader","CardTitle","CardBody","constructor","handleChangeClientTypeID","connect"],"mappings":"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","file":"static/js/20.3dd28647.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","\nimport React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n      <Can I=\"create\" a={props.role} passThrough>\n          { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n        </Can>\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader\n","\nexport function ShowDate() {\n\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  return yyyy + '-' + mm + '-' + dd;\n}\n\n\nexport function ShowTime() {\n\n  let today = new Date();\n  let time = today.getHours() + \":\" + today.getMinutes();\n\n  return time;\n}\n","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass ClientTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchClientType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"CLIENT_TYPE_DESCRIPTION\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_TYPE_DESCRIPTION}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Client Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default ClientTypeSearch","import React from \"react\"\nimport {\n    Button\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\nclass ClientRegistrationTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            \n            {\n                name: \"Client Register Number\",\n                selector: \"CLIENT_REG_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_REG_NUMBER}</p>\n            }\n            ,\n            {\n                name: \"Client Name\",\n                selector: \"CLIENT_DOCUMENT_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_DOCUMENT_NUMBER}</p>\n            }\n            ,\n            {\n                name: \"Client Document Number\",\n                selector: \"CLIENT_DOCUMENT_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_DOCUMENT_NUMBER}</p>\n            }\n            ,\n            {\n                name: \"PIN Number\",\n                selector: \"PIN_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.PIN_NUMBER}</p>\n            }\n            ,\n            {\n                name: \"City\",\n                selector: \"CITY\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CITY}</p>\n            },\n            {\n                name: \"Postal Address\",\n                selector: \"POSTAL_ADDRESS\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.POSTAL_ADDRESS}</p>\n            },\n            {\n                name: \"Postal Code\",\n                selector: \"POSTAL_CODE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.POSTAL_CODE}</p>\n            },\n            {\n                name: \"Telephone Number\",\n                selector: \"TELEPHONE_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.TELEPHONE_NUMBER}</p>\n            },\n            {\n                name: \"Mobile Number\",\n                selector: \"MOBILE_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.MOBILE_NUMBER}</p>\n            },\n            {\n                name: \"Email\",\n                selector: \"EMAIL\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.EMAIL}</p>\n            },\n            {\n                name: \"Web Site\",\n                selector: \"WEBSITE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WEBSITE}</p>\n            },\n            {\n                name: \"Client Type Description\",\n                selector: \"CLIENT_TYPE_DESCRIPTION\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.ClientTypes.CLIENT_TYPE_DESCRIPTION}</p>\n            },\n            {\n                name: \"Client Document Type\",\n                selector: \"CLIENT_DOCUMENT_TYPE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.Client_DocumentType.CLIENT_DOCUMENT_TYPE_NAME}</p>\n            }\n             ,\n            {\n                name: \"Status\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYSTEMSTATUS.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n            <DataTable\n                className=\"dataTable-custom\"\n                data={this.props.value.length ? this.props.filteredData : this.props.data}\n                columns={this.tableProperties.columns}\n                noHeader\n                pagination\n                subHeader\n                striped\n                responsive\n                subHeaderComponent={\n                    <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                }\n            />\n            </>\n\n        )\n    }\n}\n\n\nexport default ClientRegistrationTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup, Col } from 'react-bootstrap';\nimport \"../../../../../assets/scss/plugins/forms/react-select/_react-select.scss\";\nimport { Search } from 'react-feather';\n\n\nclass ClientRegistrationModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                    size=\"lg\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Client Registration\n                        </Modal.Title>\n                    </Modal.Header>\n\n                    <Form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CLIENT_REG_NUMBER\">\n                                    <Form.Label>Client Register Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Client Register Number\"\n                                        value={this.props.CLIENT_REG_NUMBER}\n                                        onChange={this.props.changeEventandValidation}\n                                        name=\"CLIENT_REG_NUMBER\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorCLIENT_REG_NUMBER}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CLIENT_NAME\">\n                                    <Form.Label>Client Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Client Name\"\n                                        value={this.props.CLIENT_NAME}\n                                        onChange={this.props.changeEventandValidation}\n                                        name=\"CLIENT_NAME\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorCLIENT_NAME}\n                                    </div>\n                                </Form.Group>\n\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CLIENT_DOCUMENT_NUMBER\">\n                                    <Form.Label>Client Document Number</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter Client Document Number\"\n                                        value={this.props.CLIENT_DOCUMENT_NUMBER}\n                                        onChange={this.props.changeEventandValidation}\n                                        name=\"CLIENT_DOCUMENT_NUMBER\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorCLIENT_DOCUMENT_NUMBER}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CLIENT_TYPE_DESCRIPTION\">\n                                    <Form.Label>Client Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.CLIENT_TYPE_ID}\n                                            name=\"CLIENT_TYPE_ID\"\n                                            onChange={this.props.changeEventandValidation} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.CLIENT_TYPE_DESCRIPTION}\n                                            onChange={this.props.changeEventandValidation}\n                                            placeholder=\"Search Client Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            name=\"CLIENT_TYPE_DESCRIPTION\"\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleClientTypeSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorCLIENT_TYPE_DESCRIPTION}\n                                    </div>\n                                </Form.Group>\n\n                            </Form.Row>\n                            <Form.Row>\n\n                                <Form.Group as={Col} md=\"6\" controlId=\"CLIENT_DOCUMENT_TYPE_NAME\">\n                                    <Form.Label>Client Document Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.CLIENT_DOCUMENT_TYPE_ID}\n                                            name=\"CLIENT_DOCUMENT_TYPE_ID\"\n                                            onChange={this.props.changeEventandValidation} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.CLIENT_DOCUMENT_TYPE_NAME}\n                                            onChange={this.props.changeEventandValidation}\n                                            placeholder=\"Search Client Document Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            name=\"CLIENT_DOCUMENT_TYPE_NAME\"\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleClientDocumentTypeSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorCLIENT_DOCUMENT_TYPE_NAME}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"PIN_NUMBER\">\n                                    <Form.Label>PIN Number</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter PIN Number\"\n                                        value={this.props.PIN_NUMBER}\n                                        onChange={this.props.changeEventandValidation} name=\"PIN_NUMBER\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorPIN_NUMBER}\n                                    </div>\n                                </Form.Group>\n\n\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"POSTAL_ADDRESS\">\n                                    <Form.Label>Postal Address</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Postal Address\"\n                                        value={this.props.POSTAL_ADDRESS}\n                                        onChange={this.props.changeEventandValidation}\n                                        name=\"POSTAL_ADDRESS\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorPOSTAL_ADDRESS}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CITY\">\n                                    <Form.Label>City</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter City\"\n                                        value={this.props.CITY}\n                                        onChange={this.props.changeEventandValidation} name=\"CITY\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorCITY}\n                                    </div>\n                                </Form.Group>\n\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"POSTAL_CODE\">\n                                    <Form.Label>Postal Code</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter Postal Code\"\n                                        value={this.props.POSTAL_CODE}\n                                        onChange={this.props.changeEventandValidation}\n                                        name=\"POSTAL_CODE\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorPOSTAL_CODE}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"TELEPHONE_NUMBER\">\n                                    <Form.Label>Telephone number</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter Telephone number\"\n                                        value={this.props.TELEPHONE_NUMBER}\n                                        onChange={this.props.changeEventandValidation}\n                                        name=\"TELEPHONE_NUMBER\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorTELEPHONE_NUMBER}\n                                    </div>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"MOBILE_NUMBER\">\n                                    <Form.Label>Mobile Number</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter Mobile Number\"\n                                        value={this.props.MOBILE_NUMBER}\n                                        onChange={this.props.changeEventandValidation}\n                                        name=\"MOBILE_NUMBER\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorMOBILE_NUMBER}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"EMAIL\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Email\"\n                                        value={this.props.EMAIL}\n                                        onChange={this.props.changeEventandValidation} name=\"EMAIL\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorEMAIL}\n                                    </div>\n                                </Form.Group>\n\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"WEBSITE\">\n                                    <Form.Label>WebSite</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter WebSite\"\n                                        value={this.props.WEBSITE}\n                                        onChange={this.props.changeEventandValidation}\n                                        name=\"WEBSITE\" />\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorWEBSITE}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"SystemStatusType\">\n                                    <Form.Label>System Status Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.SystemStatusTypeID}\n                                            onChange={this.props.changeEventandValidation} hidden name=\"StatusID\" />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.SystemStatusTypeDescription}\n                                            // onChange={this.props.handleChangeSystemStatusTypeDescription}\n                                            placeholder=\"Search System Status Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            //required\n                                            onChange={this.props.changeEventandValidation}\n                                            readOnly\n                                            name=\"Status\"\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                    <div className=\"invalid-feedback d-block\">\n                                        {this.props.ErrorStatus}\n                                    </div>\n                                </Form.Group>\n                            </Form.Row>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete Client\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.CLIENT_NAME} onChange={this.props.CLIENT_NAME} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ClientRegistrationModal;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass ClientDocumentTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchClientDocumentType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Client Document Type Name\",\n                selector: \"CLIENT_DOCUMENT_TYPE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_DOCUMENT_TYPE_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Client Dcoument Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default ClientDocumentTypeSearch","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\";\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport ClientRegistrationTable from './Tables/ClientRegistrationTable';\nimport ClientRegistrationModal from './Modals/ClientRegistrationModal';\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport ClientTypeSearch from '../../SearchComponents/ClientTypeSearch/ClientTypeSearch';\nimport ClientDocumentTypeSearch from '../../SearchComponents/ClientDocumentTypeSearch/ClientDocumentTypeSearch';\n\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr';\n\nclass ClientRegistration extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        var Dropdownvalidation=0;\n        var Dropdownvalidation1=0;\n        var Dropdownvalidation2=0;\n        this.state = {\n            errors: {},\n            columns: [],\n            data: [],\n            filteredData: [],\n            filteredClientTypeData: [],\n            filteredCDTData: [],\n\n            value: '',\n            show: false,\n            showdelete: false,\n            CLIENT_ID: 0,\n            CLIENT_NAME: '',\n            CLIENT_REG_NUMBER:'',\n            CLIENT_DOCUMENT_NUMBER: '',\n            \n            PIN_NUMBER: '',\n            POSTAL_ADDRESS: '',\n            CITY: '',\n            POSTAL_CODE: '',\n            TELEPHONE_NUMBER: '',\n            MOBILE_NUMBER: '',\n            EMAIL: '',\n            WEBSITE: '',\n            CLIENT_DOCUMENT_TYPE_ID: 0,\n\n            CLIENT_TYPE_ID: 0,\n            SYS_STATUS_ID: 0,\n            CREATEDBY: \"Test M\",\n            MODIFIEDBY: \"Test M\",\n            CREATEDDATE: Date.ShowDate(),\n            MODIFIEDDATE: Date.ShowDate(),\n            InsertUpdate: '',\n\n            opensearch: false,\n            openClientTypeSearch: false,\n\n            openCDTsearch: false,\n\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            CLIENT_DOCUMENT_TYPE_NAME: '',\n\n            CLIENT_TYPE_DESCRIPTION: '',\n            searchcolumns: [],\n            searchdata: [],\n            searchCDTdata: [],\n            searchClientTypedata: [],\n\n\n            searchFilteredData: [],\n            searchvalue: '',\n            searchClientTypevalue: '',\n\n            searchCDTvalue: '',\n\n\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n        this.handleShowSearch = () => {\n            this.setState({ opensearch: true });\n        };\n        this.handleClientTypeSearch = () => {\n            this.setState({ openClientTypeSearch: true });\n        };\n     \n        this.handleClientDocumentTypeSearch = () => {\n            this.setState({ openCDTsearch: true });\n        };\n        this.handleHideSearch = () => {\n            this.setState({ opensearch: false });\n        };\n\n        this.handleHideClientTypeSearch = () => {\n            this.setState({ openClientTypeSearch: false });\n        };\n      \n\n        this.handleHideCDTSearch = () => {\n            this.setState({ openCDTsearch: false });\n        };\n\n\n        this.populateData();\n        this.populateTypes();\n        this.populateClientTypes();\n  \n       \n\n    }\n    handleValidation() {\n\n                let errors = {};\n                let formIsValid = true;\n        \n                if (!this.state.CLIENT_REG_NUMBER) {\n                    formIsValid = false;\n                    errors[\"CLIENT_REG_NUMBER\"] = \"Please Enter Client Registration Number\";\n                }\n                if (!this.state.CLIENT_NAME) {\n                    formIsValid = false;\n                    errors[\"CLIENT_NAME\"] = \"Please Enter Client Name\";\n                }\n\n                if (!this.state.CLIENT_DOCUMENT_NUMBER) {\n                    formIsValid = false;\n                    errors[\"CLIENT_DOCUMENT_NUMBER\"] = \"Please Enter Client Document Number\";\n                }\n                if (!this.state.PIN_NUMBER) {\n                    formIsValid = false;\n                    errors[\"PIN_NUMBER\"] = \"Please Enter PIN Number\";\n                }\n\n                if (!this.state.POSTAL_ADDRESS) {\n                    formIsValid = false;\n                    errors[\"POSTAL_ADDRESS\"] = \"Please Enter Postal Address\";\n                }\n                if (!this.state.CITY) {\n                    formIsValid = false;\n                    errors[\"CITY\"] = \"Please Enter City\";\n                }\n\n                if (!this.state.POSTAL_CODE) {\n                    formIsValid = false;\n                    errors[\"POSTAL_CODE\"] = \"Please Enter Postal Code\";\n                }\n                if (!this.state.TELEPHONE_NUMBER) {\n                    formIsValid = false;\n                    errors[\"TELEPHONE_NUMBER\"] = \"Please Enter Telephone Number\";\n                }\n\n                if (!this.state.MOBILE_NUMBER) {\n                    formIsValid = false;\n                    errors[\"MOBILE_NUMBER\"] = \"Please Enter Mobile Number\";\n                }\n                if (!this.state.EMAIL) {\n                    formIsValid = false;\n                    errors[\"EMAIL\"] = \"Please Enter Email\";\n                }\n                if (!this.state.WEBSITE) {\n                    formIsValid = false;\n                    errors[\"WEBSITE\"] = \"Please Enter WebSite\";\n                }\n                if (!this.state.CLIENT_DOCUMENT_TYPE_NAME) {\n                    formIsValid = false;\n                    errors[\"CLIENT_DOCUMENT_TYPE_NAME\"] = \"Please Select Client Document Type\";\n                }\n                if (!this.state.CLIENT_DOCUMENT_TYPE_ID) {\n                    formIsValid = false;\n                    errors[\"CLIENT_DOCUMENT_TYPE_NAME\"] = \"Please Select Client Document Type\";\n                }\n                if(this.Dropdownvalidation1===1)\n                {\n                    errors[\"CLIENT_DOCUMENT_TYPE_NAME\"] = \"\";\n                    this.Dropdownvalidation1=0;\n                }\n\n                if (!this.state.CLIENT_TYPE_DESCRIPTION) {\n                    formIsValid = false;\n                    errors[\"CLIENT_TYPE_DESCRIPTION\"] = \"Please Select Client Type\";\n                }\n                if (!this.state.SYS_STATUS_ID) {\n                    formIsValid = false;\n                    errors[\"CLIENT_TYPE_DESCRIPTION\"] = \"Please Select Client Type\";\n                }\n                if(this.Dropdownvalidation2===1)\n                {\n                    errors[\"CLIENT_TYPE_DESCRIPTION\"] = \"\";\n                    this.Dropdownvalidation2=0;\n                }\n\n                if (!this.state.SYSTEMSTATUSTYPEDESCRIPTION) {\n                    formIsValid = false;\n                    errors[\"Status\"] = \"Please Select Status\";\n                }\n                if (!this.state.SYS_STATUS_ID) {\n                    formIsValid = false;\n                    errors[\"Status\"] = \"Please Select Status\";\n                }\n                if(this.Dropdownvalidation===1)\n                {\n                    errors[\"Status\"] = \"\";\n                    this.Dropdownvalidation=0;\n                }\n               this.setState({errors: errors});\n               return formIsValid;\n            }\n    populateData() {\n        const getdata = `\n        query {\n            Clients  {\n               CLIENT_ID\n                CLIENT_NAME\n                CLIENT_REG_NUMBER\n                CLIENT_TYPE_ID\n                ClientTypes{\n                CLIENT_TYPE_ID\n                CLIENT_TYPE_DESCRIPTION\n                }\n                CLIENT_DOCUMENT_TYPE_ID\n                Client_DocumentType\n                {\n                CLIENT_DOCUMENT_TYPE_ID\n                CLIENT_DOCUMENT_TYPE_NAME\n                }\n                CLIENT_DOCUMENT_NUMBER\n                PIN_NUMBER\n                POSTAL_ADDRESS\n                CITY\n                POSTAL_CODE\n                TELEPHONE_NUMBER\n                MOBILE_NUMBER\n                EMAIL\n                WEBSITE\n                SYS_STATUS_ID\n                SYSTEMSTATUS{\n                    SYS_STATUS_ID,\n                    SYS_STATUS_NAME\n                },\n                    CREATEDBY\n                    MODIFIEDBY\n                    CREATED_DATE\n                    MODIFIED_DATE \n            }\n        }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                data: data.data.Clients\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    populateTypes() {\n        const getdata = `\n            query {\n                SystemStatusFilter (\n                    CATEGORY:\"SET\"\n                    ){\n                        SYS_STATUS_ID,\n                        SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to System Status Type Load Data');\n                }\n            })\n    }\n\n    populateClientTypes() {\n        const getdata = `\n            query {\n                ClientTypes{\n                    CLIENT_TYPE_ID\n                    CLIENT_TYPE_DESCRIPTION\n                  }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchClientTypedata: data.data.ClientTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Client Type Load Data');\n                }\n            })\n    }\n     \n\n    populateCDT(value) {\n        const getdata = `\n            query {\n                ClientDocumentTypesFilter\n                (\n                    SET_CLIENT_TYPE_ID:${value}\n                    )\n                {\n                  CLIENT_DOCUMENT_TYPE_ID\n                  CLIENT_DOCUMENT_TYPE_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchCDTdata: data.data.ClientDocumentTypesFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Client Document Type Load Data');\n                }\n            })\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.handleValidation()) {\n        const form = `\n        mutation{\n            addClient(\n                CLIENT_NAME:\"${this.state.CLIENT_NAME}\",\n                CLIENT_REG_NUMBER:\"${this.state.CLIENT_REG_NUMBER}\",\n                \n                CLIENT_DOCUMENT_NUMBER:\"${this.state.CLIENT_DOCUMENT_NUMBER}\",\n                POSTAL_ADDRESS:\"${this.state.POSTAL_ADDRESS}\",\n                PIN_NUMBER:\"${this.state.PIN_NUMBER}\",\n                CITY:\"${this.state.CITY}\",\n                POSTAL_CODE:\"${this.state.POSTAL_CODE}\",\n                TELEPHONE_NUMBER:\"${this.state.TELEPHONE_NUMBER}\",\n                MOBILE_NUMBER:\"${this.state.MOBILE_NUMBER}\",\n                EMAIL:\"${this.state.EMAIL}\",\n                WEBSITE:\"${this.state.WEBSITE}\",\n                CLIENT_DOCUMENT_TYPE_ID:${this.state.CLIENT_DOCUMENT_TYPE_ID},\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CLIENT_TYPE_ID:${this.state.CLIENT_TYPE_ID},\n                CREATEDBY:\"${this.state.CREATEDBY}\",\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                CREATED_DATE:\"${this.state.CREATEDDATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIEDDATE}\"\n                ){\n                    CLIENT_ID\n            }\n        }\n        `;\n        \n        const formEdit = `\n        mutation{\n            updateClient(\n                CLIENT_ID:${this.state.CLIENT_ID},\n                CLIENT_NAME:\"${this.state.CLIENT_NAME}\",\n                CLIENT_REG_NUMBER:\"${this.state.CLIENT_REG_NUMBER}\",\n\n                CLIENT_DOCUMENT_NUMBER:\"${this.state.CLIENT_DOCUMENT_NUMBER}\",\n                POSTAL_ADDRESS:\"${this.state.POSTAL_ADDRESS}\",\n                PIN_NUMBER:\"${this.state.PIN_NUMBER}\",\n                CITY:\"${this.state.CITY}\",\n                POSTAL_CODE:\"${this.state.POSTAL_CODE}\",\n                TELEPHONE_NUMBER:\"${this.state.TELEPHONE_NUMBER}\",\n                MOBILE_NUMBER:\"${this.state.MOBILE_NUMBER}\",\n                EMAIL:\"${this.state.EMAIL}\",\n                WEBSITE:\"${this.state.WEBSITE}\",\n                CLIENT_DOCUMENT_TYPE_ID:${this.state.CLIENT_DOCUMENT_TYPE_ID},\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CLIENT_TYPE_ID:${this.state.CLIENT_TYPE_ID},\n                CREATED_DATE:\"${this.state.CREATEDDATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIEDDATE}\"\n                ){\n                    CLIENT_ID\n            }\n        }\n        `;\n\n        if (this.state.InsertUpdate === 'Insert') {\n            API.create(form)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.success('Create Record', 'Record Created Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        } else {\n            API.update(formEdit)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.info('Update Record', 'Record Updated Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        }\n    }\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n        const formDelete = `\n        mutation{\n            deleteClient(\n                CLIENT_ID:${this.state.CLIENT_ID}\n                ){\n                    CLIENT_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleCloseSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            opensearch: false,\n        });\n        this.Dropdownvalidation=1;\n        this.Dropdownvalidation1=1;\n        this.Dropdownvalidation2=1;\n        this.handleValidation();\n    };\n\n\n    handleCloseClientTypeSearch = (e) => {\n\n        this.setState({\n            CLIENT_TYPE_ID: e.CLIENT_TYPE_ID,\n            CLIENT_TYPE_DESCRIPTION: e.CLIENT_TYPE_DESCRIPTION,\n            openClientTypeSearch: false,\n        });\n        this.populateCDT(e.CLIENT_TYPE_ID) ;\n\n    };\n\n \n\n    handleCloseCDTSearch = (e) => {\n        this.setState({\n            CLIENT_DOCUMENT_TYPE_ID: e.CLIENT_DOCUMENT_TYPE_ID,\n            CLIENT_DOCUMENT_TYPE_NAME: e.CLIENT_DOCUMENT_TYPE_NAME,\n            openCDTsearch: false,\n        });\n    };\n\n\n    handleEditData = (e) => {\n        this.setState({\n            CLIENT_ID: e.CLIENT_ID,\n            CLIENT_NAME: e.CLIENT_NAME,\n            CLIENT_REG_NUMBER: e.CLIENT_REG_NUMBER,\n            \n            CLIENT_DOCUMENT_NUMBER: e.CLIENT_DOCUMENT_NUMBER,\n            POSTAL_ADDRESS: e.POSTAL_ADDRESS,\n            PIN_NUMBER: e.PIN_NUMBER,\n            CITY: e.CITY,\n            POSTAL_CODE: e.POSTAL_CODE,\n            TELEPHONE_NUMBER: e.TELEPHONE_NUMBER,\n            MOBILE_NUMBER: e.MOBILE_NUMBER,\n            EMAIL: e.EMAIL,\n            WEBSITE: e.WEBSITE,\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            CLIENT_DOCUMENT_TYPE_ID: e.CLIENT_DOCUMENT_TYPE_ID,\n            CLIENT_TYPE_ID: e.CLIENT_TYPE_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\n            CLIENT_TYPE_DESCRIPTION: e.ClientTypes.CLIENT_TYPE_DESCRIPTION,\n            CLIENT_DOCUMENT_TYPE_NAME: e.Client_DocumentType.CLIENT_DOCUMENT_TYPE_NAME,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n        this.populateCDT(e.ClientTypes.CLIENT_TYPE_ID) ;\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            CLIENT_ID: e.CLIENT_ID,\n            CLIENT_NAME: e.CLIENT_NAME,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            CLIENT_NAME: '',\n            CLIENT_REG_NUMBER:'',\n            CLIENT_DOCUMENT_NUMBER: '',\n            POSTAL_ADDRESS: '',\n            PIN_NUMBER: '',\n            CITY: '',\n            POSTAL_CODE: '',\n            TELEPHONE_NUMBER: '',\n            MOBILE_NUMBER: '',\n            EMAIL: '',\n            WEBSITE: '',\n            SYS_STATUS_ID: '',\n            CLIENT_TYPE_ID: '',\n            CLIENT_DOCUMENT_TYPE_ID: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            CLIENT_DOCUMENT_TYPE_NAME: '',\n            CLIENT_TYPE_DESCRIPTION: ''\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENT_REG_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase())\n                    \n\n                let includesCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENT_REG_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    handleSearchClientTypeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchClientTypedata\n        let filteredClientTypeData = this.state.searchFilteredData\n        this.setState({ searchClientTypevalue: value });\n\n        if (value.length) {\n            filteredClientTypeData = data.filter(item => {\n                let startsWithCondition =\n                    item.CLIENT_TYPE_DESCRIPTION.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.CLIENT_TYPE_DESCRIPTION.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredClientTypeData })\n        }\n    }\n\n     \n    handleSearchClientDocumentTypeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchCDTdata\n        let filteredCDTData = this.state.searchFilteredData\n        this.setState({ searchCDTvalue: value });\n\n        if (value.length) {\n            filteredCDTData = data.filter(item => {\n                let startsWithCondition =\n                    item.CLIENT_DOCUMENT_TYPE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.CLIENT_DOCUMENT_TYPE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredCDTData })\n        }\n    }\n    handleSearchFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchdata\n        let filteredData = this.state.searchFilteredData\n        this.setState({ searchvalue: value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n    changeEventandValidation = (e) => {\n        \n                if (e.target.name === \"CLIENT_REG_NUMBER\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        CLIENT_REG_NUMBER: e.target.value\n                    });\n                }\n                if (e.target.name === \"CLIENT_NAME\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        CLIENT_NAME: e.target.value\n                    });\n                }\n\n                if (e.target.name === \"CLIENT_DOCUMENT_NUMBER\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        CLIENT_DOCUMENT_NUMBER: e.target.value\n                    });\n                }\n                if (e.target.name === \"PIN_NUMBER\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        PIN_NUMBER: e.target.value\n                    });\n                }\n\n                  if (e.target.name === \"POSTAL_ADDRESS\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        POSTAL_ADDRESS: e.target.value\n                    });\n                }\n                if (e.target.name === \"CITY\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        CITY: e.target.value\n                    });\n                }\n\n                if (e.target.name === \"POSTAL_CODE\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        POSTAL_CODE: e.target.value\n                    });\n                }\n                if (e.target.name === \"TELEPHONE_NUMBER\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        TELEPHONE_NUMBER: e.target.value\n                    });\n                }\n\n                if (e.target.name === \"MOBILE_NUMBER\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        MOBILE_NUMBER: e.target.value\n                    });\n                }\n                if (e.target.name === \"EMAIL\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        EMAIL: e.target.value\n                    });\n                }\n                if (e.target.name === \"WEBSITE\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        WEBSITE: e.target.value\n                    });\n                }\n                if (e.target.name === \"CLIENT_DOCUMENT_TYPE_NAME\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        CLIENT_DOCUMENT_TYPE_NAME: e.target.value\n                    });\n        \n                }\n                if (e.target.name === \"CLIENT_DOCUMENT_TYPE_ID\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        CLIENT_DOCUMENT_TYPE_ID: e.target.value\n                    });\n                }\n                if (e.target.name === \"CLIENT_TYPE_DESCRIPTION\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        CLIENT_TYPE_DESCRIPTION: e.target.value\n                    });\n        \n                }\n                if (e.target.name === \"CLIENT_TYPE_ID\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        CLIENT_TYPE_ID: e.target.value\n                    });\n                }\n                if (e.target.name === \"Status\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        SYSTEMSTATUSTYPEDESCRIPTION: e.target.value\n                    });\n        \n                }\n                if (e.target.name === \"StatusID\") {\n                    this.setState({\n                        [e.target.name]: e.target.value,\n                        SYS_STATUS_ID: e.target.value\n                    });\n                }\n                this.handleValidation();\n        \n            };\n    render() {\n        const { data, value, filteredData, filteredClientTypeData,  filteredCDTData, \n            searchdata, searchClientTypedata,  searchCDTdata, \n            searchvalue, searchClientTypevalue,  searchCDTvalue } = this.state\n        return (\n            <>\n                <Helmet><title>Client Registration</title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"Client Registration\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Client Registration</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseSearch}\n                                        opensearch={this.state.opensearch}\n                                        handleHideSearch={this.handleHideSearch}\n                                        value={searchvalue}\n                                        data={searchdata}\n                                        handleFilter={this.handleSearchFilter}\n                                        filteredData={filteredData}\n                                    />\n                               \n                                    <ClientDocumentTypeSearch\n                                        handleSearchClientDocumentType={this.handleCloseCDTSearch}\n                                        opensearch={this.state.openCDTsearch}\n                                        handleHideSearch={this.handleHideCDTSearch}\n                                        value={searchCDTvalue}\n                                        data={searchCDTdata}\n                                        handleFilter={this.handleSearchClientDocumentTypeFilter}\n                                        filteredData={filteredCDTData}\n                                    />\n                                    <ClientTypeSearch\n                                        handleSearchClientType={this.handleCloseClientTypeSearch}\n                                        opensearch={this.state.openClientTypeSearch}\n                                        handleHideSearch={this.handleHideClientTypeSearch}\n                                        value={searchClientTypevalue}\n                                        data={searchClientTypedata}\n                                        handleFilter={this.handleSearchClientTypeFilter}\n                                        filteredData={filteredClientTypeData}\n                                    />\n\n\n                                    <ClientRegistrationTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <ClientRegistrationModal\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowSearch={this.handleShowSearch}\n                                        handleClientTypeSearch={this.handleClientTypeSearch}\n                                        handleClientDocumentTypeSearch={this.handleClientDocumentTypeSearch}\n\n                                        changeEventandValidation={this.changeEventandValidation}\n                                        ErrorWEBSITE={this.state.errors[\"WEBSITE\"]}\n                                        ErrorEMAIL={this.state.errors[\"EMAIL\"]}\n                                        ErrorMOBILE_NUMBER={this.state.errors[\"MOBILE_NUMBER\"]}\n                                        ErrorTELEPHONE_NUMBER={this.state.errors[\"TELEPHONE_NUMBER\"]}\n                                        ErrorStatus={this.state.errors[\"Status\"]}\n                                        ErrorPOSTAL_CODE={this.state.errors[\"POSTAL_CODE\"]}\n                                        ErrorCITY={this.state.errors[\"CITY\"]}\n                                        ErrorPOSTAL_ADDRESS={this.state.errors[\"POSTAL_ADDRESS\"]}\n                                        ErrorPIN_NUMBER={this.state.errors[\"PIN_NUMBER\"]}\n                                        ErrorCLIENT_DOCUMENT_TYPE_NAME={this.state.errors[\"CLIENT_DOCUMENT_TYPE_NAME\"]}\n                                        ErrorCLIENT_TYPE_DESCRIPTION={this.state.errors[\"CLIENT_TYPE_DESCRIPTION\"]}\n                                        ErrorCLIENT_DOCUMENT_NUMBER={this.state.errors[\"CLIENT_DOCUMENT_NUMBER\"]}\n                                        ErrorCLIENT_NAME={this.state.errors[\"CLIENT_NAME\"]}\n                                        ErrorCLIENT_REG_NUMBER={this.state.errors[\"CLIENT_REG_NUMBER\"]}\n\n                                        SystemStatusTypeID={this.state.SYS_STATUS_ID}\n\n                                        CLIENT_DOCUMENT_TYPE_ID={this.state.CLIENT_DOCUMENT_TYPE_ID}\n\n                                        CLIENT_DOCUMENT_TYPE_NAME={this.state.CLIENT_DOCUMENT_TYPE_NAME}\n\n                                        CLIENT_TYPE_ID={this.state.CLIENT_TYPE_ID}\n                                        handleChangeClientTypeID={e => this.setState({ CLIENT_TYPE_ID: e.target.value })}\n\n                                        CLIENT_TYPE_DESCRIPTION={this.state.CLIENT_TYPE_DESCRIPTION}\n\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n\n                                        CLIENT_NAME={this.state.CLIENT_NAME}\n\n                                        CLIENT_REG_NUMBER={this.state.CLIENT_REG_NUMBER}\n\n\n                                        CLIENT_DOCUMENT_NUMBER={this.state.CLIENT_DOCUMENT_NUMBER}\n\n                                        POSTAL_ADDRESS={this.state.POSTAL_ADDRESS}\n\n                                        PIN_NUMBER={this.state.PIN_NUMBER}\n\n                                        CITY={this.state.CITY}\n\n                                        POSTAL_CODE={this.state.POSTAL_CODE}\n\n                                        TELEPHONE_NUMBER={this.state.TELEPHONE_NUMBER}\n\n                                        MOBILE_NUMBER={this.state.MOBILE_NUMBER}\n\n                                        EMAIL={this.state.EMAIL}\n\n                                        WEBSITE={this.state.WEBSITE}\n\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n\n                                    />\n\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(ClientRegistration));"],"sourceRoot":""}