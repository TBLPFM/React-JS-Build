{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/SearchComponents/SubCountyTypeSearch/SubCountyTypeSearch.js","views/pages/SearchComponents/WardsSearch/WardsSearch.js","views/pages/Setups/Estates/Tables/EstatesTable.js","views/pages/Setups/Estates/Modals/EstatesModal.js","views/pages/Setups/Estates/Estates.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","hasOwnProperty","createButton","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","SubCountySearch","handleSearchSubCounty","SUBCOUNTY_NAME","paginationPerPage","WardsSearch","handleSearchWards","WARD_NAME","EstatesTable","Button","handleEdit","handleDelete","ESTATE_NAME","SUB_COUNTY","WARD","SYSTEMSTATUS","subHeader","responsive","subHeaderComponent","EstatesModal","Modal","handleHide","id","InsertUpdate","Form","noValidate","validated","onSubmit","handleSubmit","autoComplete","Row","Group","Col","md","controlId","Label","Control","placeholder","EstateName","changeEstateName","required","Feedback","SubCountyName","aria-describedby","variant","handleShowSubCounty","WardName","handleShowWard","SystemStatusTypeDescription","handleShowSearch","Footer","isEnabled","showdelete","handleHideDelete","readOnly","Estates","context","event","preventDefault","currentTarget","checkValidity","stopPropagation","form","state","SYS_STATUS_ID","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","SET_SUBCOUNTY_ID","SET_WARD_ID","formEdit","ESTATE_ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","setState","formDelete","warning","handleCloseSearch","SYSTEMSTATUSTYPEDESCRIPTION","handleCloseSubCountySearch","SUBCOUNTY_ID","opensubcountysearch","populateWard","handleCloseWardSearch","WARD_ID","openwardsearch","handleEditData","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","handleSearchFilter","searchdata","searchFilteredData","searchvalue","handleSearchSubCountyFilter","searchsubcountydata","filteredSubCountyData","searchFilteredSubCountyData","searchsubcountyvalue","handleSearchWardFilter","searchwarddata","filteredWardData","searchFilteredWardData","searchwardvalue","showStatus","EMAIL","Date","searchcolumns","handleShowSubCountySearch","handleShowWardSearch","handleHideSubCountySearch","handleHideWardSearch","populateStatus","populateSubCounty","SubCounties","getdata","WardFilter","SystemStatusFilter","Helmet","Fragment","sm","Card","CardHeader","CardTitle","CardBody","SubCountyTypeSearch","constructor","connect"],"mappings":"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","file":"static/js/29.03f1f2d1.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n        { \n          (!props.hasOwnProperty('createButton') || (props.hasOwnProperty('createButton') && props.createButton)) ? (\n            <Can I=\"create\" a={props.role} passThrough>\n              { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n            </Can>\n          ) : (\"\")\n        }\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport { Button, Input } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SubCountySearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSubCounty(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"SUBCOUNTY NAME\",\n                selector: \"SUBCOUNTY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SUBCOUNTY_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Sub County Name\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                            paginationPerPage={5}\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SubCountySearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass WardsSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchWards(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Wards\",\n                selector: \"WARD_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WARD_NAME}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Ward\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default WardsSearch","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\nclass EstatesTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"Estate Name\",\n                selector: \"ESTATE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.ESTATE_NAME}</p>\n            },\n            {\n                name: \"Subcounty Name\",\n                selector: \"SUBCOUNTY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SUB_COUNTY.SUBCOUNTY_NAME}</p>\n            },\n            {\n                name: \"Ward Name\",\n                selector: \"WARD_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WARD.WARD_NAME}</p>\n            },\n            {\n                name: \"Status\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYSTEMSTATUS.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n                <DataTable\n                    className=\"dataTable-custom\"\n                    data={this.props.value.length ? this.props.filteredData : this.props.data}\n                    columns={this.tableProperties.columns}\n                    noHeader\n                    pagination\n                    subHeader\n                    striped\n                    responsive\n                    subHeaderComponent={\n                        <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                    }\n                />\n            </>\n\n        )\n    }\n}\n\n\nexport default EstatesTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup, Col } from 'react-bootstrap';\nimport \"../../../../../assets/scss/plugins/forms/react-select/_react-select.scss\";\nimport { Search } from 'react-feather';\n\nclass EstatesModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                    size='lg'\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Estates\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form noValidate validated={this.props.validated} onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"EstateName\">\n                                    <Form.Label>Estate Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Estate Name\"\n                                        value={this.props.EstateName}\n                                        onChange={this.props.changeEstateName} required\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please enter Estate Name.\n                                 </Form.Control.Feedback>\n\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"SubCounty\">\n                                    <Form.Label>SubCounty</Form.Label>\n                                    <InputGroup>\n\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.SubCountyName}\n                                            placeholder=\"Search SubCounty\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSubCounty}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select SubCounty.\n                                 </Form.Control.Feedback>\n                                    </InputGroup>\n\n                                </Form.Group>\n\n\n                            </Form.Row>\n                            <Form.Row>\n\n                                <Form.Group as={Col} md=\"6\" controlId=\"Ward\">\n                                    <Form.Label>Ward</Form.Label>\n                                    <InputGroup>\n\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.WardName}\n                                            placeholder=\"Search Ward\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowWard}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select Ward.\n                                 </Form.Control.Feedback>\n                                    </InputGroup>\n\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"SystemStatusType\">\n                                    <Form.Label>System Status Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.SystemStatusTypeDescription}\n                                            placeholder=\"Search System Status Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select Status.\n                                 </Form.Control.Feedback>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete Estate\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"EstateName\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.EstateName} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default EstatesModal;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\";\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport EstatesTable from './Tables/EstatesTable';\nimport EstatesModal from './Modals/EstatesModal';\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr';\nimport SubCountyTypeSearch from '../../SearchComponents/SubCountyTypeSearch/SubCountyTypeSearch';\nimport WardsSearch from '../../SearchComponents/WardsSearch/WardsSearch';\nclass Estates extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            validated: false,\n            columns: [],\n            data: [],\n            filteredData: [],\n            value: '',\n            show: false,\n            showStatus: true,\n            showdelete: false,\n            ESTATE_ID: 0,\n            ESTATE_NAME: '',\n            SYS_STATUS_ID: 0,\n            CREATEDBY: props.user.EMAIL,\n            MODIFIEDBY: props.user.EMAIL,\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            SUBCOUNTY_NAME: '',\n            WARD_NAME: '',\n            SET_SUBCOUNTY_ID: 0,\n            SET_WARD_ID: 0,\n            InsertUpdate: '',\n            opensearch: false,\n            searchcolumns: [],\n            searchdata: [],\n            searchFilteredData: [],\n            searchvalue: '',\n            opensubcountysearch: false,\n            searchFilteredSubCountyData: [],\n            searchsubcountyvalue: '',\n            openwardsearch: false,\n            searchFilteredWardData: [],\n            searchwardvalue: '',\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n        this.handleShowSearch = () => {\n            this.setState({ opensearch: true });\n        };\n        this.handleShowSubCountySearch = () => {\n            this.setState({ opensubcountysearch: true });\n        };\n        this.handleShowWardSearch = () => {\n            this.setState({ openwardsearch: true });\n        };\n        this.handleHideSearch = () => {\n            this.setState({ opensearch: false });\n        };\n        this.handleHideSubCountySearch = () => {\n            this.setState({ opensubcountysearch: false });\n        };\n        this.handleHideWardSearch = () => {\n            this.setState({ openwardsearch: false });\n        };\n        this.populateData();\n        this.populateStatus();\n        this.populateSubCounty();\n    }\n    populateData() {\n        const getdata = `\n            query{\n                Estates{\n                    ESTATE_ID\n                    ESTATE_NAME\n                    SET_SUBCOUNTY_ID\n                    SUB_COUNTY {\n                        SUBCOUNTY_ID\n                        SUBCOUNTY_NAME\n                    }\n                    SET_WARD_ID\n                    WARD {\n                    WARD_ID\n                    WARD_NAME\n                    }\n                    SYS_STATUS_ID\n                    SYSTEMSTATUS{\n                        SYS_STATUS_ID\n                        SYS_STATUS_NAME\n                    }\n                    CREATEDBY\n                    MODIFIEDBY\n                    CREATED_DATE\n                    MODIFIED_DATE                                                    \n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                data: data.data.Estates\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n    populateSubCounty() {\n\n        const getdata = `\n            query {\n                SubCounties {\n                    SUBCOUNTY_ID,\n                    SUBCOUNTY_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchsubcountydata: data.data.SubCounties\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load SubCounty Data');\n                }\n            })\n    }\n    populateWard(value) {\n\n        const getdata = `\n        query {\n            WardFilter\n                (\n                    SET_SUBCOUNTY_ID:${value})\n                {\n                    WARD_ID\n                    WARD_NAME\n                }\n        }\n            \n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchwarddata: data.data.WardFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Ward Data');\n                }\n            })\n    }\n    populateStatus() {\n        const getdata = `\n            query {\n                SystemStatusFilter (\n                    CATEGORY:\"SET\"\n                    ){\n                        SYS_STATUS_ID,\n                        SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to System Status Type Load Data');\n                }\n            })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const formadmin = event.currentTarget;\n\n        if (formadmin.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n            const form = `\n        mutation{\n            addEstate(\n                ESTATE_NAME:\"${this.state.ESTATE_NAME}\",\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CREATEDBY:\"${this.state.CREATEDBY}\",\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                SET_SUBCOUNTY_ID:${this.state.SET_SUBCOUNTY_ID}\n                SET_WARD_ID:${this.state.SET_WARD_ID}\n                ){\n                    ESTATE_ID\n            }\n        }\n        `;\n\n            const formEdit = `\n        mutation{\n            updateEstate(\n                ESTATE_ID:${this.state.ESTATE_ID},\n                ESTATE_NAME:\"${this.state.ESTATE_NAME}\",\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CREATEDBY:\"${this.state.CREATEDBY}\",\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                SET_SUBCOUNTY_ID:${this.state.SET_SUBCOUNTY_ID}\n                SET_WARD_ID:${this.state.SET_WARD_ID}\n                ){\n                    ESTATE_ID\n            }\n        }\n        `;\n\n            if (this.state.InsertUpdate === 'Insert') {\n                API.create(form)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.success('Create Record', 'Record Created Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            } else {\n                API.update(formEdit)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.info('Update Record', 'Record Updated Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            }\n        }\n        this.setState({\n            validated: true\n        })\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteEstate(\n                ESTATE_ID:${this.state.ESTATE_ID}\n                ){\n                    ESTATE_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleCloseSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            opensearch: false,\n\n        });\n\n\n    };\n    handleCloseSubCountySearch = (e) => {\n\n        this.setState({\n            SET_SUBCOUNTY_ID: e.SUBCOUNTY_ID,\n            SUBCOUNTY_NAME: e.SUBCOUNTY_NAME,\n            WARD_NAME: '',\n            opensubcountysearch: false,\n        });\n        this.populateWard(e.SUBCOUNTY_ID);\n    };\n    handleCloseWardSearch = (e) => {\n\n        this.setState({\n            SET_WARD_ID: e.WARD_ID,\n            WARD_NAME: e.WARD_NAME,\n            openwardsearch: false,\n        });\n    };\n    handleEditData = (e) => {\n        this.setState({\n            ESTATE_ID: e.ESTATE_ID,\n            ESTATE_NAME: e.ESTATE_NAME,\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\n            SET_SUBCOUNTY_ID: e.SET_SUBCOUNTY_ID,\n            SET_WARD_ID: e.SET_WARD_ID,\n            WARD_NAME: e.WARD.WARD_NAME,\n            SUBCOUNTY_NAME: e.SUB_COUNTY.SUBCOUNTY_NAME,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            ESTATE_ID: e.ESTATE_ID,\n            ESTATE_NAME: e.ESTATE_NAME,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            ESTATE_NAME: '',\n            SYS_STATUS_ID: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            validated: false,\n            SUBCOUNTY_NAME: '',\n            WARD_NAME: '',\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.ESTATE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.ESTATE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n    handleSearchFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchdata\n        let filteredData = this.state.searchFilteredData\n        this.setState({ searchvalue: value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n    handleSearchSubCountyFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchsubcountydata\n        let filteredSubCountyData = this.state.searchFilteredSubCountyData\n        this.setState({ searchsubcountyvalue: value });\n\n        if (value.length) {\n            filteredSubCountyData = data.filter(item => {\n                let startsWithCondition =\n                    item.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SUBCOUNTY_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredSubCountyData })\n        }\n    }\n    handleSearchWardFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchwarddata\n        let filteredWardData = this.state.searchFilteredWardData\n        this.setState({ searchwardvalue: value });\n\n        if (value.length) {\n            filteredWardData = data.filter(item => {\n                let startsWithCondition =\n                    item.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.WARD_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredWardData })\n        }\n    }\n\n    render() {\n        const { data, columns, value, filteredData, searchdata, searchvalue,\n            searchsubcountyvalue, searchsubcountydata, filteredSubCountyData, searchwardvalue,\n            searchwarddata, filteredWardData } = this.state\n        return (\n            <>\n                <Helmet><title>Estates </title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"Estates\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Estates</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseSearch}\n                                        opensearch={this.state.opensearch}\n                                        handleHideSearch={this.handleHideSearch}\n                                        value={searchvalue}\n                                        data={searchdata}\n                                        handleFilter={this.handleSearchFilter}\n                                        filteredData={filteredData}\n                                    />\n                                    <SubCountyTypeSearch\n                                        handleSearchSubCounty={this.handleCloseSubCountySearch}\n                                        opensearch={this.state.opensubcountysearch}\n                                        handleHideSearch={this.handleHideSubCountySearch}\n                                        value={searchsubcountyvalue}\n                                        data={searchsubcountydata}\n                                        handleFilter={this.handleSearchSubCountyFilter}\n                                        filteredData={filteredSubCountyData}\n                                    />\n                                    <WardsSearch\n                                        handleSearchWards={this.handleCloseWardSearch}\n                                        opensearch={this.state.openwardsearch}\n                                        handleHideSearch={this.handleHideWardSearch}\n                                        value={searchwardvalue}\n                                        data={searchwarddata}\n                                        handleFilter={this.handleSearchWardFilter}\n                                        filteredData={filteredWardData}\n                                    />\n                                    <EstatesTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        columns={columns}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <EstatesModal\n                                        validated={this.state.validated}\n                                        show={this.state.show}\n                                        handleShowSubCounty={this.handleShowSubCountySearch}\n                                        handleShowWard={this.handleShowWardSearch}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowSearch={this.handleShowSearch}\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n                                        EstateName={this.state.ESTATE_NAME}\n                                        SubCountyName={this.state.SUBCOUNTY_NAME}\n                                        WardName={this.state.WARD_NAME}\n                                        changeEstateName={e => this.setState({ ESTATE_NAME: e.target.value })}\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n                                    />\n\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(Estates));"],"sourceRoot":""}