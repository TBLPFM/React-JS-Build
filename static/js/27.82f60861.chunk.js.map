{"version":3,"sources":["components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","utility/dateAndTime.js","views/pages/Security/Users/Tables/UsersTable.js","views/pages/Security/Users/Modals/UsersModal.js","views/pages/Security/Users/Users.js"],"names":["BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","Ripple","onClick","handleShow","value","onChange","e","handleFilter","ShowDate","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","UsersTable","tableProperties","columns","name","cell","row","Button","handleEdit","handleDelete","selector","sortable","USERNAME","FIRSTNAME","MIDDLENAME","LASTNAME","EMAIL","data","length","filteredData","noHeader","pagination","subHeader","striped","responsive","subHeaderComponent","UserModal","Modal","show","onHide","handleHide","Header","closeButton","Title","id","InsertUpdate","Form","onSubmit","handleSubmit","autoComplete","Body","Row","Group","as","Col","md","controlId","Label","Control","type","placeholder","UserName","changeUserName","required","FirstName","changeFirstName","MiddleName","changeMiddleName","LastName","changeLastName","Email","changeEmail","InputGroup","showPassword","passwd","handleChangepassword","aria-describedby","Prepend","variant","handleToggleShowPassword","Visibility","VisibilityOff","Card","CardHeader","CardTitle","CardBody","Footer","disabled","isEnabled","showdelete","handleHideDelete","AdminName","changeAdminName","readOnly","Users","context","event","preventDefault","form","state","formEdit","ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","formDelete","warning","handleEditData","setState","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","PASSWORDHASH","CREATEDBYID","LASTMODIFIEDBYID","DATECREATED","DATELASTMODIFIED","disableCancel","showBtnLoader","openlocationsearch","usersdata","rolesdata","userrolesdata","locationsdata","checkedRoles","expandedRoles","appUsers","Helmet","Fragment","sm","UsersModal","connect","user","auth"],"mappings":"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","file":"static/js/27.82f60861.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12 mb-2\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"form-group breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","\nimport React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple>\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader\n","\nexport function ShowDate() {\n\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  return yyyy + '-' + mm + '-' + dd;\n}\n\n\nexport function ShowTime() {\n\n  let today = new Date();\n  let time = today.getHours() + \":\" + today.getMinutes();\n\n  return time;\n}\n","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\n\nclass UsersTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleEdit(row)}\n                        ><Edit size={14} />\n                        </Button.Ripple>\n                        <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleDelete(row)}\n                        ><Trash2 size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"User Name\",\n                selector: \"USERNAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.USERNAME}</p>\n            },\n            {\n                name: \"First Name\",\n                selector: \"FIRSTNAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FIRSTNAME}</p>\n            },\n            {\n                name: \"Middle Name\",\n                selector: \"MIDDLENAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.MIDDLENAME}</p>\n            },\n            {\n                name: \"Last Name\",\n                selector: \"LASTNAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.LASTNAME}</p>\n            },\n            {\n                name: \"Email\",\n                selector: \"EMAIL\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.EMAIL}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n            <DataTable\n                className=\"dataTable-custom\"\n                data={this.props.value.length ? this.props.filteredData : this.props.data}\n                columns={this.tableProperties.columns}\n                noHeader\n                pagination\n                subHeader\n                striped\n                responsive\n                subHeaderComponent={\n                    <TableCustomHeader value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                }\n            />\n            </>\n\n        )\n    }\n}\n\n\nexport default UsersTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup, Col } from 'react-bootstrap';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n//import CheckboxTree from 'react-checkbox-tree';\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\n\nclass UserModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                    size=\"lg\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Users\n                        </Modal.Title>\n                    </Modal.Header>\n                    \n                    <Form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"UserName\">\n                                    <Form.Label>User Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter User Name\" value={this.props.UserName} onChange={this.props.changeUserName} required />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"FirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter First Name\" value={this.props.FirstName} onChange={this.props.changeFirstName} required />\n                                </Form.Group>\n                            </Form.Row>\n                          \n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"MiddleName\">\n                                    <Form.Label>Middle Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Middle Name\" value={this.props.MiddleName} onChange={this.props.changeMiddleName} required />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"LastName\">\n                                    <Form.Label>LastName</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Last Name\" value={this.props.LastName} onChange={this.props.changeLastName} required />\n                                </Form.Group>\n                            </Form.Row>\n                            \n                           \n                            <Form.Row>\n                            <Form.Group as={Col} md=\"6\" controlId=\"Email\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"Enter Email\" value={this.props.Email} onChange={this.props.changeEmail} required />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\">\n                                    <Form.Label>Password</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type={this.props.showPassword ? \"text\" : \"password\"}\n                                            value={this.props.passwd} \n                                            onChange={this.props.handleChangepassword}\n                                            placeholder=\"Enter Password\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            className=\"border-right-0\"\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button size=\"sm\" variant=\"outline-secondary border-left-0\" onClick={this.props.handleToggleShowPassword}>\n                                                {this.props.showPassword ? <Visibility color=\"action\" /> : <VisibilityOff color=\"disabled\" />}                                                \n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                            \n                            <Form.Row>\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>User Roles</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n                                </CardBody>\n                            </Card>\n                                <Col>\n\n                                    {/* <CheckboxTree\n                                        showExpandAll={true}    \n                                        checked={this.props.checkedRoles}\n                                        expanded={this.props.expandedRoles}\n                                        iconsClass=\"fa5\"\n                                        nodes={this.props.userrolesdata}\n                                        onCheck={this.props.handleCheckRole}\n                                        onExpand={this.props.handleExpandRole}\n                                    /> */}\n                                </Col>\n                            </Form.Row>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete User\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description_del\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.AdminName} onChange={this.props.changeAdminName} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default UserModal;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport UsersTable from './Tables/UsersTable';\nimport UsersModal from './Modals/UsersModal'\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr'\n\nclass Users extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            columns: [],\n            data: [],\n            filteredData: [],\n            value: '',\n            show: false,\n            showdelete: false,\n            ID: 0,\n            USERNAME: '',\n            FIRSTNAME: '',\n            MIDDLENAME: '',\n            LASTNAME: '',\n            EMAIL: '',\n            PASSWORDHASH: '',\n            CREATEDBYID: 1,\n            LASTMODIFIEDBYID: 1,\n            DATECREATED: Date.ShowDate(),\n            DATELASTMODIFIED: Date.ShowDate(),\n            InsertUpdate: '',\n\n            isEnabled: false,\n            disableCancel: false,\n            showBtnLoader: false,\n            showPassword: false,\n            openlocationsearch: false,\n\n            usersdata: [],\n            rolesdata: [],\n            userrolesdata: [],\n            locationsdata: [],\n\n            checkedRoles: [],\n            expandedRoles: [],\n\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n        this.populateData();\n        \n    }\n\n    populateData() {\n        const getdata = `\n            query{\n                appUsers{\n                    ID\n                    USERNAME\n                    FIRSTNAME\n                    MIDDLENAME\n                    LASTNAME\n                    EMAIL\n                }\n            }\n        `;\n    \n        API.getData(getdata)\n        .then(({ data }) => this.setState({\n            data: data.data.appUsers\n        })).catch(error => {\n            if (error.response || error.request) {\n                toastr.error('Error Loading Data', 'Failed to Load Data');\n            }\n        })\n\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const form = `\n        mutation{\n            addAppUser(\n                USERNAME:\"${this.state.USERNAME}\",\n                ){\n                ID\n            }\n        }\n        `;\n\n        const formEdit = `\n        mutation{\n            updateAppUser(\n                ID:${this.state.ID},\n                USERNAME:\"${this.state.USERNAME}\"\n                ){\n                ID\n            }\n        }\n        `;\n\n        if (this.state.InsertUpdate === 'Insert') {\n            API.create(form)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.success('Create Record', 'Record Created Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        } else {\n            API.update(formEdit)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.info('Update Record', 'Record Updated Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        }\n\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteAppUser(\n                ID:${this.state.ID}\n                ){\n                ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleEditData = (e) => {\n        this.setState({\n            ID: e.ID,\n            USERNAME: e.USERNAME,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            ID: e.ID,\n            USERNAME: e.USERNAME,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            USERNAME: '',\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.USERNAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.USERNAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    render() {\n        const { data, columns, value, filteredData } = this.state\n        return (\n            <>\n                <Helmet><title>Users</title></Helmet>\n\n                <React.Fragment>\n                <Breadcrumbs\n                    breadCrumbTitle=\"Security\"\n                    breadCrumbParent=\"Home\"\n                    breadCrumbActive=\"Users\"\n                />\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle>Users</CardTitle>\n                            </CardHeader>\n                            <CardBody className=\"rdt_Wrapper\">\n                                \n                                <UsersTable\n                                    handleEdit={this.handleEditData}\n                                    handleDelete={this.handleDeleteData}\n                                    value={value}\n                                    data={data}\n                                    columns={columns}\n                                    filteredData={filteredData}\n                                    handleShow={this.handleShow}\n                                    handleFilter={this.handleFilter}\n                                />\n\n                                <UsersModal\n                                    show={this.state.show}\n                                    handleHide={this.handleHide}\n                                    InsertUpdate={this.state.InsertUpdate}\n                                    handleSubmit={this.handleSubmit}\n                                    UserName={this.state.USERNAME}\n                                    changeUserName={e => this.setState({ USERNAME: e.target.value })}\n                                    showdelete={this.state.showdelete}\n                                    handleHideDelete={this.handleHideDelete}\n                                    handleDelete={this.handleDelete}\n                                />\n\n\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        \n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(Users));"],"sourceRoot":""}