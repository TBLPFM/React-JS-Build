{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/SearchComponents/ModuleSearch/ModuleSearch.js","views/pages/SearchComponents/FeeCategorySearch/FeeCategorySearch.js","views/pages/SearchComponents/FeesSearch/FeesSearch.js","views/pages/SearchComponents/SubCountyTypeSearch/SubCountyTypeSearch.js","views/pages/EyeComponents/ClientPopover/ClientPopover.js","views/pages/SearchComponents/WardsSearch/WardsSearch.js","views/pages/EyeComponents/BusinessPopover/BusinessPopover.js","views/pages/SearchComponents/ClientRegistrationSearch/ClientRegistrationSearch.js","../node_modules/react-bootstrap/esm/Table.js","views/pages/SearchComponents/BusinessRegisterSearch/BusinessRegisterSearch.js","views/pages/Registration/BettingRegistration/Tables/BettingRegistrationTable.js","views/pages/Registration/BettingRegistration/Modals/BettingRegistrationModal.js","views/pages/SearchComponents/BettingTypeSearch/BettingTypeSearch.js","views/pages/Registration/BettingRegistration/BettingRegistration.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","hasOwnProperty","createButton","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","RMSModuleSearch","handleSearchModule","MODULE_NAME","paginationPerPage","FeeCategorySearch","handleSearchFEECATEGORY","FEECATEGORY_CODE","FEECATEGORY_NAME","FeesSearch","handleSearchFees","FEE_NAME","SubCountySearch","handleSearchSubCounty","SUBCOUNTY_NAME","ClientPopover","bordered","Group","controlId","Control","ClientNamePopUp","handleChangeClientNamePopUp","readOnly","ClientDocumentNumber","changeClientDocumentNumber","ClientPostalAddress","changeClientPostalAddress","ClientMobileNumber","changeClientMobileNumber","WardsSearch","handleSearchWards","WARD_NAME","BusinessPopover","BusinessNamePopup","changeBusinessNamePopup","BusinessNo","changeBusinessNo","BusinessType","changeBusinessType","Subcounty","changeSubcounty","openAddresssearch","handleHideAddressSearch","BuildingName","changeBuildingName","Street","changeStreet","PostalAddress","changePostalAddress","PlotNumber","changePlotNumber","MobileNumber","changeMobileNumber","Email","changeEmail","ClientRegistrationSearch","handleSearchClientRegistration","CLIENT_NAME","CLIENT_DOCUMENT_NUMBER","Table","borderless","hover","variant","responsive","decoratedBsPrefix","classes","table","responsiveClass","BusinessRegisterSearch","handleSearchBusinessName","BUSINESS_NAME","BettingRegistrationTable","Button","handleEdit","handleDelete","BETTING_NUMBER","BUSINESSREGISTER","CLIENTID","SUB_COUNTY","WARD","SYSTEMSTATUS","subHeader","subHeaderComponent","BettingRegistrationModal","Modal","handleHide","id","InsertUpdate","Form","noValidate","validated","onSubmit","handleSubmit","autoComplete","Row","Col","md","Label","placeholder","BettingNumber","changeBettingNumber","handleShowBusinessSearchEye","BusinessName","aria-describedby","required","handleShowBusinessRegister","Feedback","BettingTypeName","handleShowBettingType","ModuleName","handleShowModules","FeeCategoryName","handleShowFeeCategorySearch","FeeName","handleShowFees","handleShowClientSearchEye","ClientName","SystemStatusTypeDescription","handleShowSearch","Footer","isEnabled","showdelete","handleHideDelete","BettingTypeSearch","handleSearchBettingType","BETTING_TYPE_NAME","Input","BettingRegistration","context","populateDocumnetNumber","getdata","API","then","INCREMENTBY","FinalString","dataD","DocumentNumberFilter","setState","DOCUMENT_PREFIX","catch","error","response","request","toastr","event","preventDefault","currentTarget","checkValidity","stopPropagation","form","state","REG_BUSINESS_ID","SET_BETTING_TYPE_ID","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","SYS_STATUS_ID","SET_REVENUE_FEE_ID","SET_REVENUE_FEE_CATEGORY_ID","SET_MODULE_ID","formEdit","REG_BETTING_ID","bettingID","addBettingRegister","reg_betting_num","parseInt","GenerateDocumentNumber","clearData","populateData","success","info","formDelete","warning","handleCloseModulesSearch","MODULE_ID","openmodulessearch","populateFeeCategory","handleCloseBusinessRegisterSearch","BUSINESS_ID","BUILDING_NAME","POSTAL_ADDRESS","PLOTNUMBER","STREET","MOBILE_NUMBER","EMAIL","CLIENT_POSTAL_ADDRESS","CLIENT_MOBILE_NUMBER","openbusineeregistersearch","handleCloseBettingTypeSearch","BETTING_TYPE_ID","openbettingtypesearch","handleCloseFeeCategorySearch","FEECATEGORY_ID","openFeeCategorySearch","populateFee","handleCloseFeeSearch","FEE_ID","openfeesearch","handleCloseClientRegistrationSearch","CLIENT_ID","openclientregistrationsearch","handleCloseSearch","SYSTEMSTATUSTYPEDESCRIPTION","handleEditData","BUSINESS_REGISTER","FEE_CATEGORY","FEE","BETTING","SET_MODULES","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","handleSearchFilter","searchdata","searchFilteredData","searchvalue","handleSearchModulesFilter","searchmodulesdata","filteredModulesData","searchFilteredModulesData","searchmodulesvalue","handleSearchBusinessRegisterFilter","searchbusinessregisterdata","filteredBusinessRegisterData","searchfilteredBusinessRegisterData","searchbusinessregistervalue","handleSearchSubCountyFilter","searchsubcountydata","filteredSubCountyData","searchFilteredSubCountyData","searchsubcountyvalue","handleSearchBettingTypeFilter","searchbettingtypedata","filteredBettingTypeData","searchfilteredBettingTypeData","searchbettingtypevalue","handleSearchWardFilter","searchwarddata","filteredWardData","searchFilteredWardData","searchwardvalue","handleSearchFeeCategoryFilter","searchfeecategorydata","filteredFeeCategoryData","searchFilteredFeeCategoryData","searchfeecategoryvalue","handleSearchFeeFilter","searchfeedata","filteredFeeData","searchFilteredFeeData","searchfeevalue","handleSearchClientRegistrationFilter","searchclientregistrationdata","filteredClientRegistrationData","searchFilteredClientRegistrationData","searchclientregistrationvalue","SET_SUBCOUNTY_ID","SET_WARD_ID","Date","ClIENT_NAME","searchcolumns","searchmoduledata","opensubcountysearch","openwardsearch","openbusinesssearchEye","openclientsearchEye","handleShowModulesSearch","handleShowBusinessRegisterSearch","handleShowBettingTypeSearch","handleShowFeesSearch","handleHideClientSearchEye","handleHideBusinessSearchEye","handleHideModulesSearch","handleHideBusinessRegisterSearch","handleHideBettingTypeSearch","handleHideFeeCategorySearch","handleHideFeesSearch","populateTypes","populateBettingTypes","populateBusinessRegister","populateModules","BettingRegister","Modules","SystemStatusFilter","BusinessRegisters","BettingTypes","FeeCategoryFilter","FeeFilter","Helmet","Fragment","sm","Card","CardHeader","CardTitle","CardBody","ModuleSearch","SubCountyTypeSearch","handleCloseSubCountySearch","handleHideSubCountySearch","handleCloseWardSearch","handleHideWardSearch","handleHideClientRegistrationSearch","handleChangeBuildingName","handleChangePostalAddress","handleChangePlotNumber","handleChangeStreet","handleChangeMobileNumber","handleChangeEmail","constructor","handleShowSubCounty","handleShowSubCountySearch","handleShowWard","handleShowWardSearch","handleShowClientRegistrationSearch","handleChangeSystemStatusTypeDescription","SubCountyName","WardName","connect"],"mappings":"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","file":"static/js/7.5c6c1154.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n        { \n          (!props.hasOwnProperty('createButton') || (props.hasOwnProperty('createButton') && props.createButton)) ? (\n            <Can I=\"create\" a={props.role} passThrough>\n              { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n            </Can>\n          ) : (\"\")\n        }\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass RMSModuleSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchModule(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"MODULE NAME\",\n                selector: \"MODULE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.MODULE_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Module Name\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                            paginationPerPage={5}\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default RMSModuleSearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass FeeCategorySearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchFEECATEGORY(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Fee Category Code\",\n                selector: \"FEECATEGORY_CODE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FEECATEGORY_CODE}</p>\n            },\n            {\n                name: \"Fee Category Name\",\n                selector: \"FEECATEGORY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FEECATEGORY_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Fee Category\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default FeeCategorySearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass FeesSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchFees(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Fees\",\n                selector: \"FEE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FEE_NAME}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Detailed Description\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default FeesSearch","import React from \"react\"\nimport { Button, Input } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SubCountySearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSubCounty(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"SUBCOUNTY NAME\",\n                selector: \"SUBCOUNTY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SUBCOUNTY_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Sub County Name\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                            paginationPerPage={5}\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SubCountySearch","import React from \"react\"\nimport { Modal } from 'react-bootstrap';\nimport { Table, Form } from 'react-bootstrap';\n\n\nconst ClientPopover = props => {\n        return (\n            <>\n\n                <Modal\n                    show={props.opensearch}\n                    onHide={props.handleHideSearch}\n                    \n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                         Client Details\n                    </Modal.Title>\n                    </Modal.Header>                   \n                     <Modal.Body>\n                     <Table bordered size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Details</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                               \n                                    <tr>\n                                        <td>Client Name</td>\n                                        <td>\n                                            <Form.Group controlId=\"ClientName\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"ClientName\"\n                                                    value={props.ClientNamePopUp}\n                                                    onChange={props.handleChangeClientNamePopUp}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Document No</td>\n                                        <td>\n                                            <Form.Group controlId=\"DocumentNo\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"DocumentNo\"\n                                                    value={props.ClientDocumentNumber}\n                                                    onChange={props.changeClientDocumentNumber}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Postal Address</td>\n                                        <td>\n                                            <Form.Group controlId=\"PostalAddress\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"PostalAddress\"\n                                                    value={props.ClientPostalAddress}\n                                                    onChange={props.changeClientPostalAddress}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                   \n                                    <tr>\n                                        <td>Mobile Number</td>\n                                        <td>\n                                            <Form.Group controlId=\"MobileNumber\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"MobileNumber\"\n                                                    value={props.ClientMobileNumber}\n                                                    onChange={props.changeClientMobileNumber}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                            </tbody>\n                        </Table>\n                       \n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n\n\n\nexport default ClientPopover","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass WardsSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchWards(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Wards\",\n                selector: \"WARD_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WARD_NAME}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Ward\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default WardsSearch","import React from \"react\"\nimport { Modal } from 'react-bootstrap';\nimport { Table, Form } from 'react-bootstrap';\n\n\nconst BusinessPopover = props => {\n        return (\n            <>\n\n                <Modal\n                    show={props.opensearch}\n                    onHide={props.handleHideSearch}\n                    \n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                         Business Details\n                    </Modal.Title>\n                    </Modal.Header>                   \n                     <Modal.Body>\n                     <Table bordered size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Details</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                               \n                                    <tr>\n                                        <td>Business Name</td>\n                                        <td>\n                                            <Form.Group controlId=\"BusinessName\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"BusinessName\"\n                                                    value={props.BusinessNamePopup}\n                                                    onChange={props.changeBusinessNamePopup}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business No</td>\n                                        <td>\n                                            <Form.Group controlId=\"BusinessNo\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"BusinessNo\"\n                                                    value={props.BusinessNo}\n                                                    onChange={props.changeBusinessNo}\n                                                    \n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Type</td>\n                                        <td>\n                                            <Form.Group controlId=\"BusinessType\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"BusinessType\"\n                                                    value={props.BusinessType}\n                                                    onChange={props.changeBusinessType}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                   <tr>\n                                   <td>Sub County</td>\n                                       <td>\n                                       <Form.Group controlId=\"SubCounty\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"SubCounty\"\n                                                    value={props.Subcounty}\n                                                    onChange={props.changeSubcounty}\n                                                    readOnly />\n                                            </Form.Group>\n                                       </td>\n                                   </tr>\n                                \n                            </tbody>\n                        </Table>\n                       \n                    </Modal.Body>\n\n                </Modal>\n                <Modal\n                    show={props.openAddresssearch}\n                    onHide={props.handleHideAddressSearch}\n                    \n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                         Business Details\n                    </Modal.Title>\n                    </Modal.Header>                   \n                     <Modal.Body>\n                     <Table bordered size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Details</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                               \n                                    <tr>\n                                        <td>Business Name</td>\n                                        <td>\n                                            <Form.Group controlId=\"BusinessName\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"BusinessName\"\n                                                    value={props.BusinessNamePopup}\n                                                    onChange={props.changeBusinessNamePopup}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Building Name</td>\n                                        <td>\n                                            <Form.Group controlId=\"BuildingName\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"BuildingName\"\n                                                    value={props.BuildingName}\n                                                    onChange={props.changeBuildingName}\n                                                    \n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Street</td>\n                                        <td>\n                                            <Form.Group controlId=\"Street\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"Street\"\n                                                    value={props.Street}\n                                                    onChange={props.changeStreet}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Postal Address</td>\n                                        <td>\n                                            <Form.Group controlId=\"PostalAddress\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"PostalAddress\"\n                                                    value={props.PostalAddress}\n                                                    onChange={props.changePostalAddress}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                   \n                                    <tr>\n                                        <td>Plot No</td>\n                                        <td>\n                                            <Form.Group controlId=\"PlotNumber\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"PlotNumber\"\n                                                    value={props.PlotNumber}\n                                                    onChange={props.changePlotNumber}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Mobile No</td>\n                                        <td>\n                                            <Form.Group controlId=\"MobileNumber\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"MobileNumber\"\n                                                    value={props.MobileNumber}\n                                                    onChange={props.changeMobileNumber}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Email</td>\n                                        <td>\n                                            <Form.Group controlId=\"Email\">\n                                                <Form.Control type=\"text\"\n                                                    name=\"Email\"\n                                                    value={props.Email}\n                                                    onChange={props.changeEmail}\n                                                    readOnly />\n                                            </Form.Group>\n                                        </td>\n                                    </tr>\n                            </tbody>\n                        </Table>\n                       \n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n\n\n\nexport default BusinessPopover","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass ClientRegistrationSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchClientRegistration(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Client Name\",\n                selector: \"CLIENT_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_NAME}</p>\n            },\n            {\n                name: \"Document Number\",\n                selector: \"CLIENT_DOCUMENT_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_DOCUMENT_NUMBER}</p>\n            },\n\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Citizen\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                            paginationPerPage={5}\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ClientRegistrationSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass BusinessRegisterSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchBusinessName(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"BUSINESS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.BUSINESS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Business\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default BusinessRegisterSearch","import React from \"react\"\r\nimport { Button } from \"reactstrap\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\r\nimport { Edit, Trash2 } from \"react-feather\"\r\nimport Can from '../../../../../utility/permissions/can';\r\nclass BettingRegistrationTable extends React.Component {\r\n\r\n    tableProperties = {\r\n        columns: [\r\n            {\r\n                name: \"Action\",\r\n                cell: (row) => (\r\n                    <>\r\n                        <Can I=\"update\" a={this.props.role} passThrough>\r\n                            {allowed =>\r\n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\r\n                                    disabled={!allowed}\r\n                                    onClick={() => this.props.handleEdit(row)}\r\n                                >\r\n                                    <Edit size={14} />\r\n                                </Button.Ripple>\r\n                            }\r\n                        </Can>\r\n\r\n                        <Can I=\"delete\" a={this.props.role} passThrough>\r\n                            {allowed =>\r\n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\r\n                                    disabled={!allowed}\r\n                                    onClick={() => this.props.handleDelete(row)}\r\n                                ><Trash2 size={14} />\r\n                                </Button.Ripple>\r\n                            }\r\n                        </Can>\r\n                    </>\r\n                )\r\n            },\r\n            {\r\n                name: \"Registration Number\",\r\n                selector: \"BETTING_NUMBER\",\r\n                sortable: true,\r\n                cell: row => <p className=\"mb-0\">{row.BETTING_NUMBER}</p>\r\n            },\r\n            {\r\n                name: \"Client\",\r\n                selector: \"ClIENT_NAME\",\r\n                sortable: true,\r\n                cell: row => <p className=\"mb-0\">{row.BUSINESSREGISTER.CLIENTID.CLIENT_NAME}</p>\r\n            },\r\n            {\r\n                name: \"Business Name\",\r\n                selector: \"BUSINESS_NAME\",\r\n                sortable: true,\r\n                cell: row => <p className=\"mb-0\">{row.BUSINESSREGISTER.BUSINESS_NAME}</p>\r\n            },\r\n            {\r\n                name: \"Subcounty Name\",\r\n                selector: \"SUBCOUNTY_NAME\",\r\n                sortable: true,\r\n                cell: row => <p className=\"mb-0\">{row.BUSINESSREGISTER.SUB_COUNTY.SUBCOUNTY_NAME}</p>\r\n            },\r\n            {\r\n                name: \"Ward Name\",\r\n                selector: \"WARD_NAME\",\r\n                sortable: true,\r\n                cell: row => <p className=\"mb-0\">{row.BUSINESSREGISTER.WARD.WARD_NAME}</p>\r\n            },\r\n            {\r\n                name: \"Status\",\r\n                selector: \"SYS_STATUS_NAME\",\r\n                sortable: true,\r\n                cell: row => <p className=\"mb-0\">{row.SYSTEMSTATUS.SYS_STATUS_NAME}</p>\r\n            }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <DataTable\r\n                    className=\"dataTable-custom\"\r\n                    data={this.props.value.length ? this.props.filteredData : this.props.data}\r\n                    columns={this.tableProperties.columns}\r\n                    noHeader\r\n                    pagination\r\n                    subHeader\r\n                    striped\r\n                    responsive\r\n                    subHeaderComponent={\r\n                        <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\r\n\r\n                    }\r\n                />\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default BettingRegistrationTable","import React from 'react';\r\nimport { Button, Modal, Form, InputGroup, Col } from 'react-bootstrap';\r\nimport \"../../../../../assets/scss/plugins/forms/react-select/_react-select.scss\";\r\nimport { Search ,Eye} from 'react-feather';\r\n\r\n\r\nclass BettingRegistrationModal extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    show={this.props.show}\r\n                    onHide={this.props.handleHide}\r\n                    size=\"xl\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"AddUpdate\">\r\n                            {this.props.InsertUpdate} Betting and Lotteries Registration\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Form noValidate validated={this.props.validated} onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n                        <Modal.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"RegistrationNumber\">\r\n                                    <Form.Label>Betting Number</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter Betting Number\"\r\n                                        value={this.props.BettingNumber}\r\n                                        onChange={this.props.changeBettingNumber} readOnly />\r\n                                   \r\n                                </Form.Group>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"BusinessNumber\">\r\n                                    <Form.Label>Business Number</Form.Label>\r\n                                    <InputGroup>\r\n                                    <InputGroup.Prepend>\r\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowBusinessSearchEye}>\r\n                                                <Eye />\r\n                                            </Button>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={this.props.BusinessName}\r\n                                            placeholder=\"Search Business Name\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            required\r\n                                        />\r\n                                        <InputGroup.Prepend>\r\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowBusinessRegister}>\r\n                                                <Search />\r\n                                            </Button>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please enter Business Number.\r\n                                 </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                           \r\n                            </Form.Row>\r\n                          \r\n                           \r\n                            <Form.Row>\r\n                               \r\n                                <Form.Group as={Col} md=\"6\" controlId=\"BettingType\">\r\n                                    <Form.Label>Betting Type</Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={this.props.BettingTypeName}\r\n                                            placeholder=\"Search Betting Type Name\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            required\r\n                                        />\r\n                                        <InputGroup.Prepend>\r\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowBettingType}>\r\n                                                <Search />\r\n                                            </Button>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please select Betting Type.\r\n                                 </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"Module\">\r\n                                    <Form.Label>Module</Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={this.props.ModuleName}\r\n                                            placeholder=\"Search Module Name\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            required\r\n                                        />\r\n                                        <InputGroup.Prepend>\r\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowModules}>\r\n                                                <Search />\r\n                                            </Button>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please select Module.\r\n                                 </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"FeeCategory\">\r\n                                    <Form.Label>Fee Category</Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={this.props.FeeCategoryName}\r\n                                            placeholder=\"Search Business Category\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            required\r\n                                        />\r\n                                        <InputGroup.Prepend>\r\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowFeeCategorySearch}>\r\n                                                <Search />\r\n                                            </Button>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please select Fee Category.\r\n                                 </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"Fee\">\r\n                                    <Form.Label>Fees</Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={this.props.FeeName}\r\n                                            placeholder=\"Search Detailed Description\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            required\r\n                                        />\r\n                                        <InputGroup.Prepend>\r\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowFees}>\r\n                                                <Search />\r\n                                            </Button>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please select Fees.\r\n                                 </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"ClientID\">\r\n                                    <Form.Label>Client Name</Form.Label>\r\n                                    <InputGroup>\r\n                                    <InputGroup.Prepend>\r\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowClientSearchEye}>\r\n                                                <Eye />\r\n                                            </Button>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={this.props.ClientName}\r\n                                            placeholder=\"Search Client Name\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            required\r\n                                        />\r\n                                       \r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please select Client Name.\r\n                                 </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} md=\"6\" controlId=\"SystemStatusType\">\r\n                                    <Form.Label>System Status Type</Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={this.props.SystemStatusTypeDescription}\r\n                                            placeholder=\"Search System Status Type\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            required\r\n                                        />\r\n                                        <InputGroup.Prepend>\r\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSearch}>\r\n                                                <Search />\r\n                                            </Button>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please select Status.\r\n                                 </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n\r\n                            \r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\r\n                                {this.props.InsertUpdate}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n                <Modal\r\n                    show={this.props.showdelete}\r\n                    onHide={this.props.handleHideDelete}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"AddUpdate\">\r\n                            Delete Betting Registration\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\r\n                        <Modal.Body>\r\n                            <Form.Group controlId=\"description\">\r\n                                <h4>Are you sure you want to delete this record?</h4>\r\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.BettingNumber} onChange={this.props.BettingNumber} readOnly />\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n\r\n                        <Modal.Footer>\r\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Yes Delete\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BettingRegistrationModal;","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass BettingTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchBettingType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Betting Type Name\",\n                selector: \"BETTING_TYPE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.BETTING_TYPE_NAME}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Betting Type\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default BettingTypeSearch","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from 'react-helmet';\r\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport BettingRegistrationTable from './Tables/BettingRegistrationTable';\r\nimport BettingRegistrationModals from './Modals/BettingRegistrationModal';\r\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\r\nimport * as API from \"../../../../utility/crud/app.crud\";\r\nimport * as Date from \"../../../../utility/dateAndTime\";\r\nimport { toastr } from 'react-redux-toastr';\r\nimport SubCountyTypeSearch from '../../SearchComponents/SubCountyTypeSearch/SubCountyTypeSearch';\r\nimport WardsSearch from '../../SearchComponents/WardsSearch/WardsSearch';\r\nimport FeeCategorySearch from '../../SearchComponents/FeeCategorySearch/FeeCategorySearch';\r\nimport FeesSearch from '../../SearchComponents/FeesSearch/FeesSearch';\r\nimport ClientRegistrationSearch from '../../SearchComponents/ClientRegistrationSearch/ClientRegistrationSearch';\r\nimport BettingTypeSearch from '../../SearchComponents/BettingTypeSearch/BettingTypeSearch';\r\nimport BusinessRegisterSearch from '../../SearchComponents/BusinessRegisterSearch/BusinessRegisterSearch';\r\nimport ModuleSearch from '../../SearchComponents/ModuleSearch/ModuleSearch';\r\nimport BusinessPopover from '../../EyeComponents/BusinessPopover/BusinessPopover'\r\nimport ClientPopover from '../../EyeComponents/ClientPopover/ClientPopover'\r\nclass BettingRegistration extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            validated: false,\r\n            columns: [],\r\n            data: [],\r\n            filteredData: [],\r\n            value: '',\r\n            show: false,\r\n            showdelete: false,\r\n            REG_BETTING_ID: 0,\r\n            BETTING_NUMBER: 0,\r\n            REG_BUSINESS_ID: 0,\r\n            SET_BETTING_TYPE_ID: 0,\r\n            SET_SUBCOUNTY_ID: 0,\r\n            SET_WARD_ID: 0,\r\n            SET_REVENUE_FEE_ID: 0,\r\n            SET_REVENUE_FEE_CATEGORY_ID: 0,\r\n            CLIENT_ID: 0,\r\n            SYS_STATUS_ID: 0,\r\n            CREATEDBY: props.user.EMAIL,\r\n            MODIFIEDBY: props.user.EMAIL,\r\n            CREATED_DATE: Date.ShowDate(),\r\n            MODIFIED_DATE: Date.ShowDate(),\r\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\r\n            ClIENT_NAME: '',\r\n            FEECATEGORY_CODE: '',\r\n            FEE_NAME: '',\r\n            SUBCOUNTY_NAME: '',\r\n            WARD_NAME: '',\r\n            CLIENT_DOCUMENT_NUMBER: '',\r\n            CLIENT_POSTAL_ADDRESS: '',\r\n            CLIENT_MOBILE_NUMBER: '',\r\n            SET_MODULE_ID: 0,\r\n            MODULE_NAME: '',\r\n            BUSINESS_NAME: '',\r\n            BUILDING_NAME: '',\r\n            POSTAL_ADDRESS: '',\r\n            PLOTNUMBER: '',\r\n            STREET: '',\r\n            MOBILE_NUMBER: '',\r\n            EMAIL: '',\r\n            BETTING_TYPE_NAME: '',\r\n            InsertUpdate: '',\r\n            searchcolumns: [],\r\n            searchmoduledata: [],\r\n            searchdata: [],\r\n            opensearch: false,\r\n            searchFilteredData: [],\r\n            searchvalue: '',\r\n            openbusineeregistersearch: false,\r\n            searchfilteredBusinessRegisterData: [],\r\n            searchbusinessregistervalue: '',\r\n            openbettingtypesearch: false,\r\n            searchfilteredBettingTypeData: [],\r\n            searchbettingtypevalue: '',\r\n            opensubcountysearch: false,\r\n            searchFilteredSubCountyData: [],\r\n            searchsubcountyvalue: '',\r\n            openwardsearch: false,\r\n            searchFilteredWardData: [],\r\n            searchwardvalue: '',\r\n            openFeeCategorySearch: false,\r\n            searchFilteredFeeCategoryData: [],\r\n            searchfeecategoryvalue: '',\r\n            openfeesearch: false,\r\n            searchFilteredFeeData: [],\r\n            searchfeevalue: '',\r\n            openclientregistrationsearch: false,\r\n            searchFilteredClientRegistrationData: [],\r\n            searchclientregistrationvalue: '',\r\n            openmodulessearch: false,\r\n            searchFilteredModulesData: [],\r\n            searchmodulesvalue: '',\r\n            INCREMENTBY: 0,\r\n            DOCUMENT_PREFIX: '',\r\n            openbusinesssearchEye: false,\r\n            openclientsearchEye: false,\r\n\r\n        }\r\n\r\n        this.handleShow = () => {\r\n            this.setState({\r\n                show: true,\r\n                InsertUpdate: 'Insert'\r\n            });\r\n            this.clearData();\r\n        }\r\n\r\n        this.handleHide = () => {\r\n            this.setState({\r\n                show: false\r\n            });\r\n        }\r\n\r\n        this.handleHideDelete = () => {\r\n            this.setState({\r\n                showdelete: false\r\n            });\r\n        }\r\n\r\n        this.handleShowSearch = () => {\r\n            this.setState({\r\n                opensearch: true\r\n            });\r\n        };\r\n        this.handleShowModulesSearch = () => {\r\n            this.setState({ openmodulessearch: true });\r\n        };\r\n        this.handleShowBusinessSearchEye = () => {\r\n            this.setState({ openbusinesssearchEye: true });\r\n        };\r\n        this.handleShowClientSearchEye = () => {\r\n            this.setState({ openclientsearchEye: true });\r\n        };\r\n        this.handleShowBusinessRegisterSearch = () => {\r\n            this.setState({ openbusineeregistersearch: true });\r\n        };\r\n        this.handleShowBettingTypeSearch = () => {\r\n            this.setState({ openbettingtypesearch: true });\r\n        };\r\n\r\n        this.handleShowFeeCategorySearch = () => {\r\n            this.setState({ openFeeCategorySearch: true });\r\n        };\r\n        this.handleShowFeesSearch = () => {\r\n            this.setState({ openfeesearch: true });\r\n        };\r\n\r\n        this.handleHideSearch = () => {\r\n            this.setState({ opensearch: false });\r\n        };\r\n        this.handleHideClientSearchEye = () => {\r\n            this.setState({ openclientsearchEye: false });\r\n        };\r\n        this.handleHideBusinessSearchEye = () => {\r\n            this.setState({ openbusinesssearchEye: false });\r\n        };\r\n        this.handleHideModulesSearch = () => {\r\n            this.setState({ openmodulessearch: false });\r\n        };\r\n        this.handleHideBusinessRegisterSearch = () => {\r\n            this.setState({ openbusineeregistersearch: false });\r\n        };\r\n        this.handleHideBettingTypeSearch = () => {\r\n            this.setState({ openbettingtypesearch: false });\r\n        };\r\n\r\n        this.handleHideFeeCategorySearch = () => {\r\n            this.setState({ openFeeCategorySearch: false });\r\n        };\r\n        this.handleHideFeesSearch = () => {\r\n            this.setState({ openfeesearch: false });\r\n        };\r\n\r\n        this.populateData();\r\n\r\n        this.populateTypes();\r\n        this.populateBettingTypes();\r\n        this.populateBusinessRegister()\r\n        this.populateModules()\r\n\r\n    }\r\n\r\n    populateData() {\r\n\r\n        const getdata = `\r\n        query {\r\n            BettingRegister {\r\n                REG_BETTING_ID\r\n                BETTING_NUMBER\r\n                REG_BUSINESS_ID\r\n                BUSINESSREGISTER {\r\n                    BUSINESS_ID\r\n                    BUSINESS_NAME\r\n                    BUILDING_NAME\r\n                    POSTAL_ADDRESS\r\n                    PLOTNUMBER\r\n                    STREET\r\n                    MOBILE_NUMBER\r\n                    EMAIL\r\n\t\t\t\t\t SUB_COUNTY\r\n                        {\r\n                            SUBCOUNTY_NAME\r\n                        }\r\n                        WARD\r\n                        {\r\n                            WARD_NAME\r\n                        }\r\n\t\t\t\t\t\t CLIENTID\r\n                        {\r\n                            CLIENT_NAME\r\n                            CLIENT_TYPE_ID\r\n                            CLIENT_DOCUMENT_NUMBER\r\n                            POSTAL_ADDRESS\r\n                            MOBILE_NUMBER \r\n                        }\r\n                }\r\n                SET_BETTING_TYPE_ID\r\n                BETTING{\r\n                    BETTING_TYPE_ID\r\n                    BETTING_TYPE_NAME\r\n                }\r\n                \r\n                SET_REVENUE_FEE_CATEGORY_ID\r\n                FEE_CATEGORY {\r\n                    FEECATEGORY_ID\r\n                    FEECATEGORY_NAME\r\n                    FEECATEGORY_CODE\r\n                }\r\n                SET_REVENUE_FEE_ID\r\n                FEE {\r\n                    FEE_ID\r\n                    FEE_NAME\r\n                }\r\n            \r\n                \r\n                SYS_STATUS_ID\r\n                SYSTEMSTATUS {\r\n                    SYS_STATUS_ID\r\n                    SYS_STATUS_NAME\r\n                }\r\n                CREATEDBY\r\n                MODIFIEDBY\r\n                CREATED_DATE\r\n                MODIFIED_DATE\r\n                SET_MODULE_ID\r\n                SET_MODULES\r\n                {\r\n                    MODULE_ID\r\n                    MODULE_NAME\r\n                }\r\n            }\r\n        }\r\n        `;\r\n\r\n        API.getData(getdata)\r\n            .then(({\r\n                data\r\n            }) => this.setState({\r\n                data: data.data.BettingRegister\r\n            })).catch(error => {\r\n                if (error.response || error.request) {\r\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\r\n                }\r\n            })\r\n\r\n    }\r\n    populateModules() {\r\n\r\n        const getdata = `\r\n            query {\r\n                Modules {\r\n                    MODULE_ID,\r\n                    MODULE_NAME\r\n                }\r\n            }\r\n        `;\r\n\r\n        API.getData(getdata)\r\n            .then(({ data }) => this.setState({\r\n                searchmodulesdata: data.data.Modules\r\n            })).catch(error => {\r\n                if (error.response || error.request) {\r\n                    toastr.error('Error Loading Data', 'Failed to Load Business Type Data');\r\n                }\r\n            })\r\n    }\r\n    populateTypes() {\r\n        const getdata = `\r\n            query {\r\n                SystemStatusFilter(\r\n                    CATEGORY: \"SET\"\r\n                ) {\r\n                    SYS_STATUS_ID,\r\n                    SYS_STATUS_NAME\r\n                }\r\n            }\r\n        `;\r\n\r\n        API.getData(getdata)\r\n            .then(({\r\n                data\r\n            }) => this.setState({\r\n                searchdata: data.data.SystemStatusFilter\r\n            })).catch(error => {\r\n                if (error.response || error.request) {\r\n                    toastr.error('Error Loading Data', 'Failed to System Status Type Load Data');\r\n                }\r\n            })\r\n    }\r\n\r\n    populateBusinessRegister() {\r\n\r\n        const getdata = `\r\n            query {\r\n                BusinessRegisters {\r\n                    BUSINESS_ID\r\n                    BUSINESS_NAME\r\n                    BUILDING_NAME\r\n                    POSTAL_ADDRESS\r\n                    PLOTNUMBER\r\n                    STREET\r\n                    MOBILE_NUMBER\r\n                    EMAIL\r\n                    SUB_COUNTY\r\n                    {\r\n                        SUBCOUNTY_NAME\r\n                    }\r\n                    WARD\r\n                    {\r\n                        WARD_NAME\r\n                    }\r\n                    CLIENTID\r\n                    {\r\n                        CLIENT_NAME\r\n                        CLIENT_TYPE_ID\r\n                        CLIENT_DOCUMENT_NUMBER\r\n                        POSTAL_ADDRESS\r\n                        MOBILE_NUMBER \r\n                    }\r\n                }\r\n            }\r\n        `;\r\n\r\n        API.getData(getdata)\r\n            .then(({ data }) => this.setState({\r\n                searchbusinessregisterdata: data.data.BusinessRegisters\r\n            })).catch(error => {\r\n                if (error.response || error.request) {\r\n                    toastr.error('Error Loading Data', 'Failed to Load Business Register Data');\r\n                }\r\n            })\r\n    }\r\n    populateBettingTypes() {\r\n\r\n        const getdata = `\r\n            query {\r\n                BettingTypes {\r\n                    BETTING_TYPE_ID\r\n                    BETTING_TYPE_NAME\r\n                }\r\n            }\r\n        `;\r\n\r\n        API.getData(getdata)\r\n            .then(({ data }) => this.setState({\r\n                searchbettingtypedata: data.data.BettingTypes\r\n            })).catch(error => {\r\n                if (error.response || error.request) {\r\n                    toastr.error('Error Loading Data', 'Failed to Load Betting Type Data');\r\n                }\r\n            })\r\n    }\r\n\r\n    populateFeeCategory(value) {\r\n\r\n        const getdata = `\r\n            query {\r\n                FeeCategoryFilter(SET_MODULE_ID:${value}) \r\n                {\r\n                    FEECATEGORY_ID\r\n                    FEECATEGORY_NAME\r\n                    FEECATEGORY_CODE\r\n                }\r\n            }\r\n        `;\r\n\r\n        API.getData(getdata)\r\n            .then(({ data }) => this.setState({\r\n                searchfeecategorydata: data.data.FeeCategoryFilter\r\n            })).catch(error => {\r\n                if (error.response || error.request) {\r\n                    toastr.error('Error Loading Data', 'Failed to Load Business Type Data');\r\n                }\r\n            })\r\n    }\r\n    populateDocumnetNumber = (value) => {\r\n\r\n        const getdata = `\r\n            query {\r\n                DocumentNumberFilter(SET_MODULE_ID:${value}) \r\n                {\r\n                    DOCUMENT_PREFIX\r\n                    SET_MODULE_ID\r\n                    START_NUM\r\n                    INCREMENTBY\r\n                    LAST_USED_NUMBER\r\n                }\r\n            }\r\n        `;\r\n\r\n        API.getData(getdata)\r\n            .then(({ data }) => {\r\n                let INCREMENTBY = 0;\r\n                let FinalString = \"\";\r\n                let dataD = data.data.DocumentNumberFilter;\r\n                INCREMENTBY = dataD[0][\"INCREMENTBY\"];\r\n                FinalString = dataD[0][\"DOCUMENT_PREFIX\"];\r\n\r\n                this.setState({\r\n                    INCREMENTBY: INCREMENTBY,\r\n                    DOCUMENT_PREFIX: FinalString\r\n                });\r\n            }\r\n            ).catch(error => {\r\n                if (error.response || error.request) {\r\n                    toastr.error('Error Loading Data', 'Failed to Load Document Number Data');\r\n                }\r\n            })\r\n    }\r\n\r\n    populateFee(value) {\r\n\r\n        const getdata = `\r\n        query {\r\n            FeeFilter\r\n                (\r\n                    SET_DEPT_FEECATEGORY_ID:${value}\r\n                ) {\r\n                    FEE_ID\r\n                    FEE_NAME\r\n                }\r\n        }\r\n            \r\n        `;\r\n\r\n        API.getData(getdata)\r\n            .then(({ data }) => this.setState({\r\n                searchfeedata: data.data.FeeFilter\r\n            })).catch(error => {\r\n                if (error.response || error.request) {\r\n                    toastr.error('Error Loading Data', 'Failed to Fee Load Data');\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const validate = event.currentTarget;\r\n        if (validate.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        else {\r\n            const form = `\r\n        mutation{\r\n            addBettingRegister(\r\n                \r\n                BETTING_NUMBER:\"${this.state.BETTING_NUMBER}\"\r\n                REG_BUSINESS_ID:${this.state.REG_BUSINESS_ID}\r\n                SET_BETTING_TYPE_ID:${this.state.SET_BETTING_TYPE_ID}\r\n               \r\n                CREATEDBY:\"${this.state.CREATEDBY}\"\r\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\"\r\n                CREATED_DATE:\"${this.state.CREATED_DATE}\"\r\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\r\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\r\n                SET_REVENUE_FEE_ID:${this.state.SET_REVENUE_FEE_ID}\r\n                SET_REVENUE_FEE_CATEGORY_ID:${this.state.SET_REVENUE_FEE_CATEGORY_ID}\r\n               \r\n                SET_MODULE_ID:${this.state.SET_MODULE_ID}\r\n\r\n                ){\r\n                    REG_BETTING_ID\r\n            }\r\n        }\r\n        `;\r\n\r\n            const formEdit = `\r\n        mutation{\r\n            updateBettingRegister(\r\n                REG_BETTING_ID:${this.state.REG_BETTING_ID}\r\n                BETTING_NUMBER:\"${this.state.BETTING_NUMBER}\"\r\n                REG_BUSINESS_ID:${this.state.REG_BUSINESS_ID}\r\n                SET_BETTING_TYPE_ID:${this.state.SET_BETTING_TYPE_ID}\r\n                \r\n                CREATEDBY:\"${this.state.CREATEDBY}\"\r\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\"\r\n                CREATED_DATE:\"${this.state.CREATED_DATE}\"\r\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\r\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\r\n                SET_REVENUE_FEE_ID:${this.state.SET_REVENUE_FEE_ID}\r\n                SET_REVENUE_FEE_CATEGORY_ID:${this.state.SET_REVENUE_FEE_CATEGORY_ID}\r\n                \r\n                SET_MODULE_ID:${this.state.SET_MODULE_ID}\r\n\r\n                ){\r\n                    REG_BETTING_ID\r\n            }\r\n        }\r\n        `;\r\n\r\n            if (this.state.InsertUpdate === 'Insert') {\r\n                API.create(form)\r\n                    .then(({ data }) => {\r\n\r\n                        let bettingID = data.data.addBettingRegister.REG_BETTING_ID;\r\n\r\n                        let reg_betting_num = this.state.DOCUMENT_PREFIX + '-' + parseInt(bettingID + this.state.INCREMENTBY)\r\n                        this.setState({\r\n                            BETTING_NUMBER: reg_betting_num\r\n                        });\r\n                        this.GenerateDocumentNumber(bettingID);\r\n                        this.clearData();\r\n                        this.handleHide();\r\n                        this.populateData();\r\n                        toastr.success('Create Record', 'Record Created Successfully');\r\n                    }).catch(error => {\r\n                        if (error.response || error.request) {\r\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\r\n                        }\r\n                    })\r\n            } else {\r\n                API.update(formEdit)\r\n                    .then(() => {\r\n                        this.clearData();\r\n                        this.handleHide();\r\n                        this.populateData();\r\n                        toastr.info('Update Record', 'Record Updated Successfully');\r\n                    }).catch(error => {\r\n                        if (error.response || error.request) {\r\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n        this.setState({\r\n            validated: true\r\n        })\r\n    }\r\n\r\n    handleDelete = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formDelete = `\r\n        mutation{\r\n            deleteBettingRegister(\r\n                REG_BETTING_ID:${this.state.REG_BETTING_ID}\r\n                ){\r\n                    REG_BETTING_ID\r\n            }\r\n        }\r\n        `;\r\n\r\n        API.remove(formDelete)\r\n            .then(() => {\r\n                this.handleHideDelete();\r\n                this.populateData();\r\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\r\n            }).catch(error => {\r\n                if (error.response || error.request) {\r\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\r\n                }\r\n            })\r\n\r\n    }\r\n    GenerateDocumentNumber = (id) => {\r\n\r\n        const formEdit = `\r\n        mutation{\r\n            updateBettingRegister(\r\n                REG_BETTING_ID:${id},\r\n                BETTING_NUMBER:\"${this.state.BETTING_NUMBER}\"\r\n              ){\r\n                REG_BETTING_ID\r\n            }\r\n        }\r\n        `;\r\n\r\n        API.update(formEdit)\r\n            .then(() => {\r\n                this.populateData();\r\n            }).catch(error => {\r\n                if (error.response || error.request) {\r\n                    toastr.error('Error Generating', 'Failed to Generate Document Data');\r\n                }\r\n            })\r\n\r\n    }\r\n    handleCloseModulesSearch = (e) => {\r\n\r\n        this.setState({\r\n\r\n            SET_MODULE_ID: e.MODULE_ID,\r\n            MODULE_NAME: e.MODULE_NAME,\r\n            FEECATEGORY_CODE: '',\r\n            openmodulessearch: false,\r\n        });\r\n        this.populateFeeCategory(e.MODULE_ID);\r\n        this.populateDocumnetNumber(e.MODULE_ID);\r\n\r\n    };\r\n    handleCloseBusinessRegisterSearch = (e) => {\r\n\r\n        this.setState({\r\n            REG_BUSINESS_ID: e.BUSINESS_ID,\r\n            BUSINESS_NAME: e.BUSINESS_NAME,\r\n            BUILDING_NAME: e.BUILDING_NAME,\r\n            POSTAL_ADDRESS: e.POSTAL_ADDRESS,\r\n            PLOTNUMBER: e.PLOTNUMBER,\r\n            STREET: e.STREET,\r\n            MOBILE_NUMBER: e.MOBILE_NUMBER,\r\n            EMAIL: e.EMAIL,\r\n            CLIENT_NAME: e.CLIENTID.CLIENT_NAME,\r\n            CLIENT_DOCUMENT_NUMBER: e.CLIENTID.CLIENT_DOCUMENT_NUMBER,\r\n            CLIENT_POSTAL_ADDRESS: e.CLIENTID.POSTAL_ADDRESS,\r\n            CLIENT_MOBILE_NUMBER: e.CLIENTID.MOBILE_NUMBER,\r\n            openbusineeregistersearch: false,\r\n        });\r\n\r\n    };\r\n    handleCloseBettingTypeSearch = (e) => {\r\n\r\n        this.setState({\r\n            SET_BETTING_TYPE_ID: e.BETTING_TYPE_ID,\r\n            BETTING_TYPE_NAME: e.BETTING_TYPE_NAME,\r\n\r\n            openbettingtypesearch: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleCloseFeeCategorySearch = (e) => {\r\n\r\n        this.setState({\r\n            SET_REVENUE_FEE_CATEGORY_ID: e.FEECATEGORY_ID,\r\n            FEECATEGORY_CODE: e.FEECATEGORY_CODE,\r\n            FEE_NAME: '',\r\n            openFeeCategorySearch: false,\r\n        });\r\n        this.populateFee(e.FEECATEGORY_ID);\r\n    };\r\n    handleCloseFeeSearch = (e) => {\r\n\r\n        this.setState({\r\n            SET_REVENUE_FEE_ID: e.FEE_ID,\r\n            FEE_NAME: e.FEE_NAME,\r\n            openfeesearch: false,\r\n        });\r\n    };\r\n    handleCloseClientRegistrationSearch = (e) => {\r\n        this.setState({\r\n            CLIENT_ID: e.CLIENT_ID,\r\n            CLIENT_NAME: e.CLIENT_NAME,\r\n            CLIENT_DOCUMENT_NUMBER: e.CLIENT_DOCUMENT_NUMBER,\r\n            CLIENT_POSTAL_ADDRESS: e.POSTAL_ADDRESS,\r\n            CLIENT_MOBILE_NUMBER: e.MOBILE_NUMBER,\r\n            openclientregistrationsearch: false,\r\n        });\r\n    };\r\n    handleCloseSearch = (e) => {\r\n\r\n        this.setState({\r\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\r\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\r\n            opensearch: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleEditData = (e) => {\r\n        this.setState({\r\n            REG_BETTING_ID: e.REG_BETTING_ID,\r\n            BETTING_NUMBER: e.BETTING_NUMBER,\r\n            REG_BUSINESS_ID: e.REG_BUSINESS_ID,\r\n            SET_BETTING_TYPE_ID: e.SET_BETTING_TYPE_ID,\r\n\r\n            SET_REVENUE_FEE_ID: e.SET_REVENUE_FEE_ID,\r\n            SET_REVENUE_FEE_CATEGORY_ID: e.SET_REVENUE_FEE_CATEGORY_ID,\r\n            CLIENT_ID: e.BUSINESS_REGISTER.CLIENTID.CLIENT_ID,\r\n            CLIENT_NAME: e.BUSINESS_REGISTER.CLIENTID.CLIENT_NAME,\r\n            CLIENT_DOCUMENT_NUMBER: e.BUSINESS_REGISTER.CLIENTID.CLIENT_DOCUMENT_NUMBER,\r\n            CLIENT_POSTAL_ADDRESS: e.BUSINESS_REGISTER.CLIENTID.POSTAL_ADDRESS,\r\n            CLIENT_MOBILE_NUMBER: e.BUSINESS_REGISTER.CLIENTID.MOBILE_NUMBER,\r\n            FEECATEGORY_CODE: e.FEE_CATEGORY.FEECATEGORY_CODE,\r\n            FEE_NAME: e.FEE.FEE_NAME,\r\n            WARD_NAME: e.BUSINESS_REGISTER.WARD.WARD_NAME,\r\n            SUBCOUNTY_NAME: e.BUSINESS_REGISTER.SUB_COUNTY.SUBCOUNTY_NAME,\r\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\r\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\r\n            BUSINESS_NAME: e.BUSINESS_REGISTER.BUSINESS_NAME,\r\n            BUILDING_NAME: e.BUSINESS_REGISTER.BUILDING_NAME,\r\n            POSTAL_ADDRESS: e.BUSINESS_REGISTER.POSTAL_ADDRESS,\r\n            PLOTNUMBER: e.BUSINESS_REGISTER.PLOTNUMBER,\r\n            STREET: e.BUSINESS_REGISTER.STREET,\r\n            MOBILE_NUMBER: e.BUSINESS_REGISTER.MOBILE_NUMBER,\r\n            EMAIL: e.BUSINESS_REGISTER.EMAIL,\r\n            BETTING_TYPE_NAME: e.BETTING.BETTING_TYPE_NAME,\r\n            MODULE_NAME: e.SET_MODULES.MODULE_NAME,\r\n            SET_MODULE_ID: e.SET_MODULE_ID,\r\n            show: true,\r\n            InsertUpdate: 'Update'\r\n        })\r\n    }\r\n\r\n    handleDeleteData = (e) => {\r\n        this.setState({\r\n            REG_BETTING_ID: e.REG_BETTING_ID,\r\n            BETTING_NUMBER: e.BETTING_NUMBER,\r\n            showdelete: true,\r\n            InsertUpdate: 'Delete'\r\n        })\r\n    }\r\n\r\n    clearData() {\r\n        this.setState({\r\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\r\n            CLIENT_NAME: '',\r\n            FEECATEGORY_CODE: '',\r\n            FEE_NAME: '',\r\n            SUBCOUNTY_NAME: '',\r\n            WARD_NAME: '',\r\n            CLIENT_DOCUMENT_NUMBER: '',\r\n            CLIENT_POSTAL_ADDRESS: '',\r\n            CLIENT_MOBILE_NUMBER: '',\r\n            BUSINESS_NAME: '',\r\n            BUILDING_NAME: '',\r\n            POSTAL_ADDRESS: '',\r\n            PLOTNUMBER: '',\r\n            STREET: '',\r\n            MOBILE_NUMBER: '',\r\n            EMAIL: '',\r\n            BETTING_TYPE_NAME: '',\r\n            BETTING_NUMBER: 'Auto',\r\n            MODULE_NAME: '',\r\n            validated: false,\r\n\r\n        })\r\n    }\r\n\r\n    handleFilter = (e) => {\r\n        let value = e.target.value\r\n        let data = this.state.data\r\n        let filteredData = this.state.filteredData\r\n        this.setState({\r\n            value\r\n        });\r\n\r\n        if (value.length) {\r\n            filteredData = data.filter(item => {\r\n                let startsWithCondition =\r\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.BETTING_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.BUSINESS_REGISTER.CLIENTID.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.BUSINESS_REGISTER.BUSINESS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.BUSINESS_REGISTER.SUB_COUNTY.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.BUSINESS_REGISTER.WARD.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                let includesCondition =\r\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\r\n                    item.BETTING_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.BUSINESS_REGISTER.CLIENTID.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.BUSINESS_REGISTER.BUSINESS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.BUSINESS_REGISTER.SUB_COUNTY.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.BUSINESS_REGISTER.WARD.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                if (startsWithCondition) {\r\n                    return startsWithCondition\r\n                } else if (!startsWithCondition && includesCondition) {\r\n                    return includesCondition\r\n                } else return null\r\n            })\r\n            this.setState({\r\n                filteredData\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSearchFilter = (e) => {\r\n        let value = e.target.value\r\n        let data = this.state.searchdata\r\n        let filteredData = this.state.searchFilteredData\r\n        this.setState({\r\n            searchvalue: value\r\n        });\r\n\r\n        if (value.length) {\r\n            filteredData = data.filter(item => {\r\n                let startsWithCondition =\r\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                let includesCondition =\r\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWithCondition) {\r\n                    return startsWithCondition\r\n                } else if (!startsWithCondition && includesCondition) {\r\n                    return includesCondition\r\n                } else return null\r\n            })\r\n            this.setState({\r\n                filteredData\r\n            })\r\n        }\r\n    }\r\n    handleSearchModulesFilter = (e) => {\r\n        let value = e.target.value\r\n        let data = this.state.searchmodulesdata\r\n        let filteredModulesData = this.state.searchFilteredModulesData\r\n        this.setState({ searchmodulesvalue: value });\r\n\r\n        if (value.length) {\r\n            filteredModulesData = data.filter(item => {\r\n                let startsWithCondition =\r\n                    item.MODULE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                let includesCondition =\r\n                    item.MODULE_NAME.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWithCondition) {\r\n                    return startsWithCondition\r\n                } else if (!startsWithCondition && includesCondition) {\r\n                    return includesCondition\r\n                } else return null\r\n            })\r\n            this.setState({ filteredModulesData })\r\n        }\r\n    }\r\n    handleSearchBusinessRegisterFilter = (e) => {\r\n        let value = e.target.value\r\n        let data = this.state.searchbusinessregisterdata\r\n        let filteredBusinessRegisterData = this.state.searchfilteredBusinessRegisterData\r\n        this.setState({ searchbusinessregistervalue: value });\r\n\r\n        if (value.length) {\r\n            filteredBusinessRegisterData = data.filter(item => {\r\n                let startsWithCondition =\r\n                    item.BUSINESS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                let includesCondition =\r\n                    item.BUSINESS_NAME.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWithCondition) {\r\n                    return startsWithCondition\r\n                } else if (!startsWithCondition && includesCondition) {\r\n                    return includesCondition\r\n                } else return null\r\n            })\r\n            this.setState({ filteredBusinessRegisterData })\r\n        }\r\n    }\r\n    handleSearchSubCountyFilter = (e) => {\r\n        let value = e.target.value\r\n        let data = this.state.searchsubcountydata\r\n        let filteredSubCountyData = this.state.searchFilteredSubCountyData\r\n        this.setState({ searchsubcountyvalue: value });\r\n\r\n        if (value.length) {\r\n            filteredSubCountyData = data.filter(item => {\r\n                let startsWithCondition =\r\n                    item.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                let includesCondition =\r\n                    item.SUBCOUNTY_NAME.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWithCondition) {\r\n                    return startsWithCondition\r\n                } else if (!startsWithCondition && includesCondition) {\r\n                    return includesCondition\r\n                } else return null\r\n            })\r\n            this.setState({ filteredSubCountyData })\r\n        }\r\n    }\r\n    handleSearchBettingTypeFilter = (e) => {\r\n        let value = e.target.value\r\n        let data = this.state.searchbettingtypedata\r\n        let filteredBettingTypeData = this.state.searchfilteredBettingTypeData\r\n        this.setState({ searchbettingtypevalue: value });\r\n\r\n        if (value.length) {\r\n            filteredBettingTypeData = data.filter(item => {\r\n                let startsWithCondition =\r\n                    item.BETTING_TYPE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                let includesCondition =\r\n                    item.BETTING_TYPE_NAME.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWithCondition) {\r\n                    return startsWithCondition\r\n                } else if (!startsWithCondition && includesCondition) {\r\n                    return includesCondition\r\n                } else return null\r\n            })\r\n            this.setState({ filteredBettingTypeData })\r\n        }\r\n    }\r\n    handleSearchWardFilter = (e) => {\r\n        let value = e.target.value\r\n        let data = this.state.searchwarddata\r\n        let filteredWardData = this.state.searchFilteredWardData\r\n        this.setState({ searchwardvalue: value });\r\n\r\n        if (value.length) {\r\n            filteredWardData = data.filter(item => {\r\n                let startsWithCondition =\r\n                    item.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                let includesCondition =\r\n                    item.WARD_NAME.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWithCondition) {\r\n                    return startsWithCondition\r\n                } else if (!startsWithCondition && includesCondition) {\r\n                    return includesCondition\r\n                } else return null\r\n            })\r\n            this.setState({ filteredWardData })\r\n        }\r\n    }\r\n    handleSearchFeeCategoryFilter = (e) => {\r\n\r\n        let value = e.target.value\r\n        let data = this.state.searchfeecategorydata\r\n        let filteredFeeCategoryData = this.state.searchFilteredFeeCategoryData\r\n        this.setState({ searchfeecategoryvalue: value });\r\n\r\n        if (value.length) {\r\n            filteredFeeCategoryData = data.filter(item => {\r\n                let startsWithCondition =\r\n                    item.FEECATEGORY_CODE.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                let includesCondition =\r\n                    item.FEECATEGORY_CODE.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWithCondition) {\r\n                    return startsWithCondition\r\n                } else if (!startsWithCondition && includesCondition) {\r\n                    return includesCondition\r\n                } else return null\r\n            })\r\n            this.setState({ filteredFeeCategoryData })\r\n        }\r\n    }\r\n    handleSearchFeeFilter = (e) => {\r\n        let value = e.target.value\r\n        let data = this.state.searchfeedata\r\n        let filteredFeeData = this.state.searchFilteredFeeData\r\n        this.setState({ searchfeevalue: value });\r\n\r\n        if (value.length) {\r\n            filteredFeeData = data.filter(item => {\r\n                let startsWithCondition =\r\n                    item.FEE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                let includesCondition =\r\n                    item.FEE_NAME.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWithCondition) {\r\n                    return startsWithCondition\r\n                } else if (!startsWithCondition && includesCondition) {\r\n                    return includesCondition\r\n                } else return null\r\n            })\r\n            this.setState({ filteredFeeData })\r\n        }\r\n    }\r\n    handleSearchClientRegistrationFilter = (e) => {\r\n        let value = e.target.value\r\n        let data = this.state.searchclientregistrationdata\r\n        let filteredClientRegistrationData = this.state.searchFilteredClientRegistrationData\r\n        this.setState({ searchclientregistrationvalue: value });\r\n\r\n        if (value.length) {\r\n            filteredClientRegistrationData = data.filter(item => {\r\n                let startsWithCondition =\r\n                    item.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                let includesCondition =\r\n                    item.CLIENT_NAME.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWithCondition) {\r\n                    return startsWithCondition\r\n                } else if (!startsWithCondition && includesCondition) {\r\n                    return includesCondition\r\n                } else return null\r\n            })\r\n            this.setState({ filteredClientRegistrationData })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { data, value, filteredData, searchdata, searchvalue, searchsubcountyvalue, searchsubcountydata, filteredSubCountyData, searchwardvalue,\r\n            searchwarddata, filteredWardData, searchfeevalue, searchfeedata, filteredFeeData, searchfeecategoryvalue, searchfeecategorydata, filteredFeeCategoryData\r\n            , searchclientregistrationvalue, searchclientregistrationdata, filteredClientRegistrationData,\r\n            searchbettingtypevalue, searchbettingtypedata, filteredBettingTypeData,\r\n            searchbusinessregistervalue, searchbusinessregisterdata, filteredBusinessRegisterData,\r\n            searchmodulesvalue, searchmodulesdata, filteredModulesData } = this.state\r\n        return (\r\n            <>\r\n                <Helmet><title>Betting and Lotteries Registration</title></Helmet>\r\n\r\n                <React.Fragment>\r\n                    <Breadcrumbs\r\n                        breadCrumbTitle=\"Registers\"\r\n                        breadCrumbParent=\"Registration\"\r\n                        breadCrumbActive=\"Betting and Lotteries Registration\"\r\n                    />\r\n                    <Row>\r\n                        <Col sm=\"12\">\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <CardTitle>Betting and Lotteries Registration</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody className=\"rdt_Wrapper\">\r\n                                    <ModuleSearch\r\n                                        handleSearchModule={this.handleCloseModulesSearch}\r\n                                        opensearch={this.state.openmodulessearch}\r\n                                        handleHideSearch={this.handleHideModulesSearch}\r\n                                        value={searchmodulesvalue}\r\n                                        data={searchmodulesdata}\r\n                                        handleFilter={this.handleSearchModulesFilter}\r\n                                        filteredData={filteredModulesData}\r\n                                    />\r\n                                    <BusinessRegisterSearch\r\n                                        handleSearchBusinessName={this.handleCloseBusinessRegisterSearch}\r\n                                        opensearch={this.state.openbusineeregistersearch}\r\n                                        handleHideSearch={this.handleHideBusinessRegisterSearch}\r\n                                        value={searchbusinessregistervalue}\r\n                                        data={searchbusinessregisterdata}\r\n                                        handleFilter={this.handleSearchBusinessRegisterFilter}\r\n                                        filteredData={filteredBusinessRegisterData}\r\n                                    />\r\n                                    <BettingTypeSearch\r\n                                        handleSearchBettingType={this.handleCloseBettingTypeSearch}\r\n                                        opensearch={this.state.openbettingtypesearch}\r\n                                        handleHideSearch={this.handleHideBettingTypeSearch}\r\n                                        value={searchbettingtypevalue}\r\n                                        data={searchbettingtypedata}\r\n                                        handleFilter={this.handleSearchBettingTypeFilter}\r\n                                        filteredData={filteredBettingTypeData}\r\n                                    />\r\n                                    <SubCountyTypeSearch\r\n                                        handleSearchSubCounty={this.handleCloseSubCountySearch}\r\n                                        opensearch={this.state.opensubcountysearch}\r\n                                        handleHideSearch={this.handleHideSubCountySearch}\r\n                                        value={searchsubcountyvalue}\r\n                                        data={searchsubcountydata}\r\n                                        handleFilter={this.handleSearchSubCountyFilter}\r\n                                        filteredData={filteredSubCountyData}\r\n                                    />\r\n                                    <WardsSearch\r\n                                        handleSearchWards={this.handleCloseWardSearch}\r\n                                        opensearch={this.state.openwardsearch}\r\n                                        handleHideSearch={this.handleHideWardSearch}\r\n                                        value={searchwardvalue}\r\n                                        data={searchwarddata}\r\n                                        handleFilter={this.handleSearchWardFilter}\r\n                                        filteredData={filteredWardData}\r\n                                    />\r\n                                    <FeesSearch\r\n                                        handleSearchFees={this.handleCloseFeeSearch}\r\n                                        opensearch={this.state.openfeesearch}\r\n                                        handleHideSearch={this.handleHideFeesSearch}\r\n                                        value={searchfeevalue}\r\n                                        data={searchfeedata}\r\n                                        handleFilter={this.handleSearchFeeFilter}\r\n                                        filteredData={filteredFeeData}\r\n                                    />\r\n                                    <FeeCategorySearch\r\n                                        handleSearchFEECATEGORY={this.handleCloseFeeCategorySearch}\r\n                                        opensearch={this.state.openFeeCategorySearch}\r\n                                        handleHideSearch={this.handleHideFeeCategorySearch}\r\n                                        value={searchfeecategoryvalue}\r\n                                        data={searchfeecategorydata}\r\n                                        handleFilter={this.handleSearchFeeCategoryFilter}\r\n                                        filteredData={filteredFeeCategoryData}\r\n                                    />\r\n                                    <ClientRegistrationSearch\r\n                                        handleSearchClientRegistration={this.handleCloseClientRegistrationSearch}\r\n                                        opensearch={this.state.openclientregistrationsearch}\r\n                                        handleHideSearch={this.handleHideClientRegistrationSearch}\r\n                                        value={searchclientregistrationvalue}\r\n                                        data={searchclientregistrationdata}\r\n                                        handleFilter={this.handleSearchClientRegistrationFilter}\r\n                                        filteredData={filteredClientRegistrationData}\r\n                                    />\r\n                                    <SystemStatusTypeSearch\r\n                                        handleSearchSystemStatusType={this.handleCloseSearch}\r\n                                        opensearch={this.state.opensearch}\r\n                                        handleHideSearch={this.handleHideSearch}\r\n                                        value={searchvalue}\r\n                                        data={searchdata}\r\n                                        handleFilter={this.handleSearchFilter}\r\n                                        filteredData={filteredData}\r\n                                    />\r\n                                    <BusinessPopover\r\n                                        openAddresssearch={this.state.openbusinesssearchEye}\r\n                                        handleHideAddressSearch={this.handleHideBusinessSearchEye}\r\n                                        BusinessNamePopup={this.state.BUSINESS_NAME}\r\n                                        changeBusinessNamePopup={e => this.setState({ BUSINESS_NAME: e.target.value })}\r\n                                        BuildingName={this.state.BUILDING_NAME}\r\n                                        handleChangeBuildingName={e => this.setState({ BUILDING_NAME: e.target.value })}\r\n                                        PostalAddress={this.state.POSTAL_ADDRESS}\r\n                                        handleChangePostalAddress={e => this.setState({ POSTAL_ADDRESS: e.target.value })}\r\n                                        PlotNumber={this.state.PLOTNUMBER}\r\n                                        handleChangePlotNumber={e => this.setState({ PLOTNUMBER: e.target.value })}\r\n                                        Street={this.state.STREET}\r\n                                        handleChangeStreet={e => this.setState({ STREET: e.target.value })}\r\n                                        MobileNumber={this.state.MOBILE_NUMBER}\r\n                                        handleChangeMobileNumber={e => this.setState({ MOBILE_NUMBER: e.target.value })}\r\n                                        Email={this.state.EMAIL}\r\n                                        handleChangeEmail={e => this.setState({ EMAIL: e.target.value })}\r\n\r\n\r\n                                    />\r\n                                    <ClientPopover\r\n                                        opensearch={this.state.openclientsearchEye}\r\n                                        handleHideSearch={this.handleHideClientSearchEye}\r\n                                        ClientNamePopUp={this.state.CLIENT_NAME}\r\n                                        handleChangeClientNamePopUp={e => this.setState({ CLIENT_NAME: e.target.value })}\r\n                                        ClientDocumentNumber={this.state.CLIENT_DOCUMENT_NUMBER}\r\n                                        changeClientDocumentNumber={e => this.setState({ CLIENT_DOCUMENT_NUMBER: e.target.value })}\r\n                                        ClientPostalAddress={this.state.CLIENT_POSTAL_ADDRESS}\r\n                                        changeClientPostalAddress={e => this.setState({ CLIENT_POSTAL_ADDRESS: e.target.value })}\r\n                                        ClientMobileNumber={this.state.CLIENT_MOBILE_NUMBER}\r\n                                        changeClientMobileNumber={e => this.setState({ CLIENT_MOBILE_NUMBER: e.target.value })}\r\n                                    />\r\n\r\n                                    <BettingRegistrationTable\r\n                                        role={this.constructor.name}\r\n                                        handleEdit={this.handleEditData}\r\n                                        handleDelete={this.handleDeleteData}\r\n                                        value={value}\r\n                                        data={data}\r\n                                        filteredData={filteredData}\r\n                                        handleShow={this.handleShow}\r\n                                        handleFilter={this.handleFilter}\r\n                                    />\r\n\r\n                                    <BettingRegistrationModals\r\n                                        validated={this.state.validated}\r\n                                        show={this.state.show}\r\n                                        handleHide={this.handleHide}\r\n                                        InsertUpdate={this.state.InsertUpdate}\r\n                                        handleSubmit={this.handleSubmit}\r\n                                        handleShowBusinessSearchEye={this.handleShowBusinessSearchEye}\r\n                                        handleShowClientSearchEye={this.handleShowClientSearchEye}\r\n                                        handleShowBusinessRegister={this.handleShowBusinessRegisterSearch}\r\n                                        handleShowSearch={this.handleShowSearch}\r\n                                        handleShowModules={this.handleShowModulesSearch}\r\n                                        handleShowBettingType={this.handleShowBettingTypeSearch}\r\n                                        handleShowSubCounty={this.handleShowSubCountySearch}\r\n                                        handleShowWard={this.handleShowWardSearch}\r\n                                        handleShowFees={this.handleShowFeesSearch}\r\n                                        handleShowFeeCategorySearch={this.handleShowFeeCategorySearch}\r\n                                        handleShowClientRegistrationSearch={this.handleShowClientRegistrationSearch}\r\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\r\n                                        handleChangeSystemStatusTypeDescription={e => this.setState({ SYSTEMSTATUSTYPEDESCRIPTION: e.target.value })}\r\n                                        ClientDocumentNumber={this.state.CLIENT_DOCUMENT_NUMBER}\r\n                                        changeClientDocumentNumber={e => this.setState({ CLIENT_DOCUMENT_NUMBER: e.target.value })}\r\n                                        ClientPostalAddress={this.state.CLIENT_POSTAL_ADDRESS}\r\n                                        changeClientPostalAddress={e => this.setState({ CLIENT_POSTAL_ADDRESS: e.target.value })}\r\n                                        ClientMobileNumber={this.state.CLIENT_MOBILE_NUMBER}\r\n                                        changeClientMobileNumber={e => this.setState({ CLIENT_MOBILE_NUMBER: e.target.value })}\r\n                                        SubCountyName={this.state.SUBCOUNTY_NAME}\r\n                                        WardName={this.state.WARD_NAME}\r\n                                        FeeName={this.state.FEE_NAME}\r\n                                        ClientName={this.state.CLIENT_NAME}\r\n                                        FeeCategoryName={this.state.FEECATEGORY_CODE}\r\n                                        BusinessName={this.state.BUSINESS_NAME}\r\n                                        BuildingName={this.state.BUILDING_NAME}\r\n                                        handleChangeBuildingName={e => this.setState({ BUILDING_NAME: e.target.value })}\r\n                                        PostalAddress={this.state.POSTAL_ADDRESS}\r\n                                        handleChangePostalAddress={e => this.setState({ POSTAL_ADDRESS: e.target.value })}\r\n                                        PlotNumber={this.state.PLOTNUMBER}\r\n                                        handleChangePlotNumber={e => this.setState({ PLOTNUMBER: e.target.value })}\r\n                                        Street={this.state.STREET}\r\n                                        handleChangeStreet={e => this.setState({ STREET: e.target.value })}\r\n                                        MobileNumber={this.state.MOBILE_NUMBER}\r\n                                        handleChangeMobileNumber={e => this.setState({ MOBILE_NUMBER: e.target.value })}\r\n                                        Email={this.state.EMAIL}\r\n                                        handleChangeEmail={e => this.setState({ EMAIL: e.target.value })}\r\n                                        BettingTypeName={this.state.BETTING_TYPE_NAME}\r\n                                        BettingNumber={this.state.BETTING_NUMBER}\r\n                                        changeBettingNumber={e => this.setState({ BETTING_NUMBER: e.target.value })}\r\n                                        ModuleName={this.state.MODULE_NAME}\r\n                                        showdelete={this.state.showdelete}\r\n                                        handleHideDelete={this.handleHideDelete}\r\n                                        handleDelete={this.handleDelete}\r\n\r\n                                    />\r\n\r\n\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </React.Fragment>\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ auth: { user } }) => ({\r\n    user\r\n});\r\n\r\nexport default (connect(mapStateToProps)(BettingRegistration));"],"sourceRoot":""}