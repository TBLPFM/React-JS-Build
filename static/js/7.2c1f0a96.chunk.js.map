{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","utility/dateAndTime.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/SearchComponents/ModuleSearch/ModuleSearch.js","views/pages/SearchComponents/SubCountyTypeSearch/SubCountyTypeSearch.js","views/pages/SearchComponents/FeeCategorySearch/FeeCategorySearch.js","views/pages/SearchComponents/WardsSearch/WardsSearch.js","views/pages/SearchComponents/FeesSearch/FeesSearch.js","views/pages/SearchComponents/ClientRegistrationSearch/ClientRegistrationSearch.js","views/pages/Registration/WeightsRegistration/Tables/WeightsRegistrationTable.js","views/pages/Registration/WeightsRegistration/Modals/WeightsRegistrationModal.js","views/pages/SearchComponents/WeightDeviceSearch/WeightDeviceSearch.js","views/pages/Registration/WeightsRegistration/WeightsRegistration.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","ShowDate","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","RMSModuleSearch","handleSearchModule","MODULE_NAME","paginationPerPage","SubCountySearch","handleSearchSubCounty","SUBCOUNTY_NAME","FeeCategorySearch","handleSearchFEECATEGORY","FEECATEGORY_CODE","FEECATEGORY_NAME","WardsSearch","handleSearchWards","WARD_NAME","FeesSearch","handleSearchFees","FEE_NAME","ClientRegistrationSearch","handleSearchClientRegistration","CLIENT_NAME","CLIENT_DOCUMENT_NUMBER","WeightsRegistrationTable","Button","handleEdit","handleDelete","REG_WEIGHT_NUMBER","CLIENTID","WEIGHT_DEVICE","WEIGHT_DEVICE_NAME","SUB_COUNTY","WARD","SYSTEMSTATUS","subHeader","responsive","subHeaderComponent","WeightsRegistrationModal","Modal","handleHide","id","InsertUpdate","Form","onSubmit","handleSubmit","autoComplete","Row","Group","Col","md","controlId","Label","Control","placeholder","RegistrationNumber","changeRegistrationNumber","readOnly","WeightDeviceDescription","handleChangeWeightDeviceDescription","aria-describedby","required","variant","handleShowWeight","SubCountyName","handleChangeSubCountyName","handleShowSubCounty","WardName","handleChangeWardName","handleShowWard","ModuleName","handleChangeModuleName","handleShowModules","FeeCategoryName","handleChangeFeeCategoryName","handleShowFeeCategorySearch","FeeName","handleChangeFeeName","handleShowFees","ClientID","handleChangeClientID","hidden","ClientName","handleChangeClientName","handleShowClientRegistrationSearch","ClientDocumentNumber","changeClientDocumentNumber","ClientPostalAddress","changeClientPostalAddress","ClientMobileNumber","changeMobileNumber","SystemStatusTypeDescription","handleChangeSystemStatusTypeDescription","handleShowSearch","Footer","isEnabled","showdelete","handleHideDelete","WeightDeviceSearch","handleSearchWeight","Input","WeightsRegistration","context","populateDocumnetNumber","getdata","API","then","INCREMENTBY","FinalString","dataD","DocumentNumberFilter","setState","DOCUMENT_PREFIX","catch","error","response","request","toastr","event","preventDefault","form","state","SET_WEIGHT_DEVICE_ID","SET_SUB_COUNTY_ID","SET_WARD_ID","SET_REVENUE_CATEGORY_ID","SET_REVENUE_FEE_ID","CLIENT_ID","SYS_STATUS_ID","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","SET_MODULE_ID","formEdit","REG_WEIGHT_ID","weightID","addWeightsRegister","reg_weight_num","parseInt","GenerateDocumentNumber","clearData","populateData","success","info","formDelete","warning","handleCloseModulesSearch","MODULE_ID","openmodulessearch","populateFeeCategory","handleCloseWeightSearch","WEIGHT_DEVICE_ID","WEIGHT_DEVICE_DESCRIPTION","openweightsearch","handleCloseSubCountySearch","SUBCOUNTY_ID","opensubcountysearch","populateWard","handleCloseWardSearch","WARD_ID","openwardsearch","handleCloseFeeCategorySearch","FEECATEGORY_ID","openFeeCategorySearch","populateFee","handleCloseFeeSearch","FEE_ID","openfeesearch","handleCloseClientRegistrationSearch","CLIENT_POSTAL_ADDRESS","POSTAL_ADDRESS","CLIENT_MOBILE_NUMBER","MOBILE_NUMBER","openclientregistrationsearch","handleCloseSearch","SYSTEMSTATUSTYPEDESCRIPTION","handleEditData","FEE_CATEGORY","FEE","Set_Modules","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","handleSearchFilter","searchdata","searchFilteredData","searchvalue","handleSearchModulesFilter","searchmodulesdata","filteredModulesData","searchFilteredModulesData","searchmodulesvalue","handleSearchSubCountyFilter","searchsubcountydata","filteredSubCountyData","searchFilteredSubCountyData","searchsubcountyvalue","handleSearchWeightFilter","searchweightdata","filteredWeightData","searchFilteredWeightData","searchweightvalue","handleSearchWardFilter","searchwarddata","filteredWardData","searchFilteredWardData","searchwardvalue","handleSearchFeeCategoryFilter","searchfeecategorydata","filteredFeeCategoryData","searchFilteredFeeCategoryData","searchfeecategoryvalue","handleSearchFeeFilter","searchfeedata","filteredFeeData","searchFilteredFeeData","searchfeevalue","handleSearchClientRegistrationFilter","searchclientregistrationdata","filteredClientRegistrationData","searchFilteredClientRegistrationData","searchclientregistrationvalue","AUTOMATICNUMBER","EMAIL","ClIENT_NAME","searchcolumns","searchmoduledata","searchDocNumdata","handleShowModulesSearch","handleShowWeightSearch","handleShowSubCountySearch","handleShowWardSearch","handleShowFeesSearch","handleHideModulesSearch","handleHideWeightSearch","handleHideSubCountySearch","handleHideWardSearch","handleHideFeeCategorySearch","handleHideFeesSearch","handleHideClientRegistrationSearch","populateSubCounty","populateClientRegistration","populateTypes","populateWeights","populateModules","WeightsRegister","SystemStatusFilter","SubCounties","Modules","WeightDevices","FeeCategoryFilter","WardFilter","FeeFilter","Clients","Helmet","Fragment","sm","Card","CardHeader","CardTitle","CardBody","ModuleSearch","SubCountyTypeSearch","constructor","changeClientMobileNumber","connect"],"mappings":"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","file":"static/js/7.2c1f0a96.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","\nimport React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n      <Can I=\"create\" a={props.role} passThrough>\n          { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n        </Can>\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader\n","\nexport function ShowDate() {\n\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  return yyyy + '-' + mm + '-' + dd;\n}\n\n\nexport function ShowTime() {\n\n  let today = new Date();\n  let time = today.getHours() + \":\" + today.getMinutes();\n\n  return time;\n}\n","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass RMSModuleSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchModule(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"MODULE_NAME\",\n                selector: \"MODULE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.MODULE_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Module Name\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                            paginationPerPage={5}\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default RMSModuleSearch","import React from \"react\"\nimport { Button, Input } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SubCountySearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSubCounty(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"SUBCOUNTY NAME\",\n                selector: \"SUBCOUNTY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SUBCOUNTY_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Sub County Name\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                            paginationPerPage={5}\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SubCountySearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass FeeCategorySearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchFEECATEGORY(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Fee Category Code\",\n                selector: \"FEECATEGORY_CODE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FEECATEGORY_CODE}</p>\n            },\n            {\n                name: \"Fee Category Name\",\n                selector: \"FEECATEGORY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FEECATEGORY_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Fee Category\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default FeeCategorySearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass WardsSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchWards(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Wards\",\n                selector: \"WARD_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WARD_NAME}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Ward\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default WardsSearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass FeesSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchFees(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Fees\",\n                selector: \"FEE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FEE_NAME}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Detailed Description\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default FeesSearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass ClientRegistrationSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchClientRegistration(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Client Name\",\n                selector: \"CLIENT_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_NAME}</p>\n            },\n            {\n                name: \"Document Number\",\n                selector: \"CLIENT_DOCUMENT_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_DOCUMENT_NUMBER}</p>\n            },\n\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Citizen\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                            paginationPerPage={5}\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ClientRegistrationSearch","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\nclass WeightsRegistrationTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            {allowed =>\n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            {allowed =>\n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"Reg. Number\",\n                selector: \"REG_WEIGHT_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.REG_WEIGHT_NUMBER}</p>\n            },\n            {\n                name: \"Client\",\n                selector: \"ClIENT_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENTID.CLIENT_NAME}</p>\n            },\n            {\n                name: \"Weight Device\",\n                selector: \"WEIGHT_DEVICE_DESCRIPTION\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WEIGHT_DEVICE.WEIGHT_DEVICE_NAME}</p>\n            },\n            {\n                name: \"Subcounty Name\",\n                selector: \"SUBCOUNTY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SUB_COUNTY.SUBCOUNTY_NAME}</p>\n            },\n            {\n                name: \"Ward Name\",\n                selector: \"WARD_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WARD.WARD_NAME}</p>\n            },\n            {\n                name: \"Status\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYSTEMSTATUS.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n                <DataTable\n                    className=\"dataTable-custom\"\n                    data={this.props.value.length ? this.props.filteredData : this.props.data}\n                    columns={this.tableProperties.columns}\n                    noHeader\n                    pagination\n                    subHeader\n                    striped\n                    responsive\n                    subHeaderComponent={\n                        <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                    }\n                />\n            </>\n\n        )\n    }\n}\n\n\nexport default WeightsRegistrationTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup, Col } from 'react-bootstrap';\nimport \"../../../../../assets/scss/plugins/forms/react-select/_react-select.scss\";\nimport { Search } from 'react-feather';\n\n\nclass WeightsRegistrationModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                    size=\"lg\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Weights and Measure Registration\n                        </Modal.Title>\n                    </Modal.Header>\n\n                    <Form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"RegistrationNumber\">\n                                    <Form.Label>Registration Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Registration Number\" value={this.props.RegistrationNumber} onChange={this.props.changeRegistrationNumber} readOnly />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"WeightDevice\">\n                                    <Form.Label>Weight Device</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.WeightDeviceDescription}\n                                            onChange={this.props.handleChangeWeightDeviceDescription}\n                                            placeholder=\"Search Weight Device Description\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowWeight}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"SubCounty\">\n                                    <Form.Label>SubCounty</Form.Label>\n                                    <InputGroup>\n\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.SubCountyName}\n                                            onChange={this.props.handleChangeSubCountyName}\n                                            placeholder=\"Search SubCounty\"\n                                            aria-describedby=\"inputGroupPrepend\"\n\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSubCounty}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"Ward\">\n                                    <Form.Label>Ward</Form.Label>\n                                    <InputGroup>\n\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.WardName}\n                                            onChange={this.props.handleChangeWardName}\n                                            placeholder=\"Search Ward\"\n                                            aria-describedby=\"inputGroupPrepend\"\n\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowWard}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"Module\">\n                                    <Form.Label>Module</Form.Label>\n                                    <InputGroup>\n\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.ModuleName}\n                                            onChange={this.props.handleChangeModuleName}\n                                            placeholder=\"Search Module Name\"\n                                            aria-describedby=\"inputGroupPrepend\"\n\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowModules}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"FeeCategory\">\n                                    <Form.Label>Revenue Category</Form.Label>\n                                    <InputGroup>\n\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.FeeCategoryName}\n                                            onChange={this.props.handleChangeFeeCategoryName}\n                                            placeholder=\"Search Business Category\"\n                                            aria-describedby=\"inputGroupPrepend\"\n\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowFeeCategorySearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n\n                                <Form.Group as={Col} md=\"6\" controlId=\"Fee\">\n                                    <Form.Label>Revenue Fee</Form.Label>\n                                    <InputGroup>\n\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.FeeName}\n                                            onChange={this.props.handleChangeFeeName}\n                                            placeholder=\"Search Detailed Description\"\n                                            aria-describedby=\"inputGroupPrepend\"\n\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowFees}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"ClientID\">\n                                    <Form.Label>Client Name</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.ClientID} onChange={this.props.handleChangeClientID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.ClientName}\n                                            onChange={this.props.handleChangeClientName}\n                                            placeholder=\"Search Client Name\"\n                                            aria-describedby=\"inputGroupPrepend\"\n\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowClientRegistrationSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n\n\n                                <Form.Group as={Col} md=\"6\" controlId=\"DocumentNumber\">\n                                    <Form.Label>Document Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Document Number\" value={this.props.ClientDocumentNumber}\n                                        onChange={this.props.changeClientDocumentNumber} readOnly />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"PostalAddress\">\n                                    <Form.Label>Postal Address</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Postal Address\" value={this.props.ClientPostalAddress}\n                                        onChange={this.props.changeClientPostalAddress} readOnly />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n\n\n                                <Form.Group as={Col} md=\"6\" controlId=\"MobileNumber\">\n                                    <Form.Label>Mobile Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Mobile Number\" value={this.props.ClientMobileNumber}\n                                        onChange={this.props.changeMobileNumber} readOnly />\n                                </Form.Group>\n\n                                <Form.Group as={Col} md=\"6\" controlId=\"SystemStatusType\">\n                                    <Form.Label>System Status Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.SystemStatusTypeDescription}\n                                            onChange={this.props.handleChangeSystemStatusTypeDescription}\n                                            placeholder=\"Search System Status Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete Weight Registration\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.RegistrationNumber} onChange={this.props.RegistrationNumber} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default WeightsRegistrationModal;","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass WeightDeviceSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchWeight(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Weight Device Name\",\n                selector: \"WEIGHT_DEVICE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WEIGHT_DEVICE_NAME}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Weight device\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default WeightDeviceSearch","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\";\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport WeightsRegistrationTable from './Tables/WeightsRegistrationTable';\nimport WeightsRegistrationModals from './Modals/WeightsRegistrationModal';\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr';\nimport SubCountyTypeSearch from '../../SearchComponents/SubCountyTypeSearch/SubCountyTypeSearch';\nimport WardsSearch from '../../SearchComponents/WardsSearch/WardsSearch';\nimport FeeCategorySearch from '../../SearchComponents/FeeCategorySearch/FeeCategorySearch';\nimport FeesSearch from '../../SearchComponents/FeesSearch/FeesSearch';\nimport ClientRegistrationSearch from '../../SearchComponents/ClientRegistrationSearch/ClientRegistrationSearch';\nimport WeightDeviceSearch from '../../SearchComponents/WeightDeviceSearch/WeightDeviceSearch';\nimport ModuleSearch from '../../SearchComponents/ModuleSearch/ModuleSearch';\nclass WeightsRegistration extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            columns: [],\n            data: [],\n            filteredData: [],\n            value: '',\n            show: false,\n            showdelete: false,\n            AUTOMATICNUMBER: 0,\n            REG_WEIGHT_ID: 0,\n            REG_WEIGHT_NUMBER: 'Auto',\n            SET_WEIGHT_DEVICE_ID: 0,\n            SET_SUB_COUNTY_ID: 0,\n            SET_REVENUE_CATEGORY_ID: 0,\n            SET_REVENUE_FEE_ID: 0,\n            CLIENT_ID: 0,\n            SYS_STATUS_ID: 0,\n            CREATEDBY: props.user.EMAIL,\n            MODIFIEDBY: props.user.EMAIL,\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            ClIENT_NAME: '',\n            FEECATEGORY_CODE: '',\n            FEE_NAME: '',\n            SUBCOUNTY_NAME: '',\n            WARD_NAME: '',\n            WEIGHT_DEVICE_DESCRIPTION: '',\n            CLIENT_DOCUMENT_NUMBER: '',\n            CLIENT_POSTAL_ADDRESS: '',\n            CLIENT_MOBILE_NUMBER: '',\n            SET_MODULE_ID: 0,\n            MODULE_NAME: '',\n            InsertUpdate: '',\n            searchcolumns: [],\n            searchmoduledata: [],\n            searchdata: [],\n            searchDocNumdata: [],\n            opensearch: false,\n            searchFilteredData: [],\n            searchvalue: '',\n            openmodulessearch: false,\n            searchFilteredModulesData: [],\n            searchmodulesvalue: '',\n            openweightsearch: false,\n            searchFilteredWeightData: [],\n            searchweightvalue: '',\n            opensubcountysearch: false,\n            searchFilteredSubCountyData: [],\n            searchsubcountyvalue: '',\n            openwardsearch: false,\n            searchFilteredWardData: [],\n            searchwardvalue: '',\n            openFeeCategorySearch: false,\n            searchFilteredFeeCategoryData: [],\n            searchfeecategoryvalue: '',\n            openfeesearch: false,\n            searchFilteredFeeData: [],\n            searchfeevalue: '',\n            openclientregistrationsearch: false,\n            searchFilteredClientRegistrationData: [],\n            searchclientregistrationvalue: '',\n            INCREMENTBY: 0,\n            DOCUMENT_PREFIX: '',\n\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n        this.handleShowSearch = () => {\n            this.setState({\n                opensearch: true\n            });\n        };\n        this.handleShowModulesSearch = () => {\n            this.setState({ openmodulessearch: true });\n        };\n        this.handleShowWeightSearch = () => {\n            this.setState({ openweightsearch: true });\n        };\n        this.handleShowSubCountySearch = () => {\n            this.setState({ opensubcountysearch: true });\n        };\n        this.handleShowWardSearch = () => {\n            this.setState({ openwardsearch: true });\n        };\n        this.handleShowFeeCategorySearch = () => {\n            this.setState({ openFeeCategorySearch: true });\n        };\n        this.handleShowFeesSearch = () => {\n            this.setState({ openfeesearch: true });\n        };\n        this.handleShowClientRegistrationSearch = () => {\n            this.setState({ openclientregistrationsearch: true });\n        };\n        this.handleHideSearch = () => {\n            this.setState({ opensearch: false });\n        };\n        this.handleHideModulesSearch = () => {\n            this.setState({ openmodulessearch: false });\n        };\n        this.handleHideWeightSearch = () => {\n            this.setState({ openweightsearch: false });\n        };\n        this.handleHideSubCountySearch = () => {\n            this.setState({ opensubcountysearch: false });\n        };\n        this.handleHideWardSearch = () => {\n            this.setState({ openwardsearch: false });\n        };\n        this.handleHideFeeCategorySearch = () => {\n            this.setState({ openFeeCategorySearch: false });\n        };\n        this.handleHideFeesSearch = () => {\n            this.setState({ openfeesearch: false });\n        };\n        this.handleHideClientRegistrationSearch = () => {\n            this.setState({ openclientregistrationsearch: false });\n        };\n        this.populateData();\n        this.populateSubCounty();\n        this.populateClientRegistration();\n        this.populateTypes();\n        this.populateWeights();\n        this.populateModules()\n        //this.populateFeeCategory();\n    }\n\n    populateData() {\n\n        const getdata = `\n        query {\n            WeightsRegister {\n                REG_WEIGHT_ID\n                REG_WEIGHT_NUMBER\n                SET_WEIGHT_DEVICE_ID\n                WEIGHT_DEVICE {\n                    WEIGHT_DEVICE_ID\n                    WEIGHT_DEVICE_NAME\n                }\n                SET_SUB_COUNTY_ID\n                SUB_COUNTY {\n                    SUBCOUNTY_ID\n                    SUBCOUNTY_NAME\n                }\n                SET_WARD_ID\n                WARD {\n                    WARD_ID\n                    WARD_NAME\n                }\n                SET_REVENUE_CATEGORY_ID\n                FEE_CATEGORY {\n                    FEECATEGORY_ID\n                    FEECATEGORY_NAME\n                    FEECATEGORY_CODE\n                }\n                SET_REVENUE_FEE_ID\n                FEE {\n                    FEE_ID\n                    FEE_NAME\n                }\n                CLIENT_ID\n                CLIENTID {\n                    CLIENT_ID\n                    CLIENT_NAME\n                    CLIENT_DOCUMENT_NUMBER\n                    POSTAL_ADDRESS\n                    MOBILE_NUMBER\n\n                }\n                SYS_STATUS_ID\n                SYSTEMSTATUS {\n                    SYS_STATUS_ID\n                    SYS_STATUS_NAME\n                }\n                CREATEDBY\n                MODIFIEDBY\n                CREATED_DATE\n                MODIFIED_DATE\n                SET_MODULE_ID\n                Set_Modules\n                {\n                    MODULE_ID\n                    MODULE_NAME\n                }\n            }\n        }\n        `;\n\n        API.getData(getdata)\n            .then(({\n                data\n            }) => this.setState({\n                data: data.data.WeightsRegister\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    populateTypes() {\n        const getdata = `\n            query {\n                SystemStatusFilter(\n                    CATEGORY: \"SET\"\n                ) {\n                    SYS_STATUS_ID,\n                    SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({\n                data\n            }) => this.setState({\n                searchdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to System Status Type Load Data');\n                }\n            })\n    }\n    populateSubCounty() {\n\n        const getdata = `\n            query {\n                SubCounties {\n                    SUBCOUNTY_ID,\n                    SUBCOUNTY_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchsubcountydata: data.data.SubCounties\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Business Type Data');\n                }\n            })\n    }\n    populateModules() {\n\n        const getdata = `\n            query {\n                Modules {\n                    MODULE_ID,\n                    MODULE_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchmodulesdata: data.data.Modules\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Business Type Data');\n                }\n            })\n    }\n    populateWeights() {\n        const getdata = `\n            query {\n                WeightDevices {\n                    WEIGHT_DEVICE_ID\n                    WEIGHT_DEVICE_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchweightdata: data.data.WeightDevices\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Business Type Data');\n                }\n            })\n    }\n\n    populateFeeCategory(value) {\n\n        const getdata = `\n            query {\n                FeeCategoryFilter(SET_MODULE_ID:${value}) \n                {\n                    FEECATEGORY_ID\n                    FEECATEGORY_NAME\n                    FEECATEGORY_CODE\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchfeecategorydata: data.data.FeeCategoryFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Business Type Data');\n                }\n            })\n    }\n    populateDocumnetNumber = (value) => {\n\n        const getdata = `\n            query {\n                DocumentNumberFilter(SET_MODULE_ID:${value}) \n                {\n                    DOCUMENT_PREFIX\n                    SET_MODULE_ID\n                    START_NUM\n                    INCREMENTBY\n                    LAST_USED_NUMBER\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => {\n                let INCREMENTBY = 0;\n                let FinalString = \"\";\n                let dataD = data.data.DocumentNumberFilter;\n                INCREMENTBY = dataD[0][\"INCREMENTBY\"];\n                FinalString = dataD[0][\"DOCUMENT_PREFIX\"];\n\n                this.setState({\n                    INCREMENTBY: INCREMENTBY,\n                    DOCUMENT_PREFIX: FinalString\n                });\n            }\n            ).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Document Number Data');\n                }\n            })\n    }\n    populateWard(value) {\n\n        const getdata = `\n        query {\n            WardFilter\n                (\n                    SET_SUBCOUNTY_ID:${value})\n                {\n                    WARD_ID\n                    WARD_NAME\n                }\n        }\n            \n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchwarddata: data.data.WardFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Admin Type Load Data');\n                }\n            })\n    }\n    populateFee(value) {\n\n        const getdata = `\n        query {\n            FeeFilter\n                (\n                    SET_DEPT_FEECATEGORY_ID:${value}\n                ) {\n                    FEE_ID\n                    FEE_NAME\n                }\n        }\n            \n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchfeedata: data.data.FeeFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Admin Type Load Data');\n                }\n            })\n    }\n    populateClientRegistration() {\n        const getdata = `\n            query {\n                Clients {\n                    CLIENT_ID\n                    CLIENT_NAME\n                    CLIENT_TYPE_ID\n                    CLIENT_DOCUMENT_NUMBER\n                    POSTAL_ADDRESS\n                    MOBILE_NUMBER\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchclientregistrationdata: data.data.Clients\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Business Type Data');\n                }\n            })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const form = `\n        mutation{\n            addWeightsRegister(\n                REG_WEIGHT_NUMBER:\"${this.state.REG_WEIGHT_NUMBER}\"\n                SET_WEIGHT_DEVICE_ID:${this.state.SET_WEIGHT_DEVICE_ID}\n                SET_SUB_COUNTY_ID:${this.state.SET_SUB_COUNTY_ID}\n                SET_WARD_ID:${this.state.SET_WARD_ID}\n                SET_REVENUE_CATEGORY_ID:${this.state.SET_REVENUE_CATEGORY_ID}\n                SET_REVENUE_FEE_ID:${this.state.SET_REVENUE_FEE_ID}\n                CLIENT_ID:${this.state.CLIENT_ID}\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CREATEDBY:\"${this.state.CREATEDBY}\"\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\"\n                CREATED_DATE:\"${this.state.CREATED_DATE}\"\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                SET_MODULE_ID:${this.state.SET_MODULE_ID}\n                ){\n                    REG_WEIGHT_ID\n            }\n        }\n        `;\n\n        const formEdit = `\n        mutation{\n            updateWeightsRegister(\n                REG_WEIGHT_ID:${this.state.REG_WEIGHT_ID},\n                REG_WEIGHT_NUMBER:\"${this.state.REG_WEIGHT_NUMBER}\"\n                SET_WEIGHT_DEVICE_ID:${this.state.SET_WEIGHT_DEVICE_ID}\n                SET_SUB_COUNTY_ID:${this.state.SET_SUB_COUNTY_ID}\n                SET_WARD_ID:${this.state.SET_WARD_ID}\n                SET_REVENUE_CATEGORY_ID:${this.state.SET_REVENUE_CATEGORY_ID}\n                SET_REVENUE_FEE_ID:${this.state.SET_REVENUE_FEE_ID}\n                CLIENT_ID:${this.state.CLIENT_ID}\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID}\n                CREATEDBY:\"${this.state.CREATEDBY}\"\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\"\n                CREATED_DATE:\"${this.state.CREATED_DATE}\"\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\" \n                SET_MODULE_ID:${this.state.SET_MODULE_ID}\n\n                ){\n                    REG_WEIGHT_ID\n            }\n        }\n        `;\n\n        if (this.state.InsertUpdate === 'Insert') {\n            API.create(form)\n                .then(({ data }) => {\n                    let weightID = data.data.addWeightsRegister.REG_WEIGHT_ID;\n\n                    let reg_weight_num = this.state.DOCUMENT_PREFIX + '-' + parseInt(weightID + this.state.INCREMENTBY)\n                    this.setState({\n                        REG_WEIGHT_NUMBER: reg_weight_num\n                    });\n                    this.GenerateDocumentNumber(weightID);\n\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.success('Create Record', 'Record Created Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        } else {\n            API.update(formEdit)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.info('Update Record', 'Record Updated Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        }\n\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteWeightsRegister(\n                REG_WEIGHT_ID:${this.state.REG_WEIGHT_ID}\n                ){\n                    REG_WEIGHT_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n    GenerateDocumentNumber = (id) => {\n        const formEdit = `\n        mutation{\n            updateWeightsRegister(\n                REG_WEIGHT_ID:${id},\n                REG_WEIGHT_NUMBER:\"${this.state.REG_WEIGHT_NUMBER}\"\n              ){\n                    REG_WEIGHT_ID\n            }\n        }\n        `;\n\n        API.update(formEdit)\n            .then(() => {\n                this.populateData();\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Generating', 'Failed to Generate Document Data');\n                }\n            })\n\n    }\n    handleCloseModulesSearch = (e) => {\n\n        this.setState({\n            SET_MODULE_ID: e.MODULE_ID,\n            MODULE_NAME: e.MODULE_NAME,\n            FEECATEGORY_CODE: '',\n            openmodulessearch: false,\n        });\n        this.populateFeeCategory(e.MODULE_ID);\n        this.populateDocumnetNumber(e.MODULE_ID);\n\n    };\n    handleCloseWeightSearch = (e) => {\n\n        this.setState({\n            SET_WEIGHT_DEVICE_ID: e.WEIGHT_DEVICE_ID,\n            WEIGHT_DEVICE_DESCRIPTION: e.WEIGHT_DEVICE_NAME,\n\n            openweightsearch: false,\n        });\n\n    };\n    handleCloseSubCountySearch = (e) => {\n\n        this.setState({\n            SET_SUB_COUNTY_ID: e.SUBCOUNTY_ID,\n            SUBCOUNTY_NAME: e.SUBCOUNTY_NAME,\n            WARD_NAME: '',\n            opensubcountysearch: false,\n        });\n        this.populateWard(e.SUBCOUNTY_ID);\n    };\n    handleCloseWardSearch = (e) => {\n\n        this.setState({\n            SET_WARD_ID: e.WARD_ID,\n            WARD_NAME: e.WARD_NAME,\n            openwardsearch: false,\n        });\n    };\n    handleCloseFeeCategorySearch = (e) => {\n\n        this.setState({\n            SET_REVENUE_CATEGORY_ID: e.FEECATEGORY_ID,\n            FEECATEGORY_CODE: e.FEECATEGORY_CODE,\n            FEE_NAME: '',\n            openFeeCategorySearch: false,\n        });\n        this.populateFee(e.FEECATEGORY_ID);\n    };\n    handleCloseFeeSearch = (e) => {\n\n        this.setState({\n            SET_REVENUE_FEE_ID: e.FEE_ID,\n            FEE_NAME: e.FEE_NAME,\n            openfeesearch: false,\n        });\n    };\n    handleCloseClientRegistrationSearch = (e) => {\n        this.setState({\n            CLIENT_ID: e.CLIENT_ID,\n            CLIENT_NAME: e.CLIENT_NAME,\n            CLIENT_DOCUMENT_NUMBER: e.CLIENT_DOCUMENT_NUMBER,\n            CLIENT_POSTAL_ADDRESS: e.POSTAL_ADDRESS,\n            CLIENT_MOBILE_NUMBER: e.MOBILE_NUMBER,\n            openclientregistrationsearch: false,\n        });\n    };\n    handleCloseSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            opensearch: false,\n        });\n    };\n\n\n    handleEditData = (e) => {\n        this.setState({\n            REG_WEIGHT_ID: e.REG_WEIGHT_ID,\n            REG_WEIGHT_NUMBER: e.REG_WEIGHT_NUMBER,\n            SET_WEIGHT_DEVICE_ID: e.SET_WEIGHT_DEVICE_ID,\n            SET_SUB_COUNTY_ID: e.SET_SUB_COUNTY_ID,\n            SET_REVENUE_CATEGORY_ID: e.SET_REVENUE_CATEGORY_ID,\n            SET_REVENUE_FEE_ID: e.SET_REVENUE_FEE_ID,\n            SET_WARD_ID: e.SET_WARD_ID,\n            CLIENT_ID: e.CLIENTID.CLIENT_ID,\n            CLIENT_NAME: e.CLIENTID.CLIENT_NAME,\n            CLIENT_DOCUMENT_NUMBER: e.CLIENTID.CLIENT_DOCUMENT_NUMBER,\n            CLIENT_POSTAL_ADDRESS: e.CLIENTID.POSTAL_ADDRESS,\n            CLIENT_MOBILE_NUMBER: e.CLIENTID.MOBILE_NUMBER,\n            FEECATEGORY_CODE: e.FEE_CATEGORY.FEECATEGORY_CODE,\n            FEE_NAME: e.FEE.FEE_NAME,\n            WARD_NAME: e.WARD.WARD_NAME,\n            MODULE_NAME: e.Set_Modules.MODULE_NAME,\n            SUBCOUNTY_NAME: e.SUB_COUNTY.SUBCOUNTY_NAME,\n            WEIGHT_DEVICE_DESCRIPTION: e.WEIGHT_DEVICE.WEIGHT_DEVICE_NAME,\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            REG_WEIGHT_ID: e.REG_WEIGHT_ID,\n            REG_WEIGHT_NUMBER: e.REG_WEIGHT_NUMBER,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            REG_WEIGHT_NUMBER: 'Auto',\n            CLIENT_NAME: '',\n            FEECATEGORY_CODE: '',\n            FEE_NAME: '',\n            SUBCOUNTY_NAME: '',\n            WARD_NAME: '',\n            WEIGHT_DEVICE_DESCRIPTION: '',\n            SYS_STATUS_ID: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            CLIENT_DOCUMENT_NUMBER: '',\n            CLIENT_POSTAL_ADDRESS: '',\n            CLIENT_MOBILE_NUMBER: '',\n            MODULE_NAME: '',\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({\n            value\n        });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.REG_WEIGHT_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENTID.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.WEIGHT_DEVICE.WEIGHT_DEVICE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SUB_COUNTY.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.WARD.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.REG_WEIGHT_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENTID.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.WEIGHT_DEVICE.WEIGHT_DEVICE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SUB_COUNTY.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.WARD.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({\n                filteredData\n            })\n        }\n    }\n\n    handleSearchFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchdata\n        let filteredData = this.state.searchFilteredData\n        this.setState({\n            searchvalue: value\n        });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({\n                filteredData\n            })\n        }\n    }\n    handleSearchModulesFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchmodulesdata\n        let filteredModulesData = this.state.searchFilteredModulesData\n        this.setState({ searchmodulesvalue: value });\n\n        if (value.length) {\n            filteredModulesData = data.filter(item => {\n                let startsWithCondition =\n                    item.MODULE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.MODULE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredModulesData })\n        }\n    }\n    handleSearchSubCountyFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchsubcountydata\n        let filteredSubCountyData = this.state.searchFilteredSubCountyData\n        this.setState({ searchsubcountyvalue: value });\n\n        if (value.length) {\n            filteredSubCountyData = data.filter(item => {\n                let startsWithCondition =\n                    item.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SUBCOUNTY_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredSubCountyData })\n        }\n    }\n    handleSearchWeightFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchweightdata\n        let filteredWeightData = this.state.searchFilteredWeightData\n        this.setState({ searchweightvalue: value });\n\n        if (value.length) {\n            filteredWeightData = data.filter(item => {\n                let startsWithCondition =\n                    item.WEIGHT_DEVICE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.WEIGHT_DEVICE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredWeightData })\n        }\n    }\n    handleSearchWardFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchwarddata\n        let filteredWardData = this.state.searchFilteredWardData\n        this.setState({ searchwardvalue: value });\n\n        if (value.length) {\n            filteredWardData = data.filter(item => {\n                let startsWithCondition =\n                    item.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.WARD_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredWardData })\n        }\n    }\n    handleSearchFeeCategoryFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchfeecategorydata\n        let filteredFeeCategoryData = this.state.searchFilteredFeeCategoryData\n        this.setState({ searchfeecategoryvalue: value });\n\n        if (value.length) {\n            filteredFeeCategoryData = data.filter(item => {\n                let startsWithCondition =\n                    item.FEECATEGORY_CODE.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.FEECATEGORY_CODE.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredFeeCategoryData })\n        }\n    }\n    handleSearchFeeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchfeedata\n        let filteredFeeData = this.state.searchFilteredFeeData\n        this.setState({ searchfeevalue: value });\n\n        if (value.length) {\n            filteredFeeData = data.filter(item => {\n                let startsWithCondition =\n                    item.FEE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.FEE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredFeeData })\n        }\n    }\n    handleSearchClientRegistrationFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchclientregistrationdata\n        let filteredClientRegistrationData = this.state.searchFilteredClientRegistrationData\n        this.setState({ searchclientregistrationvalue: value });\n\n        if (value.length) {\n            filteredClientRegistrationData = data.filter(item => {\n                let startsWithCondition =\n                    item.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.CLIENT_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredClientRegistrationData })\n        }\n    }\n    render() {\n        const { data, value, filteredData, searchdata, searchvalue, searchsubcountyvalue, searchsubcountydata, filteredSubCountyData, searchwardvalue,\n            searchwarddata, filteredWardData, searchfeevalue, searchfeedata, filteredFeeData, searchfeecategoryvalue, searchfeecategorydata, filteredFeeCategoryData\n            , searchclientregistrationvalue, searchclientregistrationdata, filteredClientRegistrationData,\n            searchweightvalue, searchweightdata, filteredWeightData,\n            searchmodulesvalue, searchmodulesdata, filteredModulesData } = this.state\n        return (\n            <>\n                <Helmet><title>Weights and Measure Registration</title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"Weights and Measure Registration\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Weights and Measure Registration</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n                                    <ModuleSearch\n                                        handleSearchModule={this.handleCloseModulesSearch}\n                                        opensearch={this.state.openmodulessearch}\n                                        handleHideSearch={this.handleHideModulesSearch}\n                                        value={searchmodulesvalue}\n                                        data={searchmodulesdata}\n                                        handleFilter={this.handleSearchModulesFilter}\n                                        filteredData={filteredModulesData}\n                                    />\n                                    <WeightDeviceSearch\n                                        handleSearchWeight={this.handleCloseWeightSearch}\n                                        opensearch={this.state.openweightsearch}\n                                        handleHideSearch={this.handleHideWeightSearch}\n                                        value={searchweightvalue}\n                                        data={searchweightdata}\n                                        handleFilter={this.handleSearchWeightFilter}\n                                        filteredData={filteredWeightData}\n                                    />\n                                    <SubCountyTypeSearch\n                                        handleSearchSubCounty={this.handleCloseSubCountySearch}\n                                        opensearch={this.state.opensubcountysearch}\n                                        handleHideSearch={this.handleHideSubCountySearch}\n                                        value={searchsubcountyvalue}\n                                        data={searchsubcountydata}\n                                        handleFilter={this.handleSearchSubCountyFilter}\n                                        filteredData={filteredSubCountyData}\n                                    />\n                                    <WardsSearch\n                                        handleSearchWards={this.handleCloseWardSearch}\n                                        opensearch={this.state.openwardsearch}\n                                        handleHideSearch={this.handleHideWardSearch}\n                                        value={searchwardvalue}\n                                        data={searchwarddata}\n                                        handleFilter={this.handleSearchWardFilter}\n                                        filteredData={filteredWardData}\n                                    />\n                                    <FeesSearch\n                                        handleSearchFees={this.handleCloseFeeSearch}\n                                        opensearch={this.state.openfeesearch}\n                                        handleHideSearch={this.handleHideFeesSearch}\n                                        value={searchfeevalue}\n                                        data={searchfeedata}\n                                        handleFilter={this.handleSearchFeeFilter}\n                                        filteredData={filteredFeeData}\n                                    />\n                                    <FeeCategorySearch\n                                        handleSearchFEECATEGORY={this.handleCloseFeeCategorySearch}\n                                        opensearch={this.state.openFeeCategorySearch}\n                                        handleHideSearch={this.handleHideFeeCategorySearch}\n                                        value={searchfeecategoryvalue}\n                                        data={searchfeecategorydata}\n                                        handleFilter={this.handleSearchFeeCategoryFilter}\n                                        filteredData={filteredFeeCategoryData}\n                                    />\n                                    <ClientRegistrationSearch\n                                        handleSearchClientRegistration={this.handleCloseClientRegistrationSearch}\n                                        opensearch={this.state.openclientregistrationsearch}\n                                        handleHideSearch={this.handleHideClientRegistrationSearch}\n                                        value={searchclientregistrationvalue}\n                                        data={searchclientregistrationdata}\n                                        handleFilter={this.handleSearchClientRegistrationFilter}\n                                        filteredData={filteredClientRegistrationData}\n                                    />\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseSearch}\n                                        opensearch={this.state.opensearch}\n                                        handleHideSearch={this.handleHideSearch}\n                                        value={searchvalue}\n                                        data={searchdata}\n                                        handleFilter={this.handleSearchFilter}\n                                        filteredData={filteredData}\n                                    />\n\n                                    <WeightsRegistrationTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <WeightsRegistrationModals\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowModules={this.handleShowModulesSearch}\n                                        handleShowSearch={this.handleShowSearch}\n                                        handleShowWeight={this.handleShowWeightSearch}\n                                        handleShowSubCounty={this.handleShowSubCountySearch}\n                                        handleShowWard={this.handleShowWardSearch}\n                                        handleShowFees={this.handleShowFeesSearch}\n                                        handleShowFeeCategorySearch={this.handleShowFeeCategorySearch}\n                                        handleShowClientRegistrationSearch={this.handleShowClientRegistrationSearch}\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n                                        handleChangeSystemStatusTypeDescription={e => this.setState({ SYSTEMSTATUSTYPEDESCRIPTION: e.target.value })}\n                                        WeightDeviceDescription={this.state.WEIGHT_DEVICE_DESCRIPTION}\n                                        handleChangeWeightDeviceDescription={e => this.setState({ WEIGHT_DEVICE_DESCRIPTION: e.target.value })}\n                                        ClientDocumentNumber={this.state.CLIENT_DOCUMENT_NUMBER}\n                                        changeClientDocumentNumber={e => this.setState({ CLIENT_DOCUMENT_NUMBER: e.target.value })}\n                                        ClientPostalAddress={this.state.CLIENT_POSTAL_ADDRESS}\n                                        changeClientPostalAddress={e => this.setState({ CLIENT_POSTAL_ADDRESS: e.target.value })}\n                                        ClientMobileNumber={this.state.CLIENT_MOBILE_NUMBER}\n                                        changeClientMobileNumber={e => this.setState({ CLIENT_MOBILE_NUMBER: e.target.value })}\n                                        SubCountyName={this.state.SUBCOUNTY_NAME}\n                                        handleChangeSubCountyName={e => this.setState({ SUBCOUNTY_NAME: e.target.value })}\n                                        WardName={this.state.WARD_NAME}\n                                        handleChangeWardName={e => this.setState({ WARD_NAME: e.target.value })}\n                                        FeeName={this.state.FEE_NAME}\n                                        handleChangeFeeName={e => this.setState({ FEE_NAME: e.target.value })}\n                                        ClientName={this.state.CLIENT_NAME}\n                                        handleChangeClientName={e => this.setState({ CLIENT_NAME: e.target.value })}\n                                        FeeCategoryName={this.state.FEECATEGORY_CODE}\n                                        handleChangeFeeCategoryName={e => this.setState({ FEECATEGORY_CODE: e.target.value })}\n                                        RegistrationNumber={this.state.REG_WEIGHT_NUMBER}\n                                        changeRegistrationNumber={e => this.setState({ REG_WEIGHT_NUMBER: e.target.value })}\n                                        ModuleName={this.state.MODULE_NAME}\n                                        handleChangeModuleName={e => this.setState({ MODULE_NAME: e.target.value })}\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n\n                                    />\n\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(WeightsRegistration));"],"sourceRoot":""}