{"version":3,"sources":["components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","utility/dateAndTime.js","views/pages/Setups/GeneralSettings/Tables/GeneralSettingsTables.js","views/pages/Setups/GeneralSettings/Modals/GeneralSettingsModals.js","views/pages/Setups/GeneralSettings/GeneralSettings.js"],"names":["BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","Ripple","onClick","handleShow","value","onChange","e","handleFilter","ShowDate","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","GeneralSettingsTable","tableProperties","columns","name","cell","row","Button","handleEdit","handleDelete","selector","sortable","KEYVALUE","TEXTVALUE","NAMES","data","length","filteredData","noHeader","pagination","subHeader","striped","subHeaderComponent","GeneralSettingsModals","Modal","show","onHide","handleHide","Header","closeButton","Title","id","InsertUpdate","Form","onSubmit","handleSubmit","autoComplete","Body","Group","controlId","Label","Control","type","placeholder","KeyValue","changeKeyValue","TextValue","changeTextValue","Names","changeNames","Footer","variant","disabled","isEnabled","showdelete","handleHideDelete","GeneralSettings","event","preventDefault","form","state","CREATEDBYID","LASTMODIFIEDBYID","DATECREATED","DATELASTMODIFIED","formEdit","ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","formDelete","warning","handleEditData","setState","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","items","rowData","forEach","push","console","Helmet","Fragment","Row","Col","sm","Card","CardHeader","CardTitle","CardBody","connect","user","auth"],"mappings":"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","file":"static/js/33.2742962f.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12 mb-2\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"form-group breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","\nimport React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple>\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader\n","\nexport function ShowDate() {\n\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  return yyyy + '-' + mm + '-' + dd;\n}\n\n\nexport function ShowTime() {\n\n  let today = new Date();\n  let time = today.getHours() + \":\" + today.getMinutes();\n\n  return time;\n}\n","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\n\nclass GeneralSettingsTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleEdit(row)}\n                        ><Edit size={14} />\n                        </Button.Ripple>\n                        <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleDelete(row)}\n                        ><Trash2 size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Key Value\",\n                selector: \"KEYVALUE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.KEYVALUE}</p>\n            },\n            {\n                name: \"Text Value\",\n                selector: \"TEXTVALUE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.TEXTVALUE}</p>\n            },\n            {\n                name: \"Names\",\n                selector: \"NAMES\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.NAMES}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n            <DataTable\n                className=\"dataTable-custom\"\n                data={this.props.value.length ? this.props.filteredData : this.props.data}\n                columns={this.tableProperties.columns}\n                noHeader\n                pagination\n                subHeader\n                striped\n                subHeaderComponent={\n                    <TableCustomHeader value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                }\n            />\n            </>\n\n        )\n    }\n}\n\n\nexport default GeneralSettingsTable\n\n","import React from 'react';\nimport { Button, Modal, Form } from 'react-bootstrap';\n\nclass GeneralSettingsModals extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} General Settings\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"KeyValue\">\n                                <Form.Label>Key Value</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Key Value\" value={this.props.KeyValue} onChange={this.props.changeKeyValue} />\n                            </Form.Group>\n                            <Form.Group controlId=\"TextValue\">\n                                <Form.Label>Text Value</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Text Value\" value={this.props.TextValue} onChange={this.props.changeTextValue} />\n                            </Form.Group>\n                            <Form.Group controlId=\"Names\">\n                                <Form.Label>Names</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Names\" value={this.props.Names} onChange={this.props.changeNames} />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete General Settings\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"KeyValue\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.KeyValue} onChange={this.props.changeKeyValue} />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default GeneralSettingsModals;","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport * as API from \"../../../../utility/crud/app.crud\"\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport GeneralSettingsTable from \"./Tables/GeneralSettingsTables\"\nimport GeneralSettingsModals from \"./Modals/GeneralSettingsModals\";\nimport { toastr } from 'react-redux-toastr'\n\nclass GeneralSettings extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            columns: [],\n            data: [],\n            filteredData: [],\n            value: '',\n            ID: 0,\n            KEYVALUE: '',\n            TEXTVALUE: '',\n            NAMES:'',\n            CREATEDBYID: 1,\n            LASTMODIFIEDBYID: 1,\n            DATECREATED: Date.ShowDate(),\n            DATELASTMODIFIED: Date.ShowDate(),\n            InsertUpdate: ''\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n    }\n\n    componentDidMount() {\n        this.populateData();\n    }\n\n    populateData() {\n        const getItemsQuery = `\n        query {\n          GeneralSettings {\n              ID\n              KEYVALUE\n              TEXTVALUE\n              NAMES\n              CREATEDBYID\n              LASTMODIFIEDBYID\n              DATECREATED\n              DATELASTMODIFIED\n          }\n        }\n      `;\n  \n          API.getData(getItemsQuery)\n              .then(({ data }) => {\n  \n                  let items = data.data.GeneralSettings;\n                  let rowData = [];\n  \n                  items.forEach(item => {\n  \n                      rowData.push({\n                          ID: item.ID,\n                          KEYVALUE: item.KEYVALUE,\n                          TEXTVALUE: item.TEXTVALUE,\n                          NAMES:item.NAMES\n                      })\n  \n                  });\n  \n                  this.setState({ data: rowData })\n              })\n              .catch(error => {\n                  console.error(error);\n              })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\ndebugger;\n        const form = `\n        mutation{\n            addGeneralSetting(\n                KEYVALUE:\"${this.state.KEYVALUE}\",\n                TEXTVALUE:\"${this.state.TEXTVALUE}\",\n                NAMES:\"${this.state.NAMES}\",\n                CREATEDBYID:${this.state.CREATEDBYID},\n                LASTMODIFIEDBYID:${this.state.LASTMODIFIEDBYID},\n                DATECREATED:\"${this.state.DATECREATED}\",\n                DATELASTMODIFIED:\"${this.state.DATELASTMODIFIED}\"\n                ){\n                ID\n            }\n        }\n        `;\n\n\n        const formEdit = `\n        mutation{\n            updateGeneralSetting(\n                ID:${this.state.ID},\n                KEYVALUE:\"${this.state.KEYVALUE}\",\n                TEXTVALUE:\"${this.state.TEXTVALUE}\",\n                NAMES:\"${this.state.NAMES}\",\n                \n                LASTMODIFIEDBYID:${this.state.LASTMODIFIEDBYID},\n                DATELASTMODIFIED:\"${this.state.DATELASTMODIFIED}\"\n                ){\n                ID\n            }\n        }\n        `;\n\n        if (this.state.InsertUpdate === 'Insert') {\n            API.create(form)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.success('Create Record', 'Record Created Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        } else {\n            API.update(formEdit)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.info('Update Record', 'Record Updated Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        }\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteGeneralSetting(\n                ID:${this.state.ID}\n                ){\n                ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleEditData = (e) => {\n        this.setState({\n            ID: e.ID,\n            KEYVALUE: e.KEYVALUE,\n            TEXTVALUE: e.TEXTVALUE,\n            NAMES:e.NAMES,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            ID: e.ID,\n            KEYVALUE: e.KEYVALUE,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            KEYVALUE: '',\n            TEXTVALUE: '',\n            NAMES:''\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.KEYVALUE.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.TEXTVALUE.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.NAMES.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                    \n                let includesCondition =\n                    item.KEYVALUE.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.TEXTVALUE.toString().toLowerCase().includes(value.toLowerCase())\n                    item.NAMES.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    render() {\n        const { data, columns, value, filteredData } = this.state\n        return (\n            <>\n            <Helmet><title>General Settings</title></Helmet>\n            <React.Fragment>\n                <Breadcrumbs\n                    breadCrumbTitle=\"Admin\"\n                    breadCrumbParent=\"Setup\"\n                    breadCrumbActive=\"General Settings\"\n                />\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle>General Settings</CardTitle>\n                            </CardHeader>\n                            <CardBody className=\"rdt_Wrapper\">\n                                \n                                <GeneralSettingsTable\n                                    handleEdit={this.handleEditData}\n                                    handleDelete={this.handleDeleteData}\n                                    value={value}\n                                    data={data}\n                                    columns={columns}\n                                    filteredData={filteredData}\n                                    handleShow={this.handleShow}\n                                    handleFilter={this.handleFilter}\n                                />\n\n                                <GeneralSettingsModals\n                                    show={this.state.show}\n                                    handleHide={this.handleHide}\n                                    InsertUpdate={this.state.InsertUpdate}\n                                    handleSubmit={this.handleSubmit}\n                                    KeyValue={this.state.KEYVALUE}\n                                    changeKeyValue={e => this.setState({ KEYVALUE: e.target.value })}\n                                    TextValue={this.state.TEXTVALUE}\n                                    changeTextValue={e => this.setState({ TEXTVALUE: e.target.value })}\n                                    Names={this.state.NAMES}\n                                    changeNames={e => this.setState({ NAMES: e.target.value })}\n                                    \n                                    showdelete={this.state.showdelete}\n                                    handleHideDelete={this.handleHideDelete}\n                                    handleDelete={this.handleDelete}\n                                />\n\n\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </React.Fragment>\n            </>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(GeneralSettings)\n\n"],"sourceRoot":""}