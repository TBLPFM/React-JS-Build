{"version":3,"sources":["views/pages/Registration/BettingRegistration/Tables/BettingRegistrationTable.js","views/pages/Registration/BettingRegistration/Modals/BettingRegistrationModal.js","views/pages/SearchComponents/BettingTypeSearch/BettingTypeSearch.js","views/pages/Registration/BettingRegistration/BettingRegistration.js"],"names":["BettingRegistrationTable","tableProperties","columns","name","cell","row","I","a","props","role","passThrough","allowed","Button","Ripple","className","size","color","disabled","onClick","handleEdit","handleDelete","selector","sortable","BETTING_NUMBER","CLIENTID","CLIENT_NAME","BUSINESS_REGISTER","BUSINESS_NAME","SUB_COUNTY","SUBCOUNTY_NAME","WARD","WARD_NAME","SYSTEMSTATUS","SYS_STATUS_NAME","data","this","value","length","filteredData","noHeader","pagination","subHeader","striped","responsive","subHeaderComponent","TableCustomHeader","handleShow","handleFilter","React","Component","BettingRegistrationModal","Modal","show","onHide","handleHide","Header","closeButton","Title","id","InsertUpdate","Form","noValidate","validated","onSubmit","handleSubmit","autoComplete","Body","Row","Group","as","Col","md","controlId","Label","Control","type","placeholder","BettingNumber","onChange","changeBettingNumber","required","Feedback","InputGroup","BusinessName","handleChangeBusinessName","aria-describedby","readOnly","Prepend","variant","handleShowBusinessRegister","BuildingName","handleChangeBuildingName","Street","handleChangeStreet","PostalAddress","handleChangePostalAddress","PlotNumber","handleChangePlotNumber","MobileNumber","handleChangeMobileNumber","Email","handleChangeEmail","SubCountyName","handleChangeSubCountyName","handleShowSubCounty","WardName","handleChangeWardName","handleShowWard","BettingTypeName","handleChangeBettingTypeName","handleShowBettingType","ModuleName","handleChangeModuleName","handleShowModules","FeeCategoryName","handleChangeFeeCategoryName","handleShowFeeCategorySearch","FeeName","handleChangeFeeName","handleShowFees","ClientID","handleChangeClientID","hidden","ClientName","handleChangeClientName","handleShowClientRegistrationSearch","ClientDocumentNumber","changeClientDocumentNumber","ClientPostalAddress","changeClientPostalAddress","ClientMobileNumber","changeMobileNumber","SystemStatusTypeDescription","handleChangeSystemStatusTypeDescription","handleShowSearch","Footer","isEnabled","showdelete","handleHideDelete","BettingTypeSearch","handleSearchBettingType","BETTING_TYPE_NAME","opensearch","handleHideSearch","Input","e","BettingRegistration","context","event","preventDefault","currentTarget","checkValidity","stopPropagation","form","state","REG_BUSINESS_ID","SET_BETTING_TYPE_ID","SET_SUBCOUNTY_ID","SET_WARD_ID","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","SYS_STATUS_ID","SET_REVENUE_FEE_ID","SET_REVENUE_FEE_CATEGORY_ID","CLIENT_ID","SET_MODULE_ID","console","log","formEdit","REG_BETTING_ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","setState","formDelete","warning","handleCloseModulesSearch","MODULE_ID","MODULE_NAME","FEECATEGORY_CODE","openmodulessearch","populateFeeCategory","handleCloseBusinessRegisterSearch","BUSINESS_ID","BUILDING_NAME","POSTAL_ADDRESS","PLOTNUMBER","STREET","MOBILE_NUMBER","EMAIL","openbusineeregistersearch","handleCloseBettingTypeSearch","BETTING_TYPE_ID","openbettingtypesearch","handleCloseSubCountySearch","SUBCOUNTY_ID","opensubcountysearch","populateWard","handleCloseWardSearch","WARD_ID","openwardsearch","handleCloseFeeCategorySearch","FEECATEGORY_ID","FEE_NAME","openFeeCategorySearch","populateFee","handleCloseFeeSearch","FEE_ID","openfeesearch","handleCloseClientRegistrationSearch","CLIENT_DOCUMENT_NUMBER","CLIENT_POSTAL_ADDRESS","CLIENT_MOBILE_NUMBER","openclientregistrationsearch","handleCloseSearch","SYSTEMSTATUSTYPEDESCRIPTION","handleEditData","FEE_CATEGORY","FEE","BETTING","SET_MODULES","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","handleSearchFilter","searchdata","searchFilteredData","searchvalue","handleSearchModulesFilter","searchmodulesdata","filteredModulesData","searchFilteredModulesData","searchmodulesvalue","handleSearchBusinessRegisterFilter","searchbusinessregisterdata","filteredBusinessRegisterData","searchfilteredBusinessRegisterData","searchbusinessregistervalue","handleSearchSubCountyFilter","searchsubcountydata","filteredSubCountyData","searchFilteredSubCountyData","searchsubcountyvalue","handleSearchBettingTypeFilter","searchbettingtypedata","filteredBettingTypeData","searchfilteredBettingTypeData","searchbettingtypevalue","handleSearchWardFilter","searchwarddata","filteredWardData","searchFilteredWardData","searchwardvalue","handleSearchFeeCategoryFilter","searchfeecategorydata","filteredFeeCategoryData","searchFilteredFeeCategoryData","searchfeecategoryvalue","handleSearchFeeFilter","searchfeedata","filteredFeeData","searchFilteredFeeData","searchfeevalue","handleSearchClientRegistrationFilter","searchclientregistrationdata","filteredClientRegistrationData","searchFilteredClientRegistrationData","searchclientregistrationvalue","errors","user","Date","ClIENT_NAME","searchcolumns","searchmoduledata","handleShowModulesSearch","handleShowBusinessRegisterSearch","handleShowBettingTypeSearch","handleShowSubCountySearch","handleShowWardSearch","handleShowFeesSearch","handleHideModulesSearch","handleHideBusinessRegisterSearch","handleHideBettingTypeSearch","handleHideSubCountySearch","handleHideWardSearch","handleHideFeeCategorySearch","handleHideFeesSearch","handleHideClientRegistrationSearch","populateSubCounty","populateClientRegistration","populateTypes","populateBettingTypes","populateBusinessRegister","populateModules","BettingRegister","Modules","SystemStatusFilter","SubCounties","BusinessRegisters","BettingTypes","getdata","FeeCategoryFilter","WardFilter","FeeFilter","Clients","Helmet","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","Card","CardHeader","CardTitle","CardBody","ModuleSearch","handleSearchModule","BusinessRegisterSearch","handleSearchBusinessName","SubCountyTypeSearch","handleSearchSubCounty","WardsSearch","handleSearchWards","FeesSearch","handleSearchFees","FeeCategorySearch","handleSearchFEECATEGORY","ClientRegistrationSearch","handleSearchClientRegistration","SystemStatusTypeSearch","handleSearchSystemStatusType","constructor","changeClientMobileNumber","connect","auth"],"mappings":"mXAqGeA,E,4MA7FXC,gBAAkB,CACdC,QAAS,CACL,CACIC,KAAM,SACNC,KAAM,SAACC,GAAD,OACF,oCACI,kBAAC,IAAD,CAAKC,EAAE,SAASC,EAAG,EAAKC,MAAMC,KAAMC,aAAW,IACzC,SAAAC,GAAO,OACL,kBAACC,EAAA,EAAOC,OAAR,CAAeC,UAAU,gCAAgCC,KAAK,KAAKC,MAAM,OACrEC,UAAWN,EACXO,QAAS,kBAAM,EAAKV,MAAMW,WAAWd,KAErC,kBAAC,IAAD,CAAMU,KAAM,SAKxB,kBAAC,IAAD,CAAKT,EAAE,SAASC,EAAG,EAAKC,MAAMC,KAAMC,aAAW,IACzC,SAAAC,GAAO,OACL,kBAACC,EAAA,EAAOC,OAAR,CAAeC,UAAU,gCAAgCC,KAAK,KAAKC,MAAM,OACrEC,UAAWN,EACXO,QAAS,kBAAM,EAAKV,MAAMY,aAAaf,KAC1C,kBAAC,IAAD,CAAQU,KAAM,YAOnC,CACIZ,KAAM,sBACNkB,SAAU,iBACVC,UAAU,EACVlB,KAAM,SAAAC,GAAG,OAAI,uBAAGS,UAAU,QAAQT,EAAIkB,kBAE1C,CACIpB,KAAM,SACNkB,SAAU,cACVC,UAAU,EACVlB,KAAM,SAAAC,GAAG,OAAI,uBAAGS,UAAU,QAAQT,EAAImB,SAASC,eAEnD,CACItB,KAAM,gBACNkB,SAAU,gBACVC,UAAU,EACVlB,KAAM,SAAAC,GAAG,OAAI,uBAAGS,UAAU,QAAQT,EAAIqB,kBAAkBC,iBAE5D,CACIxB,KAAM,iBACNkB,SAAU,iBACVC,UAAU,EACVlB,KAAM,SAAAC,GAAG,OAAI,uBAAGS,UAAU,QAAQT,EAAIuB,WAAWC,kBAErD,CACI1B,KAAM,YACNkB,SAAU,YACVC,UAAU,EACVlB,KAAM,SAAAC,GAAG,OAAI,uBAAGS,UAAU,QAAQT,EAAIyB,KAAKC,aAE/C,CACI5B,KAAM,SACNkB,SAAU,kBACVC,UAAU,EACVlB,KAAM,SAAAC,GAAG,OAAI,uBAAGS,UAAU,QAAQT,EAAI2B,aAAaC,qB,uDAO3D,OACI,oCACA,kBAAC,IAAD,CACInB,UAAU,mBACVoB,KAAMC,KAAK3B,MAAM4B,MAAMC,OAASF,KAAK3B,MAAM8B,aAAeH,KAAK3B,MAAM0B,KACrEhC,QAASiC,KAAKlC,gBAAgBC,QAC9BqC,UAAQ,EACRC,YAAU,EACVC,WAAS,EACTC,SAAO,EACPC,YAAU,EACVC,mBACI,kBAACC,EAAA,EAAD,CAAmBpC,KAAM0B,KAAK3B,MAAMC,KAAM2B,MAAOD,KAAK3B,MAAM4B,MAAOU,WAAYX,KAAK3B,MAAMsC,WAAYC,aAAcZ,KAAK3B,MAAMuC,sB,GApF5GC,IAAMC,W,+DCiU9BC,E,uKA/TP,OACI,6BACI,kBAACC,EAAA,EAAD,CACIC,KAAMjB,KAAK3B,MAAM4C,KACjBC,OAAQlB,KAAK3B,MAAM8C,WACnBvC,KAAK,MAEL,kBAACoC,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,EAAA,EAAMM,MAAP,CAAaC,GAAG,aACXvB,KAAK3B,MAAMmD,aADhB,wCAKJ,kBAACC,EAAA,EAAD,CAAMC,YAAU,EAACC,UAAW3B,KAAK3B,MAAMsD,UAAWC,SAAU5B,KAAK3B,MAAMwD,aAAcC,aAAa,OAClG,kBAACd,EAAA,EAAMe,KAAP,KACI,kBAACN,EAAA,EAAKO,IAAN,KAEA,kBAACP,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,sBAC1B,kBAACZ,EAAA,EAAKa,MAAN,uBACA,kBAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,uBAAuBxC,MAAOD,KAAK3B,MAAMqE,cAAeC,SAAU3C,KAAK3B,MAAMuE,oBAAqBC,UAAQ,IAChJ,kBAACpB,EAAA,EAAKc,QAAQO,SAAd,CAAuBN,KAAK,WAA5B,oCAIJ,kBAACf,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,kBAClC,kBAACZ,EAAA,EAAKa,MAAN,wBACA,kBAACS,EAAA,EAAD,KACO,kBAACtB,EAAA,EAAKc,QAAN,CACCC,KAAK,OACLvC,MAAOD,KAAK3B,MAAM2E,aAClBL,SAAU3C,KAAK3B,MAAM4E,yBACrBR,YAAY,uBACZS,mBAAiB,oBACjBL,UAAQ,EACRM,UAAQ,IAEZ,kBAACJ,EAAA,EAAWK,QAAZ,KACI,kBAAC,IAAD,CAAQC,QAAQ,OAAOzE,KAAK,KAAKG,QAASiB,KAAK3B,MAAMiF,4BACjD,kBAAC,IAAD,UAKhB,kBAAC7B,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,gBAClC,kBAACZ,EAAA,EAAKa,MAAN,sBACA,kBAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,sBAAsBxC,MAAOD,KAAK3B,MAAMkF,aAAcZ,SAAU3C,KAAK3B,MAAMmF,yBAA0BX,UAAQ,MAGvJ,kBAACpB,EAAA,EAAKO,IAAN,KAEA,kBAACP,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,UAClC,kBAACZ,EAAA,EAAKa,MAAN,eACA,kBAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,eAAexC,MAAOD,KAAK3B,MAAMoF,OAAQd,SAAU3C,KAAK3B,MAAMqF,mBAAoBb,UAAQ,KAEpI,kBAACpB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,iBAClC,kBAACZ,EAAA,EAAKa,MAAN,uBACA,kBAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,uBAAuBxC,MAAOD,KAAK3B,MAAMsF,cAAehB,SAAU3C,KAAK3B,MAAMuF,0BAA2Bf,UAAQ,KAE1J,kBAACpB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,cAClC,kBAACZ,EAAA,EAAKa,MAAN,mBACA,kBAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,oBAAoBxC,MAAOD,KAAK3B,MAAMwF,WAAYlB,SAAU3C,KAAK3B,MAAMyF,uBAAwBjB,UAAQ,MAIjJ,kBAACpB,EAAA,EAAKO,IAAN,KAGA,kBAACP,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,gBAClC,kBAACZ,EAAA,EAAKa,MAAN,sBACA,kBAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,sBAAsBxC,MAAOD,KAAK3B,MAAM0F,aAAcpB,SAAU3C,KAAK3B,MAAM2F,yBAA0BnB,UAAQ,KAEvJ,kBAACpB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,SAClC,kBAACZ,EAAA,EAAKa,MAAN,cACA,kBAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,cAAcxC,MAAOD,KAAK3B,MAAM4F,MAAOtB,SAAU3C,KAAK3B,MAAM6F,kBAAmBrB,UAAQ,KAEjI,kBAACpB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,aAClD,kBAACZ,EAAA,EAAKa,MAAN,kBACA,kBAACS,EAAA,EAAD,KAEI,kBAACtB,EAAA,EAAKc,QAAN,CACIC,KAAK,OACLvC,MAAOD,KAAK3B,MAAM8F,cAClBxB,SAAU3C,KAAK3B,MAAM+F,0BACrB3B,YAAY,mBACZS,mBAAiB,oBAEjBC,UAAQ,IAEZ,kBAACJ,EAAA,EAAWK,QAAZ,KACI,kBAAC,IAAD,CAAQC,QAAQ,OAAOzE,KAAK,KAAKG,QAASiB,KAAK3B,MAAMgG,qBACjD,kBAAC,IAAD,WAQA,kBAAC5C,EAAA,EAAKO,IAAN,KAEhB,kBAACP,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,QAClC,kBAACZ,EAAA,EAAKa,MAAN,aACA,kBAACS,EAAA,EAAD,KAEI,kBAACtB,EAAA,EAAKc,QAAN,CACIC,KAAK,OACLvC,MAAOD,KAAK3B,MAAMiG,SAClB3B,SAAU3C,KAAK3B,MAAMkG,qBACrB9B,YAAY,cACZS,mBAAiB,oBAEjBC,UAAQ,IAEZ,kBAACJ,EAAA,EAAWK,QAAZ,KACI,kBAAC,IAAD,CAAQC,QAAQ,OAAOzE,KAAK,KAAKG,QAASiB,KAAK3B,MAAMmG,gBACjD,kBAAC,IAAD,UAMhB,kBAAC/C,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,eAClC,kBAACZ,EAAA,EAAKa,MAAN,qBACA,kBAACS,EAAA,EAAD,KAEI,kBAACtB,EAAA,EAAKc,QAAN,CACIC,KAAK,OACLvC,MAAOD,KAAK3B,MAAMoG,gBAClB9B,SAAU3C,KAAK3B,MAAMqG,4BACrBjC,YAAY,2BACZS,mBAAiB,oBAEjBC,UAAQ,IAEZ,kBAACJ,EAAA,EAAWK,QAAZ,KACI,kBAAC,IAAD,CAAQC,QAAQ,OAAOzE,KAAK,KAAKG,QAASiB,KAAK3B,MAAMsG,uBACjD,kBAAC,IAAD,UAMhB,kBAAClD,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,UAClC,kBAACZ,EAAA,EAAKa,MAAN,eACA,kBAACS,EAAA,EAAD,KAEI,kBAACtB,EAAA,EAAKc,QAAN,CACIC,KAAK,OACLvC,MAAOD,KAAK3B,MAAMuG,WAClBjC,SAAU3C,KAAK3B,MAAMwG,uBACrBpC,YAAY,qBACZS,mBAAiB,oBAEjBC,UAAQ,IAEZ,kBAACJ,EAAA,EAAWK,QAAZ,KACI,kBAAC,IAAD,CAAQC,QAAQ,OAAOzE,KAAK,KAAKG,QAASiB,KAAK3B,MAAMyG,mBACjD,kBAAC,IAAD,WAQpB,kBAACrD,EAAA,EAAKO,IAAN,KAEA,kBAACP,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,eAC9B,kBAACZ,EAAA,EAAKa,MAAN,qBACA,kBAACS,EAAA,EAAD,KAEI,kBAACtB,EAAA,EAAKc,QAAN,CACIC,KAAK,OACLvC,MAAOD,KAAK3B,MAAM0G,gBAClBpC,SAAU3C,KAAK3B,MAAM2G,4BACrBvC,YAAY,2BACZS,mBAAiB,oBAEjBC,UAAQ,IAEZ,kBAACJ,EAAA,EAAWK,QAAZ,KACI,kBAAC,IAAD,CAAQC,QAAQ,OAAOzE,KAAK,KAAKG,QAASiB,KAAK3B,MAAM4G,6BACjD,kBAAC,IAAD,UAMhB,kBAACxD,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,OAClC,kBAACZ,EAAA,EAAKa,MAAN,aACA,kBAACS,EAAA,EAAD,KAEI,kBAACtB,EAAA,EAAKc,QAAN,CACIC,KAAK,OACLvC,MAAOD,KAAK3B,MAAM6G,QAClBvC,SAAU3C,KAAK3B,MAAM8G,oBACrB1C,YAAY,8BACZS,mBAAiB,oBAEjBC,UAAQ,IAEZ,kBAACJ,EAAA,EAAWK,QAAZ,KACI,kBAAC,IAAD,CAAQC,QAAQ,OAAOzE,KAAK,KAAKG,QAASiB,KAAK3B,MAAM+G,gBACjD,kBAAC,IAAD,UAMhB,kBAAC3D,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,YACtB,kBAACZ,EAAA,EAAKa,MAAN,oBACA,kBAACS,EAAA,EAAD,KACI,kBAACtB,EAAA,EAAKc,QAAN,CAActC,MAAOD,KAAK3B,MAAMgH,SAAU1C,SAAU3C,KAAK3B,MAAMiH,qBAAsBC,QAAM,IAC3F,kBAAC9D,EAAA,EAAKc,QAAN,CACIC,KAAK,OACLvC,MAAOD,KAAK3B,MAAMmH,WAClB7C,SAAU3C,KAAK3B,MAAMoH,uBACrBhD,YAAY,qBACZS,mBAAiB,oBAEjBC,UAAQ,IAEZ,kBAACJ,EAAA,EAAWK,QAAZ,KACI,kBAAC,IAAD,CAAQC,QAAQ,OAAOzE,KAAK,KAAKG,QAASiB,KAAK3B,MAAMqH,oCACjD,kBAAC,IAAD,WASZ,kBAACjE,EAAA,EAAKO,IAAN,KACA,kBAACP,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,kBACtC,kBAACZ,EAAA,EAAKa,MAAN,wBACA,kBAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,wBAAwBxC,MAAOD,KAAK3B,MAAMsH,qBAChFhD,SAAU3C,KAAK3B,MAAMuH,2BAA6BzC,UAAQ,KAI1D,kBAAC1B,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,iBACtC,kBAACZ,EAAA,EAAKa,MAAN,uBACA,kBAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,uBAAuBxC,MAAOD,KAAK3B,MAAMwH,oBAC/ElD,SAAU3C,KAAK3B,MAAMyH,0BAA4B3C,UAAQ,KAEzD,kBAAC1B,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,gBACtC,kBAACZ,EAAA,EAAKa,MAAN,sBACA,kBAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,sBAAsBxC,MAAOD,KAAK3B,MAAM0H,mBAC9EpD,SAAU3C,KAAK3B,MAAM2H,mBAAqB7C,UAAQ,MAInD,kBAAC1B,EAAA,EAAKO,IAAN,KACA,kBAACP,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,oBACjC,kBAACZ,EAAA,EAAKa,MAAN,2BACA,kBAACS,EAAA,EAAD,KACO,kBAACtB,EAAA,EAAKc,QAAN,CACCC,KAAK,OACLvC,MAAOD,KAAK3B,MAAM4H,4BAClBtD,SAAU3C,KAAK3B,MAAM6H,wCACrBzD,YAAY,4BACZS,mBAAiB,oBACjBL,UAAQ,EACRM,UAAQ,IAEZ,kBAACJ,EAAA,EAAWK,QAAZ,KACI,kBAAC,IAAD,CAAQC,QAAQ,OAAOzE,KAAK,KAAKG,QAASiB,KAAK3B,MAAM8H,kBACjD,kBAAC,IAAD,YAQxB,kBAACnF,EAAA,EAAMoF,OAAP,KACI,kBAAC,IAAD,CAAQ/C,QAAQ,UAAUtE,QAASiB,KAAK3B,MAAM8C,YAA9C,UAGA,kBAAC,IAAD,CAAQkC,QAAQ,UAAUb,KAAK,SAAS1D,SAAUkB,KAAK3B,MAAMgI,WACxDrG,KAAK3B,MAAMmD,iBAM5B,kBAACR,EAAA,EAAD,CACIC,KAAMjB,KAAK3B,MAAMiI,WACjBpF,OAAQlB,KAAK3B,MAAMkI,kBAEnB,kBAACvF,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,EAAA,EAAMM,MAAP,CAAaC,GAAG,aAAhB,gCAIJ,kBAACE,EAAA,EAAD,CAAMG,SAAU5B,KAAK3B,MAAMY,aAAc6C,aAAa,OAClD,kBAACd,EAAA,EAAMe,KAAP,KACI,kBAACN,EAAA,EAAKQ,MAAN,CAAYI,UAAU,eAClB,4EACA,kBAACZ,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,YAAY,sBAAsBxC,MAAOD,KAAK3B,MAAMqE,cAAeC,SAAU3C,KAAK3B,MAAMqE,cAAeS,UAAQ,MAIjJ,kBAACnC,EAAA,EAAMoF,OAAP,KACI,kBAAC,IAAD,CAAQ/C,QAAQ,UAAUtE,QAASiB,KAAK3B,MAAMkI,kBAA9C,UAGA,kBAAC,IAAD,CAAQlD,QAAQ,UAAUb,KAAK,UAA/B,sB,GAtTW3B,IAAMC,W,wFC0D9B0F,E,4MAvDX1I,gBAAkB,CACdC,QAAS,CACL,CACIC,KAAM,SACNC,KAAM,SAACC,GAAD,OACF,oCACI,kBAACO,EAAA,EAAOC,OAAR,CAAeC,UAAU,gCAAgCC,KAAK,KAAKC,MAAM,OACrEE,QAAS,kBAAM,EAAKV,MAAMoI,wBAAwBvI,KACrD,kBAAC,IAAD,CAAQU,KAAM,SAK3B,CACIZ,KAAM,oBACNkB,SAAU,oBACVC,UAAU,EACVlB,KAAM,SAAAC,GAAG,OAAI,uBAAGS,UAAU,QAAQT,EAAIwI,uB,uDAIxC,IAAD,OACL,OACI,oCACI,kBAAC1F,EAAA,EAAD,CACIC,KAAMjB,KAAK3B,MAAMsI,WACjBzF,OAAQlB,KAAK3B,MAAMuI,kBAEnB,kBAAC5F,EAAA,EAAMI,OAAP,CAAczC,UAAU,UAAU0C,aAAW,GACzC,kBAACL,EAAA,EAAMM,MAAP,KACI,kBAAC,IAAD,MADJ,yBAIJ,kBAACN,EAAA,EAAMe,KAAP,KACI,yBAAKpD,UAAU,wCACX,kBAACkI,EAAA,EAAD,CAAO5G,MAAOD,KAAK3B,MAAM4B,MAAO0C,SAAU,SAAAmE,GAAC,OAAI,EAAKzI,MAAMuC,aAAakG,MACvE,yBAAKnI,UAAU,yBACX,kBAAC,IAAD,CAAQC,KAAK,SAGrB,kBAAC,IAAD,CACID,UAAU,mBACVoB,KAAMC,KAAK3B,MAAM4B,MAAMC,OAASF,KAAK3B,MAAM8B,aAAeH,KAAK3B,MAAM0B,KACrEhC,QAASiC,KAAKlC,gBAAgBC,QAC9BqC,UAAQ,EACRC,YAAU,EACVE,SAAO,W,GAhDHM,IAAMC,W,kBCYhCiG,E,kDACF,WAAY1I,EAAO2I,GAAU,IAAD,8BACxB,cAAM3I,EAAO2I,IAkcjBnF,aAAe,SAACoF,GAIZ,GAHAA,EAAMC,kBAG4B,IAFhBD,EAAME,cAEVC,gBACVH,EAAMC,iBACND,EAAMI,sBAEL,CACD,IAAMC,EAAI,iHAIW,EAAKC,MAAMnI,eAJtB,6CAKY,EAAKmI,MAAMC,gBALvB,iDAMgB,EAAKD,MAAME,oBAN3B,8CAOa,EAAKF,MAAMG,iBAPxB,yCAQQ,EAAKH,MAAMI,YARnB,wCASO,EAAKJ,MAAMK,UATlB,0CAUQ,EAAKL,MAAMM,WAVnB,4CAWU,EAAKN,MAAMO,aAXrB,6CAYW,EAAKP,MAAMQ,cAZtB,4CAaU,EAAKR,MAAMS,cAbrB,iDAce,EAAKT,MAAMU,mBAd1B,yDAewB,EAAKV,MAAMW,4BAfnC,uCAgBM,EAAKX,MAAMY,UAhBjB,2CAiBU,EAAKZ,MAAMa,cAjBrB,kGAwBVC,QAAQC,IAAIhB,GACZ,IAAMiB,EAAQ,kGAGO,EAAKhB,MAAMiB,eAHlB,6CAIO,EAAKjB,MAAMnI,eAJlB,6CAKQ,EAAKmI,MAAMC,gBALnB,iDAMY,EAAKD,MAAME,oBANvB,8CAOS,EAAKF,MAAMG,iBAPpB,yCAQI,EAAKH,MAAMI,YARf,wCASG,EAAKJ,MAAMK,UATd,0CAUI,EAAKL,MAAMM,WAVf,4CAWM,EAAKN,MAAMO,aAXjB,6CAYO,EAAKP,MAAMQ,cAZlB,4CAaM,EAAKR,MAAMS,cAbjB,iDAcW,EAAKT,MAAMU,mBAdtB,yDAeoB,EAAKV,MAAMW,4BAf/B,uCAgBE,EAAKX,MAAMY,UAhBb,2CAiBM,EAAKZ,MAAMa,cAjBjB,kGAyBkB,WAA5B,EAAKb,MAAM/F,aACXiH,IAAWnB,GACNoB,MAAK,WACF,EAAKC,YACL,EAAKxH,aACL,EAAKyH,eACLC,SAAOC,QAAQ,gBAAiB,kCACjCC,OAAM,SAAAC,IACDA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,0BAI/CP,IAAWF,GACNG,MAAK,WACF,EAAKC,YACL,EAAKxH,aACL,EAAKyH,eACLC,SAAOM,KAAK,gBAAiB,kCAC9BJ,OAAM,SAAAC,IACDA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,0BAKvD,EAAKI,SAAS,CACVzH,WAAW,KAzhBS,EA6hB5B1C,aAAe,SAACgI,GACZA,EAAMC,iBAEN,IAAMmC,EAAU,kGAGS,EAAK9B,MAAMiB,eAHpB,gGAUhBC,IAAWY,GACNX,MAAK,WACF,EAAKnC,mBACL,EAAKqC,eACLC,SAAOS,QAAQ,gBAAiB,kCACjCP,OAAM,SAAAC,IACDA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,2BAjjBvB,EAsjB5BO,yBAA2B,SAACzC,GAExB,EAAKsC,SAAS,CAEVhB,cAAetB,EAAE0C,UACjBC,YAAa3C,EAAE2C,YACfC,iBAAkB,GAClBC,mBAAmB,IAEvB,EAAKC,oBAAoB9C,EAAE0C,YA/jBH,EAkkB5BK,kCAAoC,SAAC/C,GAEjC,EAAKsC,SAAS,CACV5B,gBAAiBV,EAAEgD,YACnBtK,cAAesH,EAAEtH,cACjBuK,cAAejD,EAAEiD,cACjBC,eAAgBlD,EAAEkD,eAClBC,WAAYnD,EAAEmD,WACdC,OAAQpD,EAAEoD,OACVC,cAAerD,EAAEqD,cACjBC,MAAOtD,EAAEsD,MACTC,2BAA2B,KA7kBP,EAilB5BC,6BAA+B,SAACxD,GAE5B,EAAKsC,SAAS,CACV3B,oBAAqBX,EAAEyD,gBACvB7D,kBAAmBI,EAAEJ,kBAErB8D,uBAAuB,KAvlBH,EA2lB5BC,2BAA6B,SAAC3D,GAE1B,EAAKsC,SAAS,CACV1B,iBAAkBZ,EAAE4D,aACpBhL,eAAgBoH,EAAEpH,eAClBE,UAAW,GACX+K,qBAAqB,IAEzB,EAAKC,aAAa9D,EAAE4D,eAnmBI,EAqmB5BG,sBAAwB,SAAC/D,GAErB,EAAKsC,SAAS,CACVzB,YAAab,EAAEgE,QACflL,UAAWkH,EAAElH,UACbmL,gBAAgB,KA1mBI,EA6mB5BC,6BAA+B,SAAClE,GAE5B,EAAKsC,SAAS,CACVlB,4BAA6BpB,EAAEmE,eAC/BvB,iBAAkB5C,EAAE4C,iBACpBwB,SAAU,GACVC,uBAAuB,IAE3B,EAAKC,YAAYtE,EAAEmE,iBArnBK,EAunB5BI,qBAAuB,SAACvE,GAEpB,EAAKsC,SAAS,CACVnB,mBAAoBnB,EAAEwE,OACtBJ,SAAUpE,EAAEoE,SACZK,eAAe,KA5nBK,EA+nB5BC,oCAAsC,SAAC1E,GACnC,EAAKsC,SAAS,CACVjB,UAAWrB,EAAEqB,UACb7I,YAAawH,EAAExH,YACfmM,uBAAwB3E,EAAE2E,uBAC1BC,sBAAuB5E,EAAEkD,eACzB2B,qBAAsB7E,EAAEqD,cACxByB,8BAA8B,KAtoBV,EAyoB5BC,kBAAoB,SAAC/E,GAEjB,EAAKsC,SAAS,CACVpB,cAAelB,EAAEkB,cACjB8D,4BAA6BhF,EAAEhH,gBAC/B6G,YAAY,KA9oBQ,EAmpB5BoF,eAAiB,SAACjF,GACd,EAAKsC,SAAS,CACVZ,eAAgB1B,EAAE0B,eAClBpJ,eAAgB0H,EAAE1H,eAClBoI,gBAAiBV,EAAEU,gBACnBC,oBAAqBX,EAAEW,oBACvBC,iBAAkBZ,EAAEY,iBACpBC,YAAab,EAAEa,YACfM,mBAAoBnB,EAAEmB,mBACtBC,4BAA6BpB,EAAEoB,4BAC/BC,UAAWrB,EAAEzH,SAAS8I,UACtB7I,YAAawH,EAAEzH,SAASC,YACxBmM,uBAAwB3E,EAAEzH,SAASoM,uBACnCC,sBAAuB5E,EAAEzH,SAAS2K,eAClC2B,qBAAsB7E,EAAEzH,SAAS8K,cACjCT,iBAAkB5C,EAAEkF,aAAatC,iBACjCwB,SAAUpE,EAAEmF,IAAIf,SAChBtL,UAAWkH,EAAEnH,KAAKC,UAClBF,eAAgBoH,EAAErH,WAAWC,eAC7BsI,cAAelB,EAAEkB,cACjB8D,4BAA6BhF,EAAEjH,aAAaC,gBAC5CN,cAAesH,EAAEvH,kBAAkBC,cACnCuK,cAAejD,EAAEvH,kBAAkBwK,cACnCC,eAAgBlD,EAAEvH,kBAAkByK,eACpCC,WAAYnD,EAAEvH,kBAAkB0K,WAChCC,OAAQpD,EAAEvH,kBAAkB2K,OAC5BC,cAAerD,EAAEvH,kBAAkB4K,cACnCC,MAAOtD,EAAEvH,kBAAkB6K,MAC3B1D,kBAAmBI,EAAEoF,QAAQxF,kBAC7B+C,YAAa3C,EAAEqF,YAAY1C,YAC3BrB,cAAetB,EAAEsB,cACjBnH,MAAM,EACNO,aAAc,YAnrBM,EAurB5B4K,iBAAmB,SAACtF,GAChB,EAAKsC,SAAS,CACVZ,eAAgB1B,EAAE0B,eAClBpJ,eAAgB0H,EAAE1H,eAClBkH,YAAY,EACZ9E,aAAc,YA5rBM,EA0tB5BZ,aAAe,SAACkG,GACZ,IAAI7G,EAAQ6G,EAAEuF,OAAOpM,MACjBF,EAAO,EAAKwH,MAAMxH,KAClBI,EAAe,EAAKoH,MAAMpH,aAC9B,EAAKiJ,SAAS,CACVnJ,UAGAA,EAAMC,SACNC,EAAeJ,EAAKuM,QAAO,SAAAC,GACvB,IAAIC,EACAD,EAAK1M,aAAaC,gBAAgB2M,WAAWC,cAAcC,WAAW1M,EAAMyM,gBAC5EH,EAAKnN,eAAeqN,WAAWC,cAAcC,WAAW1M,EAAMyM,gBAC9DH,EAAKlN,SAASC,YAAYmN,WAAWC,cAAcC,WAAW1M,EAAMyM,gBACpEH,EAAKhN,kBAAkBC,cAAciN,WAAWC,cAAcC,WAAW1M,EAAMyM,gBAC/EH,EAAK9M,WAAWC,eAAe+M,WAAWC,cAAcC,WAAW1M,EAAMyM,gBACzEH,EAAK5M,KAAKC,UAAU6M,WAAWC,cAAcC,WAAW1M,EAAMyM,eAE9DE,EACAL,EAAK1M,aAAaC,gBAAgB2M,WAAWC,cAAcG,SAAS5M,EAAMyM,gBAC1EH,EAAKnN,eAAeqN,WAAWC,cAAcC,WAAW1M,EAAMyM,gBAC9DH,EAAKlN,SAASC,YAAYmN,WAAWC,cAAcC,WAAW1M,EAAMyM,gBACpEH,EAAKhN,kBAAkBC,cAAciN,WAAWC,cAAcC,WAAW1M,EAAMyM,gBAC/EH,EAAK9M,WAAWC,eAAe+M,WAAWC,cAAcC,WAAW1M,EAAMyM,gBACzEH,EAAK5M,KAAKC,UAAU6M,WAAWC,cAAcC,WAAW1M,EAAMyM,eAElE,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKxD,SAAS,CACVjJ,mBA3vBgB,EAgwB5B2M,mBAAqB,SAAChG,GAClB,IAAI7G,EAAQ6G,EAAEuF,OAAOpM,MACjBF,EAAO,EAAKwH,MAAMwF,WAClB5M,EAAe,EAAKoH,MAAMyF,mBAC9B,EAAK5D,SAAS,CACV6D,YAAahN,IAGbA,EAAMC,SACNC,EAAeJ,EAAKuM,QAAO,SAAAC,GACvB,IAAIC,EACAD,EAAKzM,gBAAgB2M,WAAWC,cAAcC,WAAW1M,EAAMyM,eAE/DE,EACAL,EAAKzM,gBAAgB2M,WAAWC,cAAcG,SAAS5M,EAAMyM,eAEjE,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKxD,SAAS,CACVjJ,mBAvxBgB,EA2xB5B+M,0BAA4B,SAACpG,GACzB,IAAI7G,EAAQ6G,EAAEuF,OAAOpM,MACjBF,EAAO,EAAKwH,MAAM4F,kBAClBC,EAAsB,EAAK7F,MAAM8F,0BACrC,EAAKjE,SAAS,CAAEkE,mBAAoBrN,IAEhCA,EAAMC,SACNkN,EAAsBrN,EAAKuM,QAAO,SAAAC,GAC9B,IAAIC,EACAD,EAAK9C,YAAYgD,WAAWC,cAAcC,WAAW1M,EAAMyM,eAE3DE,EACAL,EAAK9C,YAAYgD,WAAWC,cAAcG,SAAS5M,EAAMyM,eAE7D,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKxD,SAAS,CAAEgE,0BA/yBI,EAkzB5BG,mCAAqC,SAACzG,GAClC,IAAI7G,EAAQ6G,EAAEuF,OAAOpM,MACjBF,EAAO,EAAKwH,MAAMiG,2BAClBC,EAA+B,EAAKlG,MAAMmG,mCAC9C,EAAKtE,SAAS,CAAEuE,4BAA6B1N,IAEzCA,EAAMC,SACNuN,EAA+B1N,EAAKuM,QAAO,SAAAC,GACvC,IAAIC,EACAD,EAAK/M,cAAciN,WAAWC,cAAcC,WAAW1M,EAAMyM,eAE7DE,EACAL,EAAK/M,cAAciN,WAAWC,cAAcG,SAAS5M,EAAMyM,eAE/D,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKxD,SAAS,CAAEqE,mCAt0BI,EAy0B5BG,4BAA8B,SAAC9G,GAC3B,IAAI7G,EAAQ6G,EAAEuF,OAAOpM,MACjBF,EAAO,EAAKwH,MAAMsG,oBAClBC,EAAwB,EAAKvG,MAAMwG,4BACvC,EAAK3E,SAAS,CAAE4E,qBAAsB/N,IAElCA,EAAMC,SACN4N,EAAwB/N,EAAKuM,QAAO,SAAAC,GAChC,IAAIC,EACAD,EAAK7M,eAAe+M,WAAWC,cAAcC,WAAW1M,EAAMyM,eAE9DE,EACAL,EAAK7M,eAAe+M,WAAWC,cAAcG,SAAS5M,EAAMyM,eAEhE,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKxD,SAAS,CAAE0E,4BA71BI,EAg2B5BG,8BAAgC,SAACnH,GAC7B,IAAI7G,EAAQ6G,EAAEuF,OAAOpM,MACjBF,EAAO,EAAKwH,MAAM2G,sBAClBC,EAA0B,EAAK5G,MAAM6G,8BACzC,EAAKhF,SAAS,CAAEiF,uBAAwBpO,IAEpCA,EAAMC,SACNiO,EAA0BpO,EAAKuM,QAAO,SAAAC,GAClC,IAAIC,EACAD,EAAK7F,kBAAkB+F,WAAWC,cAAcC,WAAW1M,EAAMyM,eAEjEE,EACAL,EAAK7F,kBAAkB+F,WAAWC,cAAcG,SAAS5M,EAAMyM,eAEnE,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKxD,SAAS,CAAE+E,8BAp3BI,EAu3B5BG,uBAAyB,SAACxH,GACtB,IAAI7G,EAAQ6G,EAAEuF,OAAOpM,MACjBF,EAAO,EAAKwH,MAAMgH,eAClBC,EAAmB,EAAKjH,MAAMkH,uBAClC,EAAKrF,SAAS,CAAEsF,gBAAiBzO,IAE7BA,EAAMC,SACNsO,EAAmBzO,EAAKuM,QAAO,SAAAC,GAC3B,IAAIC,EACAD,EAAK3M,UAAU6M,WAAWC,cAAcC,WAAW1M,EAAMyM,eAEzDE,EACAL,EAAK3M,UAAU6M,WAAWC,cAAcG,SAAS5M,EAAMyM,eAE3D,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKxD,SAAS,CAAEoF,uBA34BI,EA84B5BG,8BAAgC,SAAC7H,GAE7B,IAAI7G,EAAQ6G,EAAEuF,OAAOpM,MACjBF,EAAO,EAAKwH,MAAMqH,sBAClBC,EAA0B,EAAKtH,MAAMuH,8BACzC,EAAK1F,SAAS,CAAE2F,uBAAwB9O,IAEpCA,EAAMC,SACN2O,EAA0B9O,EAAKuM,QAAO,SAAAC,GAClC,IAAIC,EACAD,EAAK7C,iBAAiB+C,WAAWC,cAAcC,WAAW1M,EAAMyM,eAEhEE,EACAL,EAAK7C,iBAAiB+C,WAAWC,cAAcG,SAAS5M,EAAMyM,eAElE,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKxD,SAAS,CAAEyF,8BAn6BI,EAs6B5BG,sBAAwB,SAAClI,GACrB,IAAI7G,EAAQ6G,EAAEuF,OAAOpM,MACjBF,EAAO,EAAKwH,MAAM0H,cAClBC,EAAkB,EAAK3H,MAAM4H,sBACjC,EAAK/F,SAAS,CAAEgG,eAAgBnP,IAE5BA,EAAMC,SACNgP,EAAkBnP,EAAKuM,QAAO,SAAAC,GAC1B,IAAIC,EACAD,EAAKrB,SAASuB,WAAWC,cAAcC,WAAW1M,EAAMyM,eAExDE,EACAL,EAAKrB,SAASuB,WAAWC,cAAcG,SAAS5M,EAAMyM,eAE1D,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKxD,SAAS,CAAE8F,sBA17BI,EA67B5BG,qCAAuC,SAACvI,GACpC,IAAI7G,EAAQ6G,EAAEuF,OAAOpM,MACjBF,EAAO,EAAKwH,MAAM+H,6BAClBC,EAAiC,EAAKhI,MAAMiI,qCAChD,EAAKpG,SAAS,CAAEqG,8BAA+BxP,IAE3CA,EAAMC,SACNqP,EAAiCxP,EAAKuM,QAAO,SAAAC,GACzC,IAAIC,EACAD,EAAKjN,YAAYmN,WAAWC,cAAcC,WAAW1M,EAAMyM,eAE3DE,EACAL,EAAKjN,YAAYmN,WAAWC,cAAcG,SAAS5M,EAAMyM,eAE7D,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKxD,SAAS,CAAEmG,qCA/8BpB,EAAKhI,MAAQ,CACT5F,WAAW,EACX+N,OAAQ,GACR3R,QAAS,GACTgC,KAAM,GACNI,aAAc,GACdF,MAAO,GACPgB,MAAM,EACNqF,YAAY,EACZkC,eAAgB,EAChBpJ,eAAgB,EAChBoI,gBAAiB,EACjBC,oBAAqB,EACrBC,iBAAkB,EAClBC,YAAa,EACbM,mBAAoB,EACpBC,4BAA6B,EAC7BC,UAAW,EACXH,cAAe,EACfJ,UAAWvJ,EAAMsR,KAAKvF,MACtBvC,WAAYxJ,EAAMsR,KAAKvF,MACvBtC,aAAc8H,MACd7H,cAAe6H,MACf9D,4BAA6B,GAC7B+D,YAAa,GACbnG,iBAAkB,GAClBwB,SAAU,GACVxL,eAAgB,GAChBE,UAAW,GACX6L,uBAAwB,GACxBC,sBAAuB,GACvBC,qBAAsB,GACtBvD,cAAe,EACfqB,YAAa,GACbjK,cAAe,GACfuK,cAAe,GACfC,eAAgB,GAChBC,WAAY,GACZC,OAAQ,GACRC,cAAe,GACfC,MAAO,GACP1D,kBAAmB,GACnBlF,aAAc,GACdsO,cAAe,GACfC,iBAAkB,GAClBhD,WAAY,GACZpG,YAAY,EACZqG,mBAAoB,GACpBC,YAAa,GACb5C,2BAA2B,EAC3BqD,mCAAoC,GACpCC,4BAA6B,GAC7BnD,uBAAuB,EACvB4D,8BAA+B,GAC/BC,uBAAwB,GACxB1D,qBAAqB,EACrBoD,4BAA6B,GAC7BC,qBAAsB,GACtBjD,gBAAgB,EAChB0D,uBAAwB,GACxBC,gBAAiB,GACjBvD,uBAAuB,EACvB2D,8BAA+B,GAC/BC,uBAAwB,GACxBxD,eAAe,EACf4D,sBAAuB,GACvBC,eAAgB,GAChBxD,8BAA8B,EAC9B4D,qCAAsC,GACtCC,8BAA+B,GAC/B9F,mBAAmB,EACnB0D,0BAA2B,GAC3BC,mBAAoB,IAIxB,EAAK3M,WAAa,WACd,EAAKyI,SAAS,CACVnI,MAAM,EACNO,aAAc,WAElB,EAAKmH,aAGT,EAAKxH,WAAa,WACd,EAAKiI,SAAS,CACVnI,MAAM,KAId,EAAKsF,iBAAmB,WACpB,EAAK6C,SAAS,CACV9C,YAAY,KAIpB,EAAKH,iBAAmB,WACpB,EAAKiD,SAAS,CACVzC,YAAY,KAGpB,EAAKqJ,wBAA0B,WAC3B,EAAK5G,SAAS,CAAEO,mBAAmB,KAEvC,EAAKsG,iCAAmC,WACpC,EAAK7G,SAAS,CAAEiB,2BAA2B,KAE/C,EAAK6F,4BAA8B,WAC/B,EAAK9G,SAAS,CAAEoB,uBAAuB,KAE3C,EAAK2F,0BAA4B,WAC7B,EAAK/G,SAAS,CAAEuB,qBAAqB,KAEzC,EAAKyF,qBAAuB,WACxB,EAAKhH,SAAS,CAAE2B,gBAAgB,KAEpC,EAAK9F,4BAA8B,WAC/B,EAAKmE,SAAS,CAAE+B,uBAAuB,KAE3C,EAAKkF,qBAAuB,WACxB,EAAKjH,SAAS,CAAEmC,eAAe,KAEnC,EAAK7F,mCAAqC,WACtC,EAAK0D,SAAS,CAAEwC,8BAA8B,KAElD,EAAKhF,iBAAmB,WACpB,EAAKwC,SAAS,CAAEzC,YAAY,KAEhC,EAAK2J,wBAA0B,WAC3B,EAAKlH,SAAS,CAAEO,mBAAmB,KAEvC,EAAK4G,iCAAmC,WACpC,EAAKnH,SAAS,CAAEiB,2BAA2B,KAE/C,EAAKmG,4BAA8B,WAC/B,EAAKpH,SAAS,CAAEoB,uBAAuB,KAE3C,EAAKiG,0BAA4B,WAC7B,EAAKrH,SAAS,CAAEuB,qBAAqB,KAEzC,EAAK+F,qBAAuB,WACxB,EAAKtH,SAAS,CAAE2B,gBAAgB,KAEpC,EAAK4F,4BAA8B,WAC/B,EAAKvH,SAAS,CAAE+B,uBAAuB,KAE3C,EAAKyF,qBAAuB,WACxB,EAAKxH,SAAS,CAAEmC,eAAe,KAEnC,EAAKsF,mCAAqC,WACtC,EAAKzH,SAAS,CAAEwC,8BAA8B,KAElD,EAAKhD,eACL,EAAKkI,oBACL,EAAKC,6BACL,EAAKC,gBACL,EAAKC,uBACL,EAAKC,2BACL,EAAKC,kBAhKmB,E,2DAoKZ,IAAD,OAwEX1I,IAtEa,w7DAuERC,MAAK,gBACF3I,EADE,EACFA,KADE,OAEA,EAAKqJ,SAAS,CAChBrJ,KAAMA,EAAKA,KAAKqR,qBAChBrI,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,4B,wCAKhC,IAAD,OAWdP,IATa,iKAURC,MAAK,gBAAG3I,EAAH,EAAGA,KAAH,OAAc,EAAKqJ,SAAS,CAC9B+D,kBAAmBpN,EAAKA,KAAKsR,aAC7BtI,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,0C,sCAIlC,IAAD,OAYZP,IAXa,6OAYRC,MAAK,gBACF3I,EADE,EACFA,KADE,OAEA,EAAKqJ,SAAS,CAChB2D,WAAYhN,EAAKA,KAAKuR,wBACtBvI,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,+C,0CAI9B,IAAD,OAWhBP,IATa,2KAURC,MAAK,gBAAG3I,EAAH,EAAGA,KAAH,OAAc,EAAKqJ,SAAS,CAC9ByE,oBAAqB9N,EAAKA,KAAKwR,iBAC/BxI,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,sC,iDAIvB,IAAD,OAiBvBP,IAfa,+WAgBRC,MAAK,gBAAG3I,EAAH,EAAGA,KAAH,OAAc,EAAKqJ,SAAS,CAC9BoE,2BAA4BzN,EAAKA,KAAKyR,uBACtCzI,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,8C,6CAI3B,IAAD,OAWnBP,IATa,iLAURC,MAAK,gBAAG3I,EAAH,EAAGA,KAAH,OAAc,EAAKqJ,SAAS,CAC9B8E,sBAAuBnO,EAAKA,KAAK0R,kBACjC1I,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,yC,0CAK/B/I,GAAQ,IAAD,OAEjByR,EAAO,iFAE6BzR,EAF7B,qLAWbwI,IAAYiJ,GACPhJ,MAAK,gBAAG3I,EAAH,EAAGA,KAAH,OAAc,EAAKqJ,SAAS,CAC9BwF,sBAAuB7O,EAAKA,KAAK4R,uBACjC5I,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,0C,mCAItC/I,GAAQ,IAAD,OAEVyR,EAAO,6GAIkBzR,EAJlB,0IAabwI,IAAYiJ,GACPhJ,MAAK,gBAAG3I,EAAH,EAAGA,KAAH,OAAc,EAAKqJ,SAAS,CAC9BmF,eAAgBxO,EAAKA,KAAK6R,gBAC1B7I,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,iC,kCAIvC/I,GAAQ,IAAD,OAETyR,EAAO,mHAIyBzR,EAJzB,yIAabwI,IAAYiJ,GACPhJ,MAAK,gBAAG3I,EAAH,EAAGA,KAAH,OAAc,EAAKqJ,SAAS,CAC9B6F,cAAelP,EAAKA,KAAK8R,eACzB9I,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,gC,mDAIrB,IAAD,OAczBP,IAba,uTAcRC,MAAK,gBAAG3I,EAAH,EAAGA,KAAH,OAAc,EAAKqJ,SAAS,CAC9BkG,6BAA8BvP,EAAKA,KAAK+R,aACxC/I,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,mC,kCAkQ/ChJ,KAAKoJ,SAAS,CACV0C,4BAA6B,GAC7BxM,YAAa,GACboK,iBAAkB,GAClBwB,SAAU,GACVxL,eAAgB,GAChBE,UAAW,GACX6L,uBAAwB,GACxBC,sBAAuB,GACvBC,qBAAsB,GACtBnM,cAAe,GACfuK,cAAe,GACfC,eAAgB,GAChBC,WAAY,GACZC,OAAQ,GACRC,cAAe,GACfC,MAAO,GACP1D,kBAAmB,GACnBtH,eAAgB,EAChBqK,YAAa,GACb9H,WAAW,M,yCAqQf,OADA3B,KAAKoJ,SAAS,CAAEsG,OAFH,MACK,I,+BAIZ,IAAD,SAM8D1P,KAAKuH,MALhExH,EADH,EACGA,KAAME,EADT,EACSA,MAAOE,EADhB,EACgBA,aAAc4M,EAD9B,EAC8BA,WAAYE,EAD1C,EAC0CA,YAAae,EADvD,EACuDA,qBAAsBH,EAD7E,EAC6EA,oBAAqBC,EADlG,EACkGA,sBAAuBY,EADzH,EACyHA,gBAC1HH,EAFC,EAEDA,eAAgBC,EAFf,EAEeA,iBAAkBY,EAFjC,EAEiCA,eAAgBH,EAFjD,EAEiDA,cAAeC,EAFhE,EAEgEA,gBAAiBH,EAFjF,EAEiFA,uBAAwBH,EAFzG,EAEyGA,sBAAuBC,EAFhI,EAEgIA,wBAC/HY,EAHD,EAGCA,8BAA+BH,EAHhC,EAGgCA,6BAA8BC,EAH9D,EAG8DA,+BAC/DlB,EAJC,EAIDA,uBAAwBH,EAJvB,EAIuBA,sBAAuBC,EAJ9C,EAI8CA,wBAC/CR,EALC,EAKDA,4BAA6BH,EAL5B,EAK4BA,2BAA4BC,EALxD,EAKwDA,6BACzDH,EANC,EAMDA,mBAAoBH,EANnB,EAMmBA,kBAAmBC,EANtC,EAMsCA,oBAC3C,OACI,oCACI,kBAAC2E,EAAA,EAAD,KAAQ,sEAER,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CACIC,gBAAgB,QAChBC,iBAAiB,QACjBC,iBAAiB,uCAErB,kBAACnQ,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAKiQ,GAAG,MACJ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,4CAEJ,kBAACC,EAAA,EAAD,CAAU7T,UAAU,eAChB,kBAAC8T,EAAA,EAAD,CACIC,mBAAoB1S,KAAKuJ,yBACzB5C,WAAY3G,KAAKuH,MAAMoC,kBACvB/C,iBAAkB5G,KAAKsQ,wBACvBrQ,MAAOqN,EACPvN,KAAMoN,EACNvM,aAAcZ,KAAKkN,0BACnB/M,aAAciN,IAElB,kBAACuF,EAAA,EAAD,CACIC,yBAA0B5S,KAAK6J,kCAC/BlD,WAAY3G,KAAKuH,MAAM8C,0BACvBzD,iBAAkB5G,KAAKuQ,iCACvBtQ,MAAO0N,EACP5N,KAAMyN,EACN5M,aAAcZ,KAAKuN,mCACnBpN,aAAcsN,IAElB,kBAAC,EAAD,CACIhH,wBAAyBzG,KAAKsK,6BAC9B3D,WAAY3G,KAAKuH,MAAMiD,sBACvB5D,iBAAkB5G,KAAKwQ,4BACvBvQ,MAAOoO,EACPtO,KAAMmO,EACNtN,aAAcZ,KAAKiO,8BACnB9N,aAAcgO,IAElB,kBAAC0E,EAAA,EAAD,CACIC,sBAAuB9S,KAAKyK,2BAC5B9D,WAAY3G,KAAKuH,MAAMoD,oBACvB/D,iBAAkB5G,KAAKyQ,0BACvBxQ,MAAO+N,EACPjO,KAAM8N,EACNjN,aAAcZ,KAAK4N,4BACnBzN,aAAc2N,IAElB,kBAACiF,EAAA,EAAD,CACIC,kBAAmBhT,KAAK6K,sBACxBlE,WAAY3G,KAAKuH,MAAMwD,eACvBnE,iBAAkB5G,KAAK0Q,qBACvBzQ,MAAOyO,EACP3O,KAAMwO,EACN3N,aAAcZ,KAAKsO,uBACnBnO,aAAcqO,IAElB,kBAACyE,EAAA,EAAD,CACIC,iBAAkBlT,KAAKqL,qBACvB1E,WAAY3G,KAAKuH,MAAMgE,cACvB3E,iBAAkB5G,KAAK4Q,qBACvB3Q,MAAOmP,EACPrP,KAAMkP,EACNrO,aAAcZ,KAAKgP,sBACnB7O,aAAc+O,IAElB,kBAACiE,EAAA,EAAD,CACIC,wBAAyBpT,KAAKgL,6BAC9BrE,WAAY3G,KAAKuH,MAAM4D,sBACvBvE,iBAAkB5G,KAAK2Q,4BACvB1Q,MAAO8O,EACPhP,KAAM6O,EACNhO,aAAcZ,KAAK2O,8BACnBxO,aAAc0O,IAElB,kBAACwE,EAAA,EAAD,CACIC,+BAAgCtT,KAAKwL,oCACrC7E,WAAY3G,KAAKuH,MAAMqE,6BACvBhF,iBAAkB5G,KAAK6Q,mCACvB5Q,MAAOwP,EACP1P,KAAMuP,EACN1O,aAAcZ,KAAKqP,qCACnBlP,aAAcoP,IAElB,kBAACgE,EAAA,EAAD,CACIC,6BAA8BxT,KAAK6L,kBACnClF,WAAY3G,KAAKuH,MAAMZ,WACvBC,iBAAkB5G,KAAK4G,iBACvB3G,MAAOgN,EACPlN,KAAMgN,EACNnM,aAAcZ,KAAK8M,mBACnB3M,aAAcA,IAGlB,kBAAC,EAAD,CACI7B,KAAM0B,KAAKyT,YAAYzV,KACvBgB,WAAYgB,KAAK+L,eACjB9M,aAAce,KAAKoM,iBACnBnM,MAAOA,EACPF,KAAMA,EACNI,aAAcA,EACdQ,WAAYX,KAAKW,WACjBC,aAAcZ,KAAKY,eAGvB,kBAAC,EAAD,CACIK,KAAMjB,KAAKuH,MAAMtG,KACjBE,WAAYnB,KAAKmB,WACjBK,aAAcxB,KAAKuH,MAAM/F,aACzBK,aAAc7B,KAAK6B,aACnByB,2BAA4BtD,KAAKiQ,iCACjC9J,iBAAkBnG,KAAKmG,iBACvBrB,kBAAmB9E,KAAKgQ,wBACxBrL,sBAAuB3E,KAAKkQ,4BAC5B7L,oBAAqBrE,KAAKmQ,0BAC1B3L,eAAgBxE,KAAKoQ,qBACrBhL,eAAgBpF,KAAKqQ,qBACrBpL,4BAA6BjF,KAAKiF,4BAClCS,mCAAoC1F,KAAK0F,mCACzCO,4BAA6BjG,KAAKuH,MAAMuE,4BACxC5F,wCAAyC,SAAAY,GAAC,OAAI,EAAKsC,SAAS,CAAE0C,4BAA6BhF,EAAEuF,OAAOpM,SACpG0F,qBAAsB3F,KAAKuH,MAAMkE,uBACjC7F,2BAA4B,SAAAkB,GAAC,OAAI,EAAKsC,SAAS,CAAEqC,uBAAwB3E,EAAEuF,OAAOpM,SAClF4F,oBAAqB7F,KAAKuH,MAAMmE,sBAChC5F,0BAA2B,SAAAgB,GAAC,OAAI,EAAKsC,SAAS,CAAEsC,sBAAuB5E,EAAEuF,OAAOpM,SAChF8F,mBAAoB/F,KAAKuH,MAAMoE,qBAC/B+H,yBAA0B,SAAA5M,GAAC,OAAI,EAAKsC,SAAS,CAAEuC,qBAAsB7E,EAAEuF,OAAOpM,SAC9EkE,cAAenE,KAAKuH,MAAM7H,eAC1B0E,0BAA2B,SAAA0C,GAAC,OAAI,EAAKsC,SAAS,CAAE1J,eAAgBoH,EAAEuF,OAAOpM,SACzEqE,SAAUtE,KAAKuH,MAAM3H,UACrB2E,qBAAsB,SAAAuC,GAAC,OAAI,EAAKsC,SAAS,CAAExJ,UAAWkH,EAAEuF,OAAOpM,SAC/DiF,QAASlF,KAAKuH,MAAM2D,SACpB/F,oBAAqB,SAAA2B,GAAC,OAAI,EAAKsC,SAAS,CAAE8B,SAAUpE,EAAEuF,OAAOpM,SAC7DuF,WAAYxF,KAAKuH,MAAMjI,YACvBmG,uBAAwB,SAAAqB,GAAC,OAAI,EAAKsC,SAAS,CAAE9J,YAAawH,EAAEuF,OAAOpM,SACnE8E,gBAAiB/E,KAAKuH,MAAMmC,iBAC5B1E,4BAA6B,SAAA8B,GAAC,OAAI,EAAKsC,SAAS,CAAEM,iBAAkB5C,EAAEuF,OAAOpM,SAC7E+C,aAAchD,KAAKuH,MAAM/H,cACzByD,yBAA0B,SAAA6D,GAAC,OAAI,EAAKsC,SAAS,CAAE5J,cAAesH,EAAEuF,OAAOpM,SACvEsD,aAAcvD,KAAKuH,MAAMwC,cACzBvG,yBAA0B,SAAAsD,GAAC,OAAI,EAAKsC,SAAS,CAAEW,cAAejD,EAAEuF,OAAOpM,SACvE0D,cAAe3D,KAAKuH,MAAMyC,eAC1BpG,0BAA2B,SAAAkD,GAAC,OAAI,EAAKsC,SAAS,CAAEY,eAAgBlD,EAAEuF,OAAOpM,SACzE4D,WAAY7D,KAAKuH,MAAM0C,WACvBnG,uBAAwB,SAAAgD,GAAC,OAAI,EAAKsC,SAAS,CAAEa,WAAYnD,EAAEuF,OAAOpM,SAClEwD,OAAQzD,KAAKuH,MAAM2C,OACnBxG,mBAAoB,SAAAoD,GAAC,OAAI,EAAKsC,SAAS,CAAEc,OAAQpD,EAAEuF,OAAOpM,SAC1D8D,aAAc/D,KAAKuH,MAAM4C,cACzBnG,yBAA0B,SAAA8C,GAAC,OAAI,EAAKsC,SAAS,CAAEe,cAAerD,EAAEuF,OAAOpM,SACvEgE,MAAOjE,KAAKuH,MAAM6C,MAClBlG,kBAAmB,SAAA4C,GAAC,OAAI,EAAKsC,SAAS,CAAEgB,MAAOtD,EAAEuF,OAAOpM,SACxDwE,gBAAiBzE,KAAKuH,MAAMb,kBAC5BhC,4BAA6B,SAAAoC,GAAC,OAAI,EAAKsC,SAAS,CAAE1C,kBAAmBI,EAAEuF,OAAOpM,SAC9EyC,cAAe1C,KAAKuH,MAAMnI,eAC1BwD,oBAAqB,SAAAkE,GAAC,OAAI,EAAKsC,SAAS,CAAEhK,eAAgB0H,EAAEuF,OAAOpM,SACnE2E,WAAY5E,KAAKuH,MAAMkC,YACvB5E,uBAAwB,SAAAiC,GAAC,OAAI,EAAKsC,SAAS,CAAEK,YAAa3C,EAAEuF,OAAOpM,SACnEqG,WAAYtG,KAAKuH,MAAMjB,WACvBC,iBAAkBvG,KAAKuG,iBACvBtH,aAAce,KAAKf,yB,GAxoCzB4B,IAAMC,WA6pCxB6S,6BAJQ,SAAC,GAAD,MAAyB,CAC7ChE,KADoB,EAAGiE,KAAQjE,QAInBgE,CAAyB5M","file":"static/js/65.bd161d77.chunk.js","sourcesContent":["import React from \"react\"\nimport {Button} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\nclass BettingRegistrationTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"Registration Number\",\n                selector: \"BETTING_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.BETTING_NUMBER}</p>\n            },\n            {\n                name: \"Client\",\n                selector: \"ClIENT_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENTID.CLIENT_NAME}</p>\n            },\n            {\n                name: \"Business Name\",\n                selector: \"BUSINESS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.BUSINESS_REGISTER.BUSINESS_NAME}</p>\n            },\n            {\n                name: \"Subcounty Name\",\n                selector: \"SUBCOUNTY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SUB_COUNTY.SUBCOUNTY_NAME}</p>\n            },\n            {\n                name: \"Ward Name\",\n                selector: \"WARD_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WARD.WARD_NAME}</p>\n            },\n            {\n                name: \"Status\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYSTEMSTATUS.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n            <DataTable\n                className=\"dataTable-custom\"\n                data={this.props.value.length ? this.props.filteredData : this.props.data}\n                columns={this.tableProperties.columns}\n                noHeader\n                pagination\n                subHeader\n                striped\n                responsive\n                subHeaderComponent={\n                    <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                }\n            />\n            </>\n\n        )\n    }\n}\n\n\nexport default BettingRegistrationTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup,Col } from 'react-bootstrap';\nimport \"../../../../../assets/scss/plugins/forms/react-select/_react-select.scss\";\nimport { Search } from 'react-feather';\n\n\nclass BettingRegistrationModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                    size=\"xl\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Betting and Lotteries Registration\n                        </Modal.Title>\n                    </Modal.Header>\n                    \n                    <Form noValidate validated={this.props.validated} onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                    <Modal.Body>\n                        <Form.Row>\n                          \n                        <Form.Group as={Col} md=\"4\" controlId=\"RegistrationNumber\">\n                                    <Form.Label>Betting Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Betting Number\" value={this.props.BettingNumber} onChange={this.props.changeBettingNumber} required />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                    Please provide  Betting Number.\n                                 </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"4\" controlId=\"BusinessNumber\">\n                                    <Form.Label>Business Number</Form.Label>\n                                    <InputGroup>\n                                           <Form.Control\n                                            type=\"text\"\n                                            value={this.props.BusinessName}\n                                            onChange={this.props.handleChangeBusinessName}\n                                            placeholder=\"Search Business Name\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowBusinessRegister}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"4\" controlId=\"BuildingName\">\n                                    <Form.Label>Building Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Building Name\" value={this.props.BuildingName} onChange={this.props.handleChangeBuildingName} required />\n                                </Form.Group>\n                                </Form.Row>\n                                <Form.Row>\n                               \n                                <Form.Group as={Col} md=\"4\" controlId=\"Street\">\n                                    <Form.Label>Street</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Street\" value={this.props.Street} onChange={this.props.handleChangeStreet} required />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"4\" controlId=\"PostalAddress\">\n                                    <Form.Label>Postal Address</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Postal Address\" value={this.props.PostalAddress} onChange={this.props.handleChangePostalAddress} required />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"4\" controlId=\"PlotNumber\">\n                                    <Form.Label>PlotNumber</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Plot Number\" value={this.props.PlotNumber} onChange={this.props.handleChangePlotNumber} required />\n                                </Form.Group>\n                                </Form.Row>\n                                \n                                <Form.Row>\n                              \n\n                                <Form.Group as={Col} md=\"4\" controlId=\"MobileNumber\">\n                                    <Form.Label>Mobile Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Mobile Number\" value={this.props.MobileNumber} onChange={this.props.handleChangeMobileNumber} required />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"4\" controlId=\"Email\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Email\" value={this.props.Email} onChange={this.props.handleChangeEmail} required />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"4\" controlId=\"SubCounty\">\n                    <Form.Label>SubCounty</Form.Label>\n                    <InputGroup>\n                       \n                        <Form.Control\n                            type=\"text\"\n                            value={this.props.SubCountyName}\n                            onChange={this.props.handleChangeSubCountyName}\n                            placeholder=\"Search SubCounty\"\n                            aria-describedby=\"inputGroupPrepend\"\n                            \n                            readOnly\n                        />\n                        <InputGroup.Prepend>\n                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSubCounty}>\n                                <Search />\n                            </Button>\n                        </InputGroup.Prepend>\n                    </InputGroup>\n                   \n                </Form.Group>\n                                </Form.Row>\n                             \n                                <Form.Row>\n                \n                <Form.Group as={Col} md=\"4\" controlId=\"Ward\">\n                    <Form.Label>Ward</Form.Label>\n                    <InputGroup>\n                       \n                        <Form.Control\n                            type=\"text\"\n                            value={this.props.WardName}\n                            onChange={this.props.handleChangeWardName}\n                            placeholder=\"Search Ward\"\n                            aria-describedby=\"inputGroupPrepend\"\n                            \n                            readOnly\n                        />\n                        <InputGroup.Prepend>\n                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowWard}>\n                                <Search />\n                            </Button>\n                        </InputGroup.Prepend>\n                    </InputGroup>\n                  \n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"BettingType\">\n                    <Form.Label>Betting Type</Form.Label>\n                    <InputGroup>\n                       \n                        <Form.Control\n                            type=\"text\"\n                            value={this.props.BettingTypeName}\n                            onChange={this.props.handleChangeBettingTypeName}\n                            placeholder=\"Search Betting Type Name\"\n                            aria-describedby=\"inputGroupPrepend\"\n                            \n                            readOnly\n                        />\n                        <InputGroup.Prepend>\n                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowBettingType}>\n                                <Search />\n                            </Button>\n                        </InputGroup.Prepend>\n                    </InputGroup>\n                   \n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"Module\">\n                    <Form.Label>Module</Form.Label>\n                    <InputGroup>\n                       \n                        <Form.Control\n                            type=\"text\"\n                            value={this.props.ModuleName}\n                            onChange={this.props.handleChangeModuleName}\n                            placeholder=\"Search Module Name\"\n                            aria-describedby=\"inputGroupPrepend\"\n                            \n                            readOnly\n                        />\n                        <InputGroup.Prepend>\n                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowModules}>\n                                <Search />\n                            </Button>\n                        </InputGroup.Prepend>\n                    </InputGroup>\n                    \n                </Form.Group>\n               \n            </Form.Row>\n            <Form.Row>\n       \n            <Form.Group as={Col} md=\"4\" controlId=\"FeeCategory\">\n                    <Form.Label>Fee Category</Form.Label>\n                    <InputGroup>\n                       \n                        <Form.Control\n                            type=\"text\"\n                            value={this.props.FeeCategoryName}\n                            onChange={this.props.handleChangeFeeCategoryName}\n                            placeholder=\"Search Business Category\"\n                            aria-describedby=\"inputGroupPrepend\"\n                            \n                            readOnly\n                        />\n                        <InputGroup.Prepend>\n                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowFeeCategorySearch}>\n                                <Search />\n                            </Button>\n                        </InputGroup.Prepend>\n                    </InputGroup>\n                    \n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"Fee\">\n                    <Form.Label>Fees</Form.Label>\n                    <InputGroup>\n                        \n                        <Form.Control\n                            type=\"text\"\n                            value={this.props.FeeName}\n                            onChange={this.props.handleChangeFeeName}\n                            placeholder=\"Search Detailed Description\"\n                            aria-describedby=\"inputGroupPrepend\"\n                            \n                            readOnly\n                        />\n                        <InputGroup.Prepend>\n                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowFees}>\n                                <Search />\n                            </Button>\n                        </InputGroup.Prepend>\n                    </InputGroup>\n                    \n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"ClientID\">\n                                <Form.Label>Client Name</Form.Label>\n                                <InputGroup>\n                                    <Form.Control value={this.props.ClientID} onChange={this.props.handleChangeClientID} hidden />\n                                    <Form.Control\n                                        type=\"text\"\n                                        value={this.props.ClientName}\n                                        onChange={this.props.handleChangeClientName}\n                                        placeholder=\"Search Client Name\"\n                                        aria-describedby=\"inputGroupPrepend\"\n                                        \n                                        readOnly\n                                    />\n                                    <InputGroup.Prepend>\n                                        <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowClientRegistrationSearch}>\n                                            <Search />\n                                        </Button>\n                                    </InputGroup.Prepend>\n                                </InputGroup>\n                            </Form.Group>\n                           \n            </Form.Row>\n           \n                               \n                                <Form.Row>\n                                <Form.Group as={Col} md=\"4\" controlId=\"DocumentNumber\">\n                                <Form.Label>Document Number</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Document Number\" value={this.props.ClientDocumentNumber}\n                                onChange={this.props.changeClientDocumentNumber}  readOnly />\n                                </Form.Group>\n                                \n                           \n                                <Form.Group as={Col} md=\"4\" controlId=\"PostalAddress\">\n                                <Form.Label>Postal Address</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Postal Address\" value={this.props.ClientPostalAddress}\n                                onChange={this.props.changeClientPostalAddress}  readOnly />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"4\" controlId=\"MobileNumber\">\n                                <Form.Label>Mobile Number</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Mobile Number\" value={this.props.ClientMobileNumber}\n                                onChange={this.props.changeMobileNumber}  readOnly />\n                                </Form.Group> \n                                \n                                </Form.Row>\n                               <Form.Row>\n                               <Form.Group as={Col} md=\"4\" controlId=\"SystemStatusType\">\n                                    <Form.Label>System Status Type</Form.Label>\n                                    <InputGroup>\n                                           <Form.Control\n                                            type=\"text\"\n                                            value={this.props.SystemStatusTypeDescription}\n                                            onChange={this.props.handleChangeSystemStatusTypeDescription}\n                                            placeholder=\"Search System Status Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                               </Form.Row>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete Betting Registration\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.BettingNumber} onChange={this.props.BettingNumber} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default BettingRegistrationModal;","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass BettingTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchBettingType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Betting Type Name\",\n                selector: \"BETTING_TYPE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.BETTING_TYPE_NAME}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Betting Type\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default BettingTypeSearch","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\";\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport BettingRegistrationTable from './Tables/BettingRegistrationTable';\nimport BettingRegistrationModals from './Modals/BettingRegistrationModal';\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr';\nimport SubCountyTypeSearch from '../../SearchComponents/SubCountyTypeSearch/SubCountyTypeSearch';\nimport WardsSearch from '../../SearchComponents/WardsSearch/WardsSearch';\nimport FeeCategorySearch from '../../SearchComponents/FeeCategorySearch/FeeCategorySearch';\nimport FeesSearch from '../../SearchComponents/FeesSearch/FeesSearch';\nimport ClientRegistrationSearch from '../../SearchComponents/ClientRegistrationSearch/ClientRegistrationSearch';\nimport BettingTypeSearch from '../../SearchComponents/BettingTypeSearch/BettingTypeSearch';\nimport BusinessRegisterSearch from '../../SearchComponents/BusinessRegisterSearch/BusinessRegisterSearch';\nimport ModuleSearch from '../../SearchComponents/ModuleSearch/ModuleSearch';\nclass BettingRegistration extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            validated: false,\n            errors: {},\n            columns: [],\n            data: [],\n            filteredData: [],\n            value: '',\n            show: false,\n            showdelete: false,\n            REG_BETTING_ID: 0,\n            BETTING_NUMBER: 0,\n            REG_BUSINESS_ID: 0,\n            SET_BETTING_TYPE_ID: 0,\n            SET_SUBCOUNTY_ID: 0,\n            SET_WARD_ID: 0,\n            SET_REVENUE_FEE_ID: 0,\n            SET_REVENUE_FEE_CATEGORY_ID: 0,\n            CLIENT_ID: 0,\n            SYS_STATUS_ID: 0,\n            CREATEDBY: props.user.EMAIL,\n            MODIFIEDBY: props.user.EMAIL,\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            ClIENT_NAME: '',\n            FEECATEGORY_CODE: '',\n            FEE_NAME: '',\n            SUBCOUNTY_NAME: '',\n            WARD_NAME: '',\n            CLIENT_DOCUMENT_NUMBER: '',\n            CLIENT_POSTAL_ADDRESS: '',\n            CLIENT_MOBILE_NUMBER: '',\n            SET_MODULE_ID: 0,\n            MODULE_NAME: '',\n            BUSINESS_NAME: '',\n            BUILDING_NAME: '',\n            POSTAL_ADDRESS: '',\n            PLOTNUMBER: '',\n            STREET: '',\n            MOBILE_NUMBER: '',\n            EMAIL: '',\n            BETTING_TYPE_NAME: '',\n            InsertUpdate: '',\n            searchcolumns: [],\n            searchmoduledata: [],\n            searchdata: [],\n            opensearch: false,\n            searchFilteredData: [],\n            searchvalue: '',\n            openbusineeregistersearch: false,\n            searchfilteredBusinessRegisterData: [],\n            searchbusinessregistervalue: '',\n            openbettingtypesearch: false,\n            searchfilteredBettingTypeData: [],\n            searchbettingtypevalue: '',\n            opensubcountysearch: false,\n            searchFilteredSubCountyData: [],\n            searchsubcountyvalue: '',\n            openwardsearch: false,\n            searchFilteredWardData: [],\n            searchwardvalue: '',\n            openFeeCategorySearch: false,\n            searchFilteredFeeCategoryData: [],\n            searchfeecategoryvalue: '',\n            openfeesearch: false,\n            searchFilteredFeeData: [],\n            searchfeevalue: '',\n            openclientregistrationsearch: false,\n            searchFilteredClientRegistrationData: [],\n            searchclientregistrationvalue: '',\n            openmodulessearch: false,\n            searchFilteredModulesData: [],\n            searchmodulesvalue: '',\n\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n        this.handleShowSearch = () => {\n            this.setState({\n                opensearch: true\n            });\n        };\n        this.handleShowModulesSearch = () => {\n            this.setState({ openmodulessearch: true });\n        };\n        this.handleShowBusinessRegisterSearch = () => {\n            this.setState({ openbusineeregistersearch: true });\n        };\n        this.handleShowBettingTypeSearch = () => {\n            this.setState({ openbettingtypesearch: true });\n        };\n        this.handleShowSubCountySearch = () => {\n            this.setState({ opensubcountysearch: true });\n        };\n        this.handleShowWardSearch = () => {\n            this.setState({ openwardsearch: true });\n        };\n        this.handleShowFeeCategorySearch = () => {\n            this.setState({ openFeeCategorySearch: true });\n        };\n        this.handleShowFeesSearch = () => {\n            this.setState({ openfeesearch: true });\n        };\n        this.handleShowClientRegistrationSearch = () => {\n            this.setState({ openclientregistrationsearch: true });\n        };\n        this.handleHideSearch = () => {\n            this.setState({ opensearch: false });\n        };\n        this.handleHideModulesSearch = () => {\n            this.setState({ openmodulessearch: false });\n        };\n        this.handleHideBusinessRegisterSearch = () => {\n            this.setState({ openbusineeregistersearch: false });\n        };\n        this.handleHideBettingTypeSearch = () => {\n            this.setState({ openbettingtypesearch: false });\n        };\n        this.handleHideSubCountySearch = () => {\n            this.setState({ opensubcountysearch: false });\n        };\n        this.handleHideWardSearch = () => {\n            this.setState({ openwardsearch: false });\n        };\n        this.handleHideFeeCategorySearch = () => {\n            this.setState({ openFeeCategorySearch: false });\n        };\n        this.handleHideFeesSearch = () => {\n            this.setState({ openfeesearch: false });\n        };\n        this.handleHideClientRegistrationSearch = () => {\n            this.setState({ openclientregistrationsearch: false });\n        };\n        this.populateData();\n        this.populateSubCounty();\n        this.populateClientRegistration();\n        this.populateTypes();\n        this.populateBettingTypes();\n        this.populateBusinessRegister()\n        this.populateModules()\n        // this.populateFeeCategory();\n    }\n\n    populateData() {\n\n        const getdata = `\n        query {\n            BettingRegister {\n                REG_BETTING_ID\n                BETTING_NUMBER\n                REG_BUSINESS_ID\n                BUSINESS_REGISTER {\n                    BUSINESS_ID\n                    BUSINESS_NAME\n                    BUILDING_NAME\n                    POSTAL_ADDRESS\n                    PLOTNUMBER\n                    STREET\n                    MOBILE_NUMBER\n                    EMAIL\n                }\n                SET_BETTING_TYPE_ID\n                BETTING{\n                    BETTING_TYPE_ID\n                    BETTING_TYPE_NAME\n                }\n                SET_SUBCOUNTY_ID\n                SUB_COUNTY {\n                    SUBCOUNTY_ID\n                    SUBCOUNTY_NAME\n                }\n                SET_WARD_ID\n                WARD {\n                    WARD_ID\n                    WARD_NAME\n                }\n                SET_REVENUE_FEE_CATEGORY_ID\n                FEE_CATEGORY {\n                    FEECATEGORY_ID\n                    FEECATEGORY_NAME\n                    FEECATEGORY_CODE\n                }\n                SET_REVENUE_FEE_ID\n                FEE {\n                    FEE_ID\n                    FEE_NAME\n                }\n                CLIENT_ID\n                CLIENTID {\n                    CLIENT_ID\n                    CLIENT_NAME\n                    CLIENT_DOCUMENT_NUMBER\n                    POSTAL_ADDRESS\n                    MOBILE_NUMBER\n\n                }\n                SYS_STATUS_ID\n                SYSTEMSTATUS {\n                    SYS_STATUS_ID\n                    SYS_STATUS_NAME\n                }\n                CREATEDBY\n                MODIFIEDBY\n                CREATED_DATE\n                MODIFIED_DATE\n                SET_MODULE_ID\n                SET_MODULES\n                {\n                    MODULE_ID\n                    MODULE_NAME\n                }\n            }\n        }\n        `;\n\n        API.getData(getdata)\n            .then(({\n                data\n            }) => this.setState({\n                data: data.data.BettingRegister\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n    populateModules() {\n\n        const getdata = `\n            query {\n                Modules {\n                    MODULE_ID,\n                    MODULE_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchmodulesdata: data.data.Modules\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Business Type Data');\n                }\n            })\n    }\n    populateTypes() {\n        const getdata = `\n            query {\n                SystemStatusFilter(\n                    CATEGORY: \"SET\"\n                ) {\n                    SYS_STATUS_ID,\n                    SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({\n                data\n            }) => this.setState({\n                searchdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to System Status Type Load Data');\n                }\n            })\n    }\n    populateSubCounty() {\n\n        const getdata = `\n            query {\n                SubCounties {\n                    SUBCOUNTY_ID,\n                    SUBCOUNTY_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchsubcountydata: data.data.SubCounties\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Subcounty Data');\n                }\n            })\n    }\n    populateBusinessRegister() {\n\n        const getdata = `\n            query {\n                BusinessRegisters {\n                    BUSINESS_ID\n                    BUSINESS_NAME\n                    BUILDING_NAME\n                    POSTAL_ADDRESS\n                    PLOTNUMBER\n                    STREET\n                    MOBILE_NUMBER\n                    EMAIL\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchbusinessregisterdata: data.data.BusinessRegisters\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Business Register Data');\n                }\n            })\n    }\n    populateBettingTypes() {\n        debugger\n        const getdata = `\n            query {\n                BettingTypes {\n                    BETTING_TYPE_ID\n                    BETTING_TYPE_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchbettingtypedata: data.data.BettingTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Betting Type Data');\n                }\n            })\n    }\n\n    populateFeeCategory(value) {\n\n        const getdata = `\n            query {\n                FeeCategoryFilter(SET_MODULE_ID:${value}) \n                {\n                    FEECATEGORY_ID\n                    FEECATEGORY_NAME\n                    FEECATEGORY_CODE\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchfeecategorydata: data.data.FeeCategoryFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Business Type Data');\n                }\n            })\n    }\n    populateWard(value) {\n\n        const getdata = `\n        query {\n            WardFilter\n                (\n                    SET_SUBCOUNTY_ID:${value})\n                {\n                    WARD_ID\n                    WARD_NAME\n                }\n        }\n            \n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchwarddata: data.data.WardFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Ward Load Data');\n                }\n            })\n    }\n    populateFee(value) {\n\n        const getdata = `\n        query {\n            FeeFilter\n                (\n                    SET_DEPT_FEECATEGORY_ID:${value}\n                ) {\n                    FEE_ID\n                    FEE_NAME\n                }\n        }\n            \n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchfeedata: data.data.FeeFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Fee Load Data');\n                }\n            })\n    }\n    populateClientRegistration() {\n        const getdata = `\n            query {\n                Clients {\n                    CLIENT_ID\n                    CLIENT_NAME\n                    CLIENT_TYPE_ID\n                    CLIENT_DOCUMENT_NUMBER\n                    POSTAL_ADDRESS\n                    MOBILE_NUMBER\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchclientregistrationdata: data.data.Clients\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Client Data');\n                }\n            })\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const formadmin = event.currentTarget;\n        debugger;\n        if (formadmin.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n            const form = `\n        mutation{\n            addBettingRegister(\n                \n                BETTING_NUMBER:${this.state.BETTING_NUMBER}\n                REG_BUSINESS_ID:${this.state.REG_BUSINESS_ID}\n                SET_BETTING_TYPE_ID:${this.state.SET_BETTING_TYPE_ID}\n                SET_SUBCOUNTY_ID:${this.state.SET_SUBCOUNTY_ID}\n                SET_WARD_ID:${this.state.SET_WARD_ID}\n                CREATEDBY:\"${this.state.CREATEDBY}\"\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\"\n                CREATED_DATE:\"${this.state.CREATED_DATE}\"\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                SET_REVENUE_FEE_ID:${this.state.SET_REVENUE_FEE_ID}\n                SET_REVENUE_FEE_CATEGORY_ID:${this.state.SET_REVENUE_FEE_CATEGORY_ID}\n                CLIENT_ID:${this.state.CLIENT_ID}\n                SET_MODULE_ID:${this.state.SET_MODULE_ID}\n\n                ){\n                    REG_BETTING_ID\n            }\n        }\n        `;\n            console.log(form);\n            const formEdit = `\n        mutation{\n            updateBettingRegister(\n                REG_BETTING_ID:${this.state.REG_BETTING_ID},\n                BETTING_NUMBER:${this.state.BETTING_NUMBER}\n                REG_BUSINESS_ID:${this.state.REG_BUSINESS_ID}\n                SET_BETTING_TYPE_ID:${this.state.SET_BETTING_TYPE_ID}\n                SET_SUBCOUNTY_ID:${this.state.SET_SUBCOUNTY_ID}\n                SET_WARD_ID:${this.state.SET_WARD_ID}\n                CREATEDBY:\"${this.state.CREATEDBY}\"\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\"\n                CREATED_DATE:\"${this.state.CREATED_DATE}\"\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                SET_REVENUE_FEE_ID:${this.state.SET_REVENUE_FEE_ID}\n                SET_REVENUE_FEE_CATEGORY_ID:${this.state.SET_REVENUE_FEE_CATEGORY_ID}\n                CLIENT_ID:${this.state.CLIENT_ID}\n                SET_MODULE_ID:${this.state.SET_MODULE_ID}\n\n                ){\n                    REG_BETTING_ID\n            }\n        }\n        `;\n\n            if (this.state.InsertUpdate === 'Insert') {\n                API.create(form)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.success('Create Record', 'Record Created Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            } else {\n                API.update(formEdit)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.info('Update Record', 'Record Updated Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            }\n        }\n        this.setState({\n            validated: true\n        })\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteBettingRegister(\n                REG_BETTING_ID:${this.state.REG_BETTING_ID}\n                ){\n                    REG_BETTING_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n    handleCloseModulesSearch = (e) => {\n\n        this.setState({\n\n            SET_MODULE_ID: e.MODULE_ID,\n            MODULE_NAME: e.MODULE_NAME,\n            FEECATEGORY_CODE: '',\n            openmodulessearch: false,\n        });\n        this.populateFeeCategory(e.MODULE_ID);\n\n    };\n    handleCloseBusinessRegisterSearch = (e) => {\n\n        this.setState({\n            REG_BUSINESS_ID: e.BUSINESS_ID,\n            BUSINESS_NAME: e.BUSINESS_NAME,\n            BUILDING_NAME: e.BUILDING_NAME,\n            POSTAL_ADDRESS: e.POSTAL_ADDRESS,\n            PLOTNUMBER: e.PLOTNUMBER,\n            STREET: e.STREET,\n            MOBILE_NUMBER: e.MOBILE_NUMBER,\n            EMAIL: e.EMAIL,\n            openbusineeregistersearch: false,\n        });\n\n    };\n    handleCloseBettingTypeSearch = (e) => {\n\n        this.setState({\n            SET_BETTING_TYPE_ID: e.BETTING_TYPE_ID,\n            BETTING_TYPE_NAME: e.BETTING_TYPE_NAME,\n\n            openbettingtypesearch: false,\n        });\n\n    };\n    handleCloseSubCountySearch = (e) => {\n\n        this.setState({\n            SET_SUBCOUNTY_ID: e.SUBCOUNTY_ID,\n            SUBCOUNTY_NAME: e.SUBCOUNTY_NAME,\n            WARD_NAME: '',\n            opensubcountysearch: false,\n        });\n        this.populateWard(e.SUBCOUNTY_ID);\n    };\n    handleCloseWardSearch = (e) => {\n\n        this.setState({\n            SET_WARD_ID: e.WARD_ID,\n            WARD_NAME: e.WARD_NAME,\n            openwardsearch: false,\n        });\n    };\n    handleCloseFeeCategorySearch = (e) => {\n\n        this.setState({\n            SET_REVENUE_FEE_CATEGORY_ID: e.FEECATEGORY_ID,\n            FEECATEGORY_CODE: e.FEECATEGORY_CODE,\n            FEE_NAME: '',\n            openFeeCategorySearch: false,\n        });\n        this.populateFee(e.FEECATEGORY_ID);\n    };\n    handleCloseFeeSearch = (e) => {\n\n        this.setState({\n            SET_REVENUE_FEE_ID: e.FEE_ID,\n            FEE_NAME: e.FEE_NAME,\n            openfeesearch: false,\n        });\n    };\n    handleCloseClientRegistrationSearch = (e) => {\n        this.setState({\n            CLIENT_ID: e.CLIENT_ID,\n            CLIENT_NAME: e.CLIENT_NAME,\n            CLIENT_DOCUMENT_NUMBER: e.CLIENT_DOCUMENT_NUMBER,\n            CLIENT_POSTAL_ADDRESS: e.POSTAL_ADDRESS,\n            CLIENT_MOBILE_NUMBER: e.MOBILE_NUMBER,\n            openclientregistrationsearch: false,\n        });\n    };\n    handleCloseSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            opensearch: false,\n        });\n    };\n\n\n    handleEditData = (e) => {\n        this.setState({\n            REG_BETTING_ID: e.REG_BETTING_ID,\n            BETTING_NUMBER: e.BETTING_NUMBER,\n            REG_BUSINESS_ID: e.REG_BUSINESS_ID,\n            SET_BETTING_TYPE_ID: e.SET_BETTING_TYPE_ID,\n            SET_SUBCOUNTY_ID: e.SET_SUBCOUNTY_ID,\n            SET_WARD_ID: e.SET_WARD_ID,\n            SET_REVENUE_FEE_ID: e.SET_REVENUE_FEE_ID,\n            SET_REVENUE_FEE_CATEGORY_ID: e.SET_REVENUE_FEE_CATEGORY_ID,\n            CLIENT_ID: e.CLIENTID.CLIENT_ID,\n            CLIENT_NAME: e.CLIENTID.CLIENT_NAME,\n            CLIENT_DOCUMENT_NUMBER: e.CLIENTID.CLIENT_DOCUMENT_NUMBER,\n            CLIENT_POSTAL_ADDRESS: e.CLIENTID.POSTAL_ADDRESS,\n            CLIENT_MOBILE_NUMBER: e.CLIENTID.MOBILE_NUMBER,\n            FEECATEGORY_CODE: e.FEE_CATEGORY.FEECATEGORY_CODE,\n            FEE_NAME: e.FEE.FEE_NAME,\n            WARD_NAME: e.WARD.WARD_NAME,\n            SUBCOUNTY_NAME: e.SUB_COUNTY.SUBCOUNTY_NAME,\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\n            BUSINESS_NAME: e.BUSINESS_REGISTER.BUSINESS_NAME,\n            BUILDING_NAME: e.BUSINESS_REGISTER.BUILDING_NAME,\n            POSTAL_ADDRESS: e.BUSINESS_REGISTER.POSTAL_ADDRESS,\n            PLOTNUMBER: e.BUSINESS_REGISTER.PLOTNUMBER,\n            STREET: e.BUSINESS_REGISTER.STREET,\n            MOBILE_NUMBER: e.BUSINESS_REGISTER.MOBILE_NUMBER,\n            EMAIL: e.BUSINESS_REGISTER.EMAIL,\n            BETTING_TYPE_NAME: e.BETTING.BETTING_TYPE_NAME,\n            MODULE_NAME: e.SET_MODULES.MODULE_NAME,\n            SET_MODULE_ID: e.SET_MODULE_ID,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            REG_BETTING_ID: e.REG_BETTING_ID,\n            BETTING_NUMBER: e.BETTING_NUMBER,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            CLIENT_NAME: '',\n            FEECATEGORY_CODE: '',\n            FEE_NAME: '',\n            SUBCOUNTY_NAME: '',\n            WARD_NAME: '',\n            CLIENT_DOCUMENT_NUMBER: '',\n            CLIENT_POSTAL_ADDRESS: '',\n            CLIENT_MOBILE_NUMBER: '',\n            BUSINESS_NAME: '',\n            BUILDING_NAME: '',\n            POSTAL_ADDRESS: '',\n            PLOTNUMBER: '',\n            STREET: '',\n            MOBILE_NUMBER: '',\n            EMAIL: '',\n            BETTING_TYPE_NAME: '',\n            BETTING_NUMBER: 0,\n            MODULE_NAME: '',\n            validated: false,\n\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({\n            value\n        });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.BETTING_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENTID.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.BUSINESS_REGISTER.BUSINESS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SUB_COUNTY.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.WARD.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.BETTING_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENTID.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.BUSINESS_REGISTER.BUSINESS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SUB_COUNTY.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.WARD.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({\n                filteredData\n            })\n        }\n    }\n\n    handleSearchFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchdata\n        let filteredData = this.state.searchFilteredData\n        this.setState({\n            searchvalue: value\n        });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({\n                filteredData\n            })\n        }\n    }\n    handleSearchModulesFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchmodulesdata\n        let filteredModulesData = this.state.searchFilteredModulesData\n        this.setState({ searchmodulesvalue: value });\n\n        if (value.length) {\n            filteredModulesData = data.filter(item => {\n                let startsWithCondition =\n                    item.MODULE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.MODULE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredModulesData })\n        }\n    }\n    handleSearchBusinessRegisterFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchbusinessregisterdata\n        let filteredBusinessRegisterData = this.state.searchfilteredBusinessRegisterData\n        this.setState({ searchbusinessregistervalue: value });\n\n        if (value.length) {\n            filteredBusinessRegisterData = data.filter(item => {\n                let startsWithCondition =\n                    item.BUSINESS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.BUSINESS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredBusinessRegisterData })\n        }\n    }\n    handleSearchSubCountyFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchsubcountydata\n        let filteredSubCountyData = this.state.searchFilteredSubCountyData\n        this.setState({ searchsubcountyvalue: value });\n\n        if (value.length) {\n            filteredSubCountyData = data.filter(item => {\n                let startsWithCondition =\n                    item.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SUBCOUNTY_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredSubCountyData })\n        }\n    }\n    handleSearchBettingTypeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchbettingtypedata\n        let filteredBettingTypeData = this.state.searchfilteredBettingTypeData\n        this.setState({ searchbettingtypevalue: value });\n\n        if (value.length) {\n            filteredBettingTypeData = data.filter(item => {\n                let startsWithCondition =\n                    item.BETTING_TYPE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.BETTING_TYPE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredBettingTypeData })\n        }\n    }\n    handleSearchWardFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchwarddata\n        let filteredWardData = this.state.searchFilteredWardData\n        this.setState({ searchwardvalue: value });\n\n        if (value.length) {\n            filteredWardData = data.filter(item => {\n                let startsWithCondition =\n                    item.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.WARD_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredWardData })\n        }\n    }\n    handleSearchFeeCategoryFilter = (e) => {\n        debugger;\n        let value = e.target.value\n        let data = this.state.searchfeecategorydata\n        let filteredFeeCategoryData = this.state.searchFilteredFeeCategoryData\n        this.setState({ searchfeecategoryvalue: value });\n\n        if (value.length) {\n            filteredFeeCategoryData = data.filter(item => {\n                let startsWithCondition =\n                    item.FEECATEGORY_CODE.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.FEECATEGORY_CODE.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredFeeCategoryData })\n        }\n    }\n    handleSearchFeeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchfeedata\n        let filteredFeeData = this.state.searchFilteredFeeData\n        this.setState({ searchfeevalue: value });\n\n        if (value.length) {\n            filteredFeeData = data.filter(item => {\n                let startsWithCondition =\n                    item.FEE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.FEE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredFeeData })\n        }\n    }\n    handleSearchClientRegistrationFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchclientregistrationdata\n        let filteredClientRegistrationData = this.state.searchFilteredClientRegistrationData\n        this.setState({ searchclientregistrationvalue: value });\n\n        if (value.length) {\n            filteredClientRegistrationData = data.filter(item => {\n                let startsWithCondition =\n                    item.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.CLIENT_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredClientRegistrationData })\n        }\n    }\n    handleValidation() {\n\n\n        let errors = {};\n        let formIsValid = true;\n        this.setState({ errors: errors });\n        return formIsValid;\n    }\n    render() {\n        const { data, value, filteredData, searchdata, searchvalue, searchsubcountyvalue, searchsubcountydata, filteredSubCountyData, searchwardvalue,\n            searchwarddata, filteredWardData, searchfeevalue, searchfeedata, filteredFeeData, searchfeecategoryvalue, searchfeecategorydata, filteredFeeCategoryData\n            , searchclientregistrationvalue, searchclientregistrationdata, filteredClientRegistrationData,\n            searchbettingtypevalue, searchbettingtypedata, filteredBettingTypeData,\n            searchbusinessregistervalue, searchbusinessregisterdata, filteredBusinessRegisterData,\n            searchmodulesvalue, searchmodulesdata, filteredModulesData } = this.state\n        return (\n            <>\n                <Helmet><title>Betting and Lotteries Registration</title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"Betting and Lotteries Registration\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Betting and Lotteries Registration</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n                                    <ModuleSearch\n                                        handleSearchModule={this.handleCloseModulesSearch}\n                                        opensearch={this.state.openmodulessearch}\n                                        handleHideSearch={this.handleHideModulesSearch}\n                                        value={searchmodulesvalue}\n                                        data={searchmodulesdata}\n                                        handleFilter={this.handleSearchModulesFilter}\n                                        filteredData={filteredModulesData}\n                                    />\n                                    <BusinessRegisterSearch\n                                        handleSearchBusinessName={this.handleCloseBusinessRegisterSearch}\n                                        opensearch={this.state.openbusineeregistersearch}\n                                        handleHideSearch={this.handleHideBusinessRegisterSearch}\n                                        value={searchbusinessregistervalue}\n                                        data={searchbusinessregisterdata}\n                                        handleFilter={this.handleSearchBusinessRegisterFilter}\n                                        filteredData={filteredBusinessRegisterData}\n                                    />\n                                    <BettingTypeSearch\n                                        handleSearchBettingType={this.handleCloseBettingTypeSearch}\n                                        opensearch={this.state.openbettingtypesearch}\n                                        handleHideSearch={this.handleHideBettingTypeSearch}\n                                        value={searchbettingtypevalue}\n                                        data={searchbettingtypedata}\n                                        handleFilter={this.handleSearchBettingTypeFilter}\n                                        filteredData={filteredBettingTypeData}\n                                    />\n                                    <SubCountyTypeSearch\n                                        handleSearchSubCounty={this.handleCloseSubCountySearch}\n                                        opensearch={this.state.opensubcountysearch}\n                                        handleHideSearch={this.handleHideSubCountySearch}\n                                        value={searchsubcountyvalue}\n                                        data={searchsubcountydata}\n                                        handleFilter={this.handleSearchSubCountyFilter}\n                                        filteredData={filteredSubCountyData}\n                                    />\n                                    <WardsSearch\n                                        handleSearchWards={this.handleCloseWardSearch}\n                                        opensearch={this.state.openwardsearch}\n                                        handleHideSearch={this.handleHideWardSearch}\n                                        value={searchwardvalue}\n                                        data={searchwarddata}\n                                        handleFilter={this.handleSearchWardFilter}\n                                        filteredData={filteredWardData}\n                                    />\n                                    <FeesSearch\n                                        handleSearchFees={this.handleCloseFeeSearch}\n                                        opensearch={this.state.openfeesearch}\n                                        handleHideSearch={this.handleHideFeesSearch}\n                                        value={searchfeevalue}\n                                        data={searchfeedata}\n                                        handleFilter={this.handleSearchFeeFilter}\n                                        filteredData={filteredFeeData}\n                                    />\n                                    <FeeCategorySearch\n                                        handleSearchFEECATEGORY={this.handleCloseFeeCategorySearch}\n                                        opensearch={this.state.openFeeCategorySearch}\n                                        handleHideSearch={this.handleHideFeeCategorySearch}\n                                        value={searchfeecategoryvalue}\n                                        data={searchfeecategorydata}\n                                        handleFilter={this.handleSearchFeeCategoryFilter}\n                                        filteredData={filteredFeeCategoryData}\n                                    />\n                                    <ClientRegistrationSearch\n                                        handleSearchClientRegistration={this.handleCloseClientRegistrationSearch}\n                                        opensearch={this.state.openclientregistrationsearch}\n                                        handleHideSearch={this.handleHideClientRegistrationSearch}\n                                        value={searchclientregistrationvalue}\n                                        data={searchclientregistrationdata}\n                                        handleFilter={this.handleSearchClientRegistrationFilter}\n                                        filteredData={filteredClientRegistrationData}\n                                    />\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseSearch}\n                                        opensearch={this.state.opensearch}\n                                        handleHideSearch={this.handleHideSearch}\n                                        value={searchvalue}\n                                        data={searchdata}\n                                        handleFilter={this.handleSearchFilter}\n                                        filteredData={filteredData}\n                                    />\n\n                                    <BettingRegistrationTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <BettingRegistrationModals\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowBusinessRegister={this.handleShowBusinessRegisterSearch}\n                                        handleShowSearch={this.handleShowSearch}\n                                        handleShowModules={this.handleShowModulesSearch}\n                                        handleShowBettingType={this.handleShowBettingTypeSearch}\n                                        handleShowSubCounty={this.handleShowSubCountySearch}\n                                        handleShowWard={this.handleShowWardSearch}\n                                        handleShowFees={this.handleShowFeesSearch}\n                                        handleShowFeeCategorySearch={this.handleShowFeeCategorySearch}\n                                        handleShowClientRegistrationSearch={this.handleShowClientRegistrationSearch}\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n                                        handleChangeSystemStatusTypeDescription={e => this.setState({ SYSTEMSTATUSTYPEDESCRIPTION: e.target.value })}\n                                        ClientDocumentNumber={this.state.CLIENT_DOCUMENT_NUMBER}\n                                        changeClientDocumentNumber={e => this.setState({ CLIENT_DOCUMENT_NUMBER: e.target.value })}\n                                        ClientPostalAddress={this.state.CLIENT_POSTAL_ADDRESS}\n                                        changeClientPostalAddress={e => this.setState({ CLIENT_POSTAL_ADDRESS: e.target.value })}\n                                        ClientMobileNumber={this.state.CLIENT_MOBILE_NUMBER}\n                                        changeClientMobileNumber={e => this.setState({ CLIENT_MOBILE_NUMBER: e.target.value })}\n                                        SubCountyName={this.state.SUBCOUNTY_NAME}\n                                        handleChangeSubCountyName={e => this.setState({ SUBCOUNTY_NAME: e.target.value })}\n                                        WardName={this.state.WARD_NAME}\n                                        handleChangeWardName={e => this.setState({ WARD_NAME: e.target.value })}\n                                        FeeName={this.state.FEE_NAME}\n                                        handleChangeFeeName={e => this.setState({ FEE_NAME: e.target.value })}\n                                        ClientName={this.state.CLIENT_NAME}\n                                        handleChangeClientName={e => this.setState({ CLIENT_NAME: e.target.value })}\n                                        FeeCategoryName={this.state.FEECATEGORY_CODE}\n                                        handleChangeFeeCategoryName={e => this.setState({ FEECATEGORY_CODE: e.target.value })}\n                                        BusinessName={this.state.BUSINESS_NAME}\n                                        handleChangeBusinessName={e => this.setState({ BUSINESS_NAME: e.target.value })}\n                                        BuildingName={this.state.BUILDING_NAME}\n                                        handleChangeBuildingName={e => this.setState({ BUILDING_NAME: e.target.value })}\n                                        PostalAddress={this.state.POSTAL_ADDRESS}\n                                        handleChangePostalAddress={e => this.setState({ POSTAL_ADDRESS: e.target.value })}\n                                        PlotNumber={this.state.PLOTNUMBER}\n                                        handleChangePlotNumber={e => this.setState({ PLOTNUMBER: e.target.value })}\n                                        Street={this.state.STREET}\n                                        handleChangeStreet={e => this.setState({ STREET: e.target.value })}\n                                        MobileNumber={this.state.MOBILE_NUMBER}\n                                        handleChangeMobileNumber={e => this.setState({ MOBILE_NUMBER: e.target.value })}\n                                        Email={this.state.EMAIL}\n                                        handleChangeEmail={e => this.setState({ EMAIL: e.target.value })}\n                                        BettingTypeName={this.state.BETTING_TYPE_NAME}\n                                        handleChangeBettingTypeName={e => this.setState({ BETTING_TYPE_NAME: e.target.value })}\n                                        BettingNumber={this.state.BETTING_NUMBER}\n                                        changeBettingNumber={e => this.setState({ BETTING_NUMBER: e.target.value })}\n                                        ModuleName={this.state.MODULE_NAME}\n                                        handleChangeModuleName={e => this.setState({ MODULE_NAME: e.target.value })}\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n\n                                    />\n\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(BettingRegistration));"],"sourceRoot":""}