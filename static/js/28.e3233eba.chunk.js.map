{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","utility/dateAndTime.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/Setups/BettingTypes/Tables/BettingTypesTable.js","views/pages/Setups/BettingTypes/Modals/BettingTypesModal.js","views/pages/Setups/BettingTypes/BettingTypes.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","ShowDate","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","BettingTypesTable","Button","handleEdit","handleDelete","BETTING_TYPE_NAME","SYSTEMSTATUS","subHeader","responsive","subHeaderComponent","BettingTypesModal","Modal","handleHide","id","InsertUpdate","Form","onSubmit","handleSubmit","autoComplete","Group","controlId","Label","Control","placeholder","BettingTypeName","changeEventandValidation","ErrorDescription","SystemStatusTypeID","hidden","SystemStatusTypeDescription","aria-describedby","readOnly","variant","handleShowSearch","ErrorStatus","Check","label","checked","Inspection","Footer","isEnabled","showdelete","handleHideDelete","changeDescription","BettingTypes","context","event","preventDefault","handleValidation","form","state","SYS_STATUS_ID","INSPECTION","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","formEdit","BETTING_TYPE_ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","formDelete","warning","handleCloseSearch","setState","SYSTEMSTATUSTYPEDESCRIPTION","Dropdownvalidation","handleEditData","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","handleSearchFilter","searchdata","searchFilteredData","searchvalue","errors","showStatus","EMAIL","searchcolumns","populateStatus","formIsValid","SystemStatusFilter","Helmet","Fragment","Row","Col","sm","Card","CardHeader","CardTitle","CardBody","constructor","connect"],"mappings":"uJAwCIA,E,0BAnCEC,EAAU,IAAIC,IAAQ,I,EACL,IAAIC,IAAnBC,E,EAAAA,IAAKC,E,EAAAA,MAyBb,SAASC,EAAeC,GAMtB,OAJIA,GAzBN,SAA+BC,GAC7B,IAAIC,EAAS,GAETD,EAAYE,OAAS,GACvBF,EAAYG,SAAQ,SAAAC,GACdA,EAAWC,YAAYH,OAAS,GAClCE,EAAWC,YAAYF,SAAQ,SAAAG,GACzBA,EAAWC,SACTD,EAAWE,iBAAmBP,EAAOQ,KAAKb,EAAI,OAAQU,EAAWI,KAAKC,UAAWL,EAAWE,kBAC5FF,EAAWM,mBAAqBX,EAAOQ,KAAKb,EAAI,SAAUU,EAAWI,KAAKC,UAAWL,EAAWM,oBAChGN,EAAWO,mBAAqBZ,EAAOQ,KAAKb,EAAI,SAAUU,EAAWI,KAAKC,UAAWL,EAAWO,oBAChGP,EAAWQ,mBAAqBb,EAAOQ,KAAKb,EAAI,SAAUU,EAAWI,KAAKC,UAAWL,EAAWQ,oBAChGR,EAAWS,kBAAoBd,EAAOQ,KAAKb,EAAI,QAASU,EAAWI,KAAKC,UAAWL,EAAWS,mBAC9FT,EAAWU,oBAAsBf,EAAOQ,KAAKb,EAAI,UAAWU,EAAWI,KAAKC,UAAWL,EAAWU,4BAa9GC,CAAsBlB,EAAKC,aAGtBH,EAKUL,KACjBA,EAAkB0B,IAAMC,WAAWC,KAAKrB,OAGtCN,EAAQ4B,OAAOvB,EAAeN,IAInBC,QC/CA6B,gBAAiB7B,I,qKCQ1B8B,E,uKAEF,OACE,yBAAKC,UAAU,sBACb,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,UACZC,KAAKC,MAAMC,gBACV,wBAAIH,UAAU,wCACXC,KAAKC,MAAMC,iBAGd,GAEF,yBAAKH,UAAU,8DACb,kBAAC,IAAD,CAAYI,IAAI,MACd,kBAAC,IAAD,CAAgBA,IAAI,MAClB,kBAAC,IAAD,CAASC,GAAG,KACV,kBAAC,IAAD,CAAML,UAAU,YAAYM,KAAM,OAGtC,kBAAC,IAAD,CAAgBF,IAAI,KAAKJ,UAAU,gBAChCC,KAAKC,MAAMK,kBAEbN,KAAKC,MAAMM,kBACV,kBAAC,IAAD,CAAgBJ,IAAI,KAAKJ,UAAU,gBAChCC,KAAKC,MAAMM,mBAGd,GAEDP,KAAKC,MAAMO,kBACV,kBAAC,IAAD,CAAgBL,IAAI,KAAKJ,UAAU,gBAChCC,KAAKC,MAAMO,mBAGd,GAEF,kBAAC,IAAD,CAAgBL,IAAI,KAAKM,QAAM,GAC5BT,KAAKC,MAAMS,uBAOxB,yBAAKX,UAAU,wEACb,yBAAKA,UAAU,4BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEY,MAAM,UACNN,KAAK,KACLN,UAAU,sCAEV,kBAAC,IAAD,CACEM,KAAM,GACNO,MAAO,CACLC,KAAM,MAIZ,kBAAC,IAAD,CAAcV,IAAI,KAAKW,OAAK,GAC1B,kBAAC,IAAD,CAAcX,IAAI,MAChB,kBAAC,IAAD,CAASJ,UAAU,kBAAkBK,GAAG,SAAxC,SAIF,kBAAC,IAAD,CAAcD,IAAI,MAChB,kBAAC,IAAD,CAASJ,UAAU,kBAAkBK,GAAG,gBAAxC,UAIF,kBAAC,IAAD,CAAcD,IAAI,MAChB,kBAAC,IAAD,CAASJ,UAAU,kBAAkBK,GAAG,aAAxC,sB,GAzEQW,IAAMC,WAqFjBlB,O,iCC/Ff,wDA0BemB,IAlBW,SAAAhB,GACxB,OACE,yBAAKF,UAAU,kDACb,yBAAKA,UAAU,WACf,kBAAC,IAAD,CAAKmB,EAAE,SAASC,EAAGlB,EAAMmB,KAAMC,aAAW,IACpC,SAAAC,GAAO,OAAI,kBAAC,IAAOC,OAAR,CAAeC,UAAWF,EAASvB,UAAU,sCAAsCY,MAAM,OAAOc,QAASxB,EAAMyB,YAA/G,eAGjB,yBAAK3B,UAAU,wCACb,kBAAC,IAAD,CAAO4B,MAAO1B,EAAM0B,MAAOC,SAAU,SAAAC,GAAC,OAAI5B,EAAM6B,aAAaD,MAC7D,yBAAK9B,UAAU,yBACb,kBAAC,IAAD,CAAQM,KAAK,Y,iCCnBhB,SAAS0B,IAEd,IAAIC,EAAQ,IAAIC,KACZC,EAAKC,OAAOH,EAAMI,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOH,EAAMO,WAAa,GAAGF,SAAS,EAAG,KAGlD,OAFWL,EAAMQ,cAEH,IAAMF,EAAK,IAAMJ,EAPjC,mC,2ICOMO,E,4MAEFC,gBAAkB,CACdC,QAAS,CACL,CACIC,KAAM,SACNC,KAAM,SAACC,GAAD,OACF,oCACI,kBAAC,IAAOvB,OAAR,CAAexB,UAAU,gCAAgCM,KAAK,KAAKM,MAAM,OACrEc,QAAS,kBAAM,EAAKxB,MAAM8C,6BAA6BD,KAC1D,kBAAC,IAAD,CAAQzC,KAAM,SAK3B,CACIuC,KAAM,cACNI,SAAU,kBACVC,UAAU,EACVJ,KAAM,SAAAC,GAAG,OAAI,uBAAG/C,UAAU,QAAQ+C,EAAII,qB,uDAKxC,IAAD,OAEL,OACI,oCAEI,kBAAC,IAAD,CACIC,KAAMnD,KAAKC,MAAMmD,WACjBC,OAAQrD,KAAKC,MAAMqD,kBAGnB,kBAAC,IAAMC,OAAP,CAAcxD,UAAU,UAAUyD,aAAW,GACzC,kBAAC,IAAMC,MAAP,KACI,kBAAC,IAAD,MADJ,gCAIJ,kBAAC,IAAMC,KAAP,KACI,yBAAK3D,UAAU,wCACX,kBAAC,IAAD,CAAO4B,MAAO3B,KAAKC,MAAM0B,MAAOC,SAAU,SAAAC,GAAC,OAAI,EAAK5B,MAAM6B,aAAaD,MACvE,yBAAK9B,UAAU,yBACX,kBAAC,IAAD,CAAQM,KAAK,SAGrB,kBAAC,IAAD,CACIN,UAAU,mBACV4D,KAAM3D,KAAKC,MAAM0B,MAAMlD,OAASuB,KAAKC,MAAM2D,aAAe5D,KAAKC,MAAM0D,KACrEhB,QAAS3C,KAAK0C,gBAAgBC,QAC9BkB,UAAQ,EACRC,YAAU,EACVC,SAAO,W,GApDEhD,IAAMC,WAgE5ByB,O,uDCxEf,oEAeIuB,EAAajD,IAAMkD,YAAW,SAAUC,EAAMC,GAChD,IAAIC,EAAWF,EAAKE,SAChB/D,EAAO6D,EAAK7D,KACZN,EAAYmE,EAAKnE,UACjBsE,EAAUH,EAAKI,GACftD,OAAwB,IAAZqD,EAAqB,MAAQA,EACzCpE,EAAQsE,YAA8BL,EAAM,CAAC,WAAY,OAAQ,YAAa,OAGlF,OADAE,EAAWI,YAAmBJ,EAAU,eACpBrD,IAAM0D,cAAczD,EAAW0D,YAAS,CAC1DP,IAAKA,GACJlE,EAAO,CACRF,UAAW4E,IAAW5E,EAAWqE,EAAU/D,GAAQ+D,EAAW,IAAM/D,SAGpEuE,EAAmBC,YAAmB,sBACtCC,EAAoBD,YAAmB,uBACvCE,EAAiBF,YAAmB,mBAAoB,CAC1D7D,UAAW,SAebgD,EAAWgB,YAAc,aACzBhB,EAAWiB,KAAOF,EAClBf,EAAWkB,MARW,SAAyBjF,GAC7C,OAAoBc,IAAM0D,cAAcM,EAAgB,KAAmBhE,IAAM0D,cAAc,QAASC,YAAS,CAC/GS,KAAM,SACLlF,MAML+D,EAAWoB,SAfc,SAA4BnF,GACnD,OAAoBc,IAAM0D,cAAcM,EAAgB,KAAmBhE,IAAM0D,cAAc,QAASC,YAAS,CAC/GS,KAAM,YACLlF,MAaL+D,EAAWqB,OAAST,EACpBZ,EAAWsB,QAAUR,EACNd,O,oPCuBAuB,E,4MArEX7C,gBAAkB,CACdC,QAAS,CACL,CACIC,KAAM,SACNC,KAAM,SAACC,GAAD,OACF,oCACI,kBAAC,IAAD,CAAK5B,EAAE,SAASC,EAAG,EAAKlB,MAAMmB,KAAMC,aAAW,IACzC,SAAAC,GAAO,OACL,kBAACkE,EAAA,EAAOjE,OAAR,CAAexB,UAAU,gCAAgCM,KAAK,KAAKM,MAAM,OACrEa,UAAWF,EACXG,QAAS,kBAAM,EAAKxB,MAAMwF,WAAW3C,KAErC,kBAAC,IAAD,CAAMzC,KAAM,SAKxB,kBAAC,IAAD,CAAKa,EAAE,SAASC,EAAG,EAAKlB,MAAMmB,KAAMC,aAAW,IACzC,SAAAC,GAAO,OACL,kBAACkE,EAAA,EAAOjE,OAAR,CAAexB,UAAU,gCAAgCM,KAAK,KAAKM,MAAM,OACrEa,UAAWF,EACXG,QAAS,kBAAM,EAAKxB,MAAMyF,aAAa5C,KAC1C,kBAAC,IAAD,CAAQzC,KAAM,YAOnC,CACIuC,KAAM,oBACNI,SAAU,oBACVC,UAAU,EACVJ,KAAM,SAAAC,GAAG,OAAI,uBAAG/C,UAAU,QAAQ+C,EAAI6C,qBAE1C,CACI/C,KAAM,SACNI,SAAU,kBACVC,UAAU,EACVJ,KAAM,SAAAC,GAAG,OAAI,uBAAG/C,UAAU,QAAQ+C,EAAI8C,aAAa1C,qB,uDAO3D,OACI,oCACI,kBAAC,IAAD,CACInD,UAAU,mBACV4D,KAAM3D,KAAKC,MAAM0B,MAAMlD,OAASuB,KAAKC,MAAM2D,aAAe5D,KAAKC,MAAM0D,KACrEhB,QAAS3C,KAAK0C,gBAAgBC,QAC9BkB,UAAQ,EACRC,YAAU,EACV+B,WAAS,EACT9B,SAAO,EACP+B,YAAU,EACVC,mBACI,kBAAC9E,EAAA,EAAD,CAAmBG,KAAMpB,KAAKC,MAAMmB,KAAMO,MAAO3B,KAAKC,MAAM0B,MAAOD,WAAY1B,KAAKC,MAAMyB,WAAYI,aAAc9B,KAAKC,MAAM6B,sB,GA5DvHf,IAAMC,W,sDC4GvBgF,E,uKA3GP,OACI,6BACI,kBAACC,EAAA,EAAD,CACI9C,KAAMnD,KAAKC,MAAMkD,KACjBE,OAAQrD,KAAKC,MAAMiG,YAEnB,kBAACD,EAAA,EAAM1C,OAAP,CAAcC,aAAW,GACrB,kBAACyC,EAAA,EAAMxC,MAAP,CAAa0C,GAAG,aACXnG,KAAKC,MAAMmG,aADhB,kBAIJ,kBAACC,EAAA,EAAD,CAAMC,SAAUtG,KAAKC,MAAMsG,aAAcC,aAAa,OAClD,kBAACP,EAAA,EAAMvC,KAAP,KAEI,kBAAC2C,EAAA,EAAKI,MAAN,CAAYC,UAAU,mBAClB,kBAACL,EAAA,EAAKM,MAAN,0BACA,kBAACN,EAAA,EAAKO,QAAN,CAAczB,KAAK,OAAO0B,YAAY,0BAClClF,MAAO3B,KAAKC,MAAM6G,gBAClBlF,SAAU5B,KAAKC,MAAM8G,yBACrBnE,KAAK,oBAET,yBAAK7C,UAAU,4BACVC,KAAKC,MAAM+G,mBAIpB,kBAACX,EAAA,EAAKI,MAAN,CAAYC,UAAU,oBAClB,kBAACL,EAAA,EAAKM,MAAN,2BACA,kBAAC3C,EAAA,EAAD,KACI,kBAACqC,EAAA,EAAKO,QAAN,CAAcjF,MAAO3B,KAAKC,MAAMgH,mBAC5BrF,SAAU5B,KAAKC,MAAM8G,yBAA0BG,QAAM,EAACtE,KAAK,aAC/D,kBAACyD,EAAA,EAAKO,QAAN,CACIzB,KAAK,OACLxD,MAAO3B,KAAKC,MAAMkH,4BAClBN,YAAY,4BACZO,mBAAiB,oBACjBxF,SAAU5B,KAAKC,MAAM8G,yBACrBM,UAAQ,EACRzE,KAAK,WAET,kBAACoB,EAAA,EAAWsB,QAAZ,KACI,kBAAC,IAAD,CAAQgC,QAAQ,OAAOjH,KAAK,KAAKoB,QAASzB,KAAKC,MAAMsH,kBACjD,kBAAC,IAAD,SAIZ,yBAAKxH,UAAU,4BACVC,KAAKC,MAAMuH,cAGpB,kBAACnB,EAAA,EAAKI,MAAN,CAAaN,GAAG,mBAAmBO,UAAU,cAEvC,kBAACL,EAAA,EAAKM,MAAN,mBACA,kBAACN,EAAA,EAAKoB,MAAN,CACItC,KAAK,SACLgB,GAAG,gBACHuB,MAAM,GACN9E,KAAK,aACL+E,QAAmC,IAA1B3H,KAAKC,MAAM2H,WACpBhG,SAAU5B,KAAKC,MAAM8G,6BAKnC,kBAACd,EAAA,EAAM4B,OAAP,KACI,kBAAC,IAAD,CAAQP,QAAQ,UAAU7F,QAASzB,KAAKC,MAAMiG,YAA9C,UAGA,kBAAC,IAAD,CAAQoB,QAAQ,UAAUnC,KAAK,SAAS3D,SAAUxB,KAAKC,MAAM6H,WACxD9H,KAAKC,MAAMmG,iBAM5B,kBAACH,EAAA,EAAD,CACI9C,KAAMnD,KAAKC,MAAM8H,WACjB1E,OAAQrD,KAAKC,MAAM+H,kBAEnB,kBAAC/B,EAAA,EAAM1C,OAAP,CAAcC,aAAW,GACrB,kBAACyC,EAAA,EAAMxC,MAAP,CAAa0C,GAAG,aAAhB,wBAIJ,kBAACE,EAAA,EAAD,CAAMC,SAAUtG,KAAKC,MAAMyF,aAAcc,aAAa,OAClD,kBAACP,EAAA,EAAMvC,KAAP,KACI,kBAAC2C,EAAA,EAAKI,MAAN,CAAYC,UAAU,eAClB,4EACA,kBAACL,EAAA,EAAKO,QAAN,CAAczB,KAAK,OAAO0B,YAAY,sBAAsBlF,MAAO3B,KAAKC,MAAM6G,gBAAiBlF,SAAU5B,KAAKC,MAAMgI,kBAAmBZ,UAAQ,MAIvJ,kBAACpB,EAAA,EAAM4B,OAAP,KACI,kBAAC,IAAD,CAAQP,QAAQ,UAAU7F,QAASzB,KAAKC,MAAM+H,kBAA9C,UAGA,kBAAC,IAAD,CAAQV,QAAQ,UAAUnC,KAAK,UAA/B,sB,GAlGIpE,IAAMC,W,kCCOhCkH,E,kDACF,WAAYjI,EAAOkI,GAAU,IAAD,uBACxB,cAAMlI,EAAOkI,IA0IjB5B,aAAe,SAAC6B,GAEZ,GADAA,EAAMC,iBACF,EAAKC,mBAAoB,CACzB,IAAMC,EAAI,+FAGe,EAAKC,MAAM7C,kBAH1B,6CAIU,EAAK6C,MAAMC,cAJrB,yCAKO,EAAKD,MAAME,WALlB,yCAMO,EAAKF,MAAMG,UANlB,2CAOQ,EAAKH,MAAMI,WAPnB,6CAQU,EAAKJ,MAAMK,aARrB,8CASW,EAAKL,MAAMM,cATtB,kGAgBJC,EAAQ,+FAGQ,EAAKP,MAAMQ,gBAHnB,iDAIW,EAAKR,MAAM7C,kBAJtB,0CAKG,EAAK6C,MAAME,WALd,4CAMM,EAAKF,MAAMC,cANjB,yCAOG,EAAKD,MAAMG,UAPd,2CAQI,EAAKH,MAAMI,WARf,6CASM,EAAKJ,MAAMK,aATjB,8CAUO,EAAKL,MAAMM,cAVlB,kGAiBkB,WAA5B,EAAKN,MAAMpC,aACX6C,IAAWV,GACNW,MAAK,WACF,EAAKC,YACL,EAAKjD,aACL,EAAKkD,eACLC,SAAOC,QAAQ,gBAAiB,kCACjCC,OAAM,SAAAC,IACDA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,0BAI/CP,IAAWF,GACNG,MAAK,WACF,EAAKC,YACL,EAAKjD,aACL,EAAKkD,eACLC,SAAOM,KAAK,gBAAiB,kCAC9BJ,OAAM,SAAAC,IACDA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,4BApM/B,EA2M5B9D,aAAe,SAAC0C,GACZA,EAAMC,iBAEN,IAAMuB,EAAU,+FAGU,EAAKpB,MAAMQ,gBAHrB,iGAUhBC,IAAWW,GACNV,MAAK,WACF,EAAKlB,mBACL,EAAKoB,eACLC,SAAOQ,QAAQ,gBAAiB,kCACjCN,OAAM,SAAAC,IACDA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,2BA/NvB,EAqO5BM,kBAAoB,SAACjI,GAEjB,EAAKkI,SAAS,CACVtB,cAAe5G,EAAE4G,cACjBuB,4BAA6BnI,EAAEqB,gBAC/BE,YAAY,IAGhB,EAAK6G,mBAAqB,EAC1B,EAAK3B,oBA9OmB,EAkP5B4B,eAAiB,SAACrI,GACd,EAAKkI,SAAS,CACVf,gBAAiBnH,EAAEmH,gBACnBN,WAAY7G,EAAE6G,WACd/C,kBAAmB9D,EAAE8D,kBACrB8C,cAAe5G,EAAE4G,cACjBuB,4BAA6BnI,EAAE+D,aAAa1C,gBAC5CC,MAAM,EACNiD,aAAc,YA1PM,EA8P5B+D,iBAAmB,SAACtI,GAChB,EAAKkI,SAAS,CACVf,gBAAiBnH,EAAEmH,gBACnBrD,kBAAmB9D,EAAE8D,kBACrBoC,YAAY,EACZ3B,aAAc,YAnQM,EAgR5BtE,aAAe,SAACD,GACZ,IAAIF,EAAQE,EAAEuI,OAAOzI,MACjBgC,EAAO,EAAK6E,MAAM7E,KAClBC,EAAe,EAAK4E,MAAM5E,aAC9B,EAAKmG,SAAS,CAAEpI,UAEZA,EAAMlD,SACNmF,EAAeD,EAAK0G,QAAO,SAAAC,GACvB,IAAIC,EACAD,EAAK1E,aAAa1C,gBAAgBsH,WAAWC,cAAcC,WAAW/I,EAAM8I,gBAC5EH,EAAK3E,kBAAkB6E,WAAWC,cAAcC,WAAW/I,EAAM8I,eAEjEE,EACAL,EAAK1E,aAAa1C,gBAAgBsH,WAAWC,cAAcG,SAASjJ,EAAM8I,gBAC1EH,EAAK3E,kBAAkB6E,WAAWC,cAAcG,SAASjJ,EAAM8I,eAEnE,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKZ,SAAS,CAAEnG,mBAtSI,EAyS5BiH,mBAAqB,SAAChJ,GAClB,IAAIF,EAAQE,EAAEuI,OAAOzI,MACjBgC,EAAO,EAAK6E,MAAMsC,WAClBlH,EAAe,EAAK4E,MAAMuC,mBAC9B,EAAKhB,SAAS,CAAEiB,YAAarJ,IAEzBA,EAAMlD,SACNmF,EAAeD,EAAK0G,QAAO,SAAAC,GACvB,IAAIC,EACAD,EAAKpH,gBAAgBsH,WAAWC,cAAcC,WAAW/I,EAAM8I,eAE/DE,EACAL,EAAKpH,gBAAgBsH,WAAWC,cAAcG,SAASjJ,EAAM8I,eAEjE,OAAIF,KAEQA,GAAuBI,EACxBA,EACG,SAElB,EAAKZ,SAAS,CAAEnG,mBA7TI,EAgU5BmD,yBAA2B,SAAClF,GAGkB,IAAD,EAQL,EAMJ,EASE,EAvBZ,oBAAlBA,EAAEuI,OAAOxH,MACT,EAAKmH,UAAL,mBACKlI,EAAEuI,OAAOxH,KAAOf,EAAEuI,OAAOzI,OAD9B,kCAEuBE,EAAEuI,OAAOzI,OAFhC,IAOkB,eAAlBE,EAAEuI,OAAOxH,MACT,EAAKmH,UAAL,mBACKlI,EAAEuI,OAAOxH,MAA4B,IAArBf,EAAEuI,OAAOzC,QAAmB,EAAI,GADrD,4BAEqC,IAArB9F,EAAEuI,OAAOzC,QAAmB,EAAI,GAFhD,IAKkB,WAAlB9F,EAAEuI,OAAOxH,MACT,EAAKmH,UAAL,mBACKlI,EAAEuI,OAAOxH,KAAOf,EAAEuI,OAAOzI,OAD9B,4CAEiCE,EAAEuI,OAAOzI,OAF1C,IAQkB,aAAlBE,EAAEuI,OAAOxH,MACT,EAAKmH,UAAL,mBACKlI,EAAEuI,OAAOxH,KAAOf,EAAEuI,OAAOzI,OAD9B,8BAEmBE,EAAEuI,OAAOzI,OAF5B,IAUJ,EAAK2G,oBArWmB,OAGxB,EAAKE,MAAQ,CACTyC,OAAQ,GACRtI,QAAS,GACTgB,KAAM,GACNC,aAAc,GACdjC,MAAO,GACPwB,MAAM,EACN+H,YAAY,EACZnD,YAAY,EAEZiB,gBAAiB,EACjBrD,kBAAmB,GACnB8C,cAAe,EACfE,UAAU1I,EAAM3B,KAAK6M,MACrBvC,WAAW3I,EAAM3B,KAAK6M,MACtBtC,aAAc5G,MACd6G,cAAe7G,MACfyG,WAAW,EACXtC,aAAc,GAEdhD,YAAY,EACZ4G,4BAA6B,GAC7BoB,cAAe,GACfN,WAAY,GACZC,mBAAoB,GACpBC,YAAa,IAGjB,EAAKtJ,WAAa,WACd,EAAKqI,SAAS,CACV5G,MAAM,EACNiD,aAAc,WAElB,EAAK+C,aAGT,EAAKjD,WAAa,WACd,EAAK6D,SAAS,CACV5G,MAAM,KAId,EAAK6E,iBAAmB,WACpB,EAAK+B,SAAS,CACVhC,YAAY,KAGpB,EAAKR,iBAAmB,WACpB,EAAKwC,SAAS,CAAE3G,YAAY,KAGhC,EAAKE,iBAAmB,WACpB,EAAKyG,SAAS,CAAE3G,YAAY,KAGhC,EAAKgG,eACL,EAAKiC,iBA3DmB,E,+DAgExB,IAAIJ,EAAS,GACTK,GAAc,EAmBlB,OAjBKtL,KAAKwI,MAAM7C,oBACZ2F,GAAc,EACdL,EAAM,gBAAsB,0BAE3BjL,KAAKwI,MAAMwB,8BACZsB,GAAc,EACdL,EAAM,OAAa,wBAElBjL,KAAKwI,MAAMC,gBACZ6C,GAAc,EACdL,EAAM,OAAa,wBAES,IAA5BjL,KAAKiK,qBACLgB,EAAM,OAAa,GACnBjL,KAAKiK,mBAAqB,GAE9BjK,KAAK+J,SAAS,CAAEkB,OAAQA,IACjBK,I,qCAEK,IAAD,OAoBXrC,IAnBa,ggBAoBRC,MAAK,gBAAGvF,EAAH,EAAGA,KAAH,OAAc,EAAKoG,SAAS,CAC9BpG,KAAMA,EAAKA,KAAKuE,kBAChBqB,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,4B,uCAMjC,IAAD,OAYbP,IAXa,wPAYRC,MAAK,gBAAGvF,EAAH,EAAGA,KAAH,OAAc,EAAKoG,SAAS,CAC9Be,WAAYnH,EAAKA,KAAK4H,wBACtBhC,OAAM,SAAAC,IACFA,EAAMC,UAAYD,EAAME,UACxBL,SAAOG,MAAM,qBAAsB,+C,kCAkI/CxJ,KAAK+J,SAAS,CACVpE,kBAAmB,GACnB8C,cAAe,GACfuB,4BAA6B,GAC7BtB,WAAW,M,+BA4FT,IAAD,EACmE1I,KAAKwI,MAArE7E,EADH,EACGA,KAAMhB,EADT,EACSA,QAAShB,EADlB,EACkBA,MAAOiC,EADzB,EACyBA,aAAckH,EADvC,EACuCA,WAAYE,EADnD,EACmDA,YACxD,OACI,oCACI,kBAACQ,EAAA,EAAD,KAAQ,iDAER,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CACIvL,gBAAgB,QAChBI,iBAAiB,QACjBI,iBAAiB,kBAErB,kBAACgL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,uBAEJ,kBAACC,EAAA,EAAD,CAAUjM,UAAU,eAChB,kBAAC0C,EAAA,EAAD,CACIM,6BAA8B/C,KAAK8J,kBACnC1G,WAAYpD,KAAKwI,MAAMpF,WACvBE,iBAAkBtD,KAAKsD,iBACvB3B,MAAOqJ,EACPrH,KAAMmH,EACNhJ,aAAc9B,KAAK6K,mBACnBjH,aAAcA,IAElB,kBAAC,EAAD,CACIxC,KAAMpB,KAAKiM,YAAYrJ,KACvB6C,WAAYzF,KAAKkK,eACjBxE,aAAc1F,KAAKmK,iBACnBxI,MAAOA,EACPgC,KAAMA,EACNhB,QAASA,EACTiB,aAAcA,EACdlC,WAAY1B,KAAK0B,WACjBI,aAAc9B,KAAK8B,eAGvB,kBAAC,EAAD,CACIqB,KAAMnD,KAAKwI,MAAMrF,KACjB+C,WAAYlG,KAAKkG,WACjBE,aAAcpG,KAAKwI,MAAMpC,aACzBG,aAAcvG,KAAKuG,aACnBgB,iBAAkBvH,KAAKuH,iBAEvBN,mBAAoBjH,KAAKwI,MAAMC,cAG/BtB,4BAA6BnH,KAAKwI,MAAMwB,4BAExCpC,WAAY5H,KAAKwI,MAAME,WACvB5B,gBAAiB9G,KAAKwI,MAAM7C,kBAE5BoB,yBAA0B/G,KAAK+G,yBAC/BC,iBAAkBhH,KAAKwI,MAAMyC,OAAX,gBAClBzD,YAAaxH,KAAKwI,MAAMyC,OAAX,OACblD,WAAY/H,KAAKwI,MAAMT,WACvBC,iBAAkBhI,KAAKgI,iBACvBtC,aAAc1F,KAAK0F,yB,GArahC3E,IAAMC,WAybjBkL,6BAJQ,SAAC,GAAD,MAAyB,CAC7C5N,KADoB,EAAGqB,KAAQrB,QAInB4N,CAAyBhE","file":"static/js/28.e3233eba.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","\nimport React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n      <Can I=\"create\" a={props.role} passThrough>\n          { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n        </Can>\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader\n","\nexport function ShowDate() {\n\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  return yyyy + '-' + mm + '-' + dd;\n}\n\n\nexport function ShowTime() {\n\n  let today = new Date();\n  let time = today.getHours() + \":\" + today.getMinutes();\n\n  return time;\n}\n","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\nclass BettingTypesTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"Betting Type Name\",\n                selector: \"BETTING_TYPE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.BETTING_TYPE_NAME}</p>\n            },\n            {\n                name: \"Status\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYSTEMSTATUS.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n                <DataTable\n                    className=\"dataTable-custom\"\n                    data={this.props.value.length ? this.props.filteredData : this.props.data}\n                    columns={this.tableProperties.columns}\n                    noHeader\n                    pagination\n                    subHeader\n                    striped\n                    responsive\n                    subHeaderComponent={\n                        <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                    }\n                />\n            </>\n\n        )\n    }\n}\n\n\nexport default BettingTypesTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup } from 'react-bootstrap';\nimport \"../../../../../assets/scss/plugins/forms/react-select/_react-select.scss\";\nimport { Search } from 'react-feather';\n\nclass BettingTypesModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Betting Type\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n\n                            <Form.Group controlId=\"BettingTypeName\">\n                                <Form.Label>Betting Type Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Betting Type Name\"\n                                    value={this.props.BettingTypeName}\n                                    onChange={this.props.changeEventandValidation}\n                                    name=\"BettingTypeName\"\n                                />\n                                <div className=\"invalid-feedback d-block\">\n                                    {this.props.ErrorDescription}\n                                </div>\n                            </Form.Group>\n                           \n                            <Form.Group controlId=\"SystemStatusType\">\n                                <Form.Label>System Status Type</Form.Label>\n                                <InputGroup>\n                                    <Form.Control value={this.props.SystemStatusTypeID}\n                                        onChange={this.props.changeEventandValidation} hidden name=\"StatusID\" />\n                                    <Form.Control\n                                        type=\"text\"\n                                        value={this.props.SystemStatusTypeDescription}\n                                        placeholder=\"Search System Status Type\"\n                                        aria-describedby=\"inputGroupPrepend\"\n                                        onChange={this.props.changeEventandValidation}\n                                        readOnly\n                                        name=\"Status\"\n                                    />\n                                    <InputGroup.Prepend>\n                                        <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSearch}>\n                                            <Search />\n                                        </Button>\n                                    </InputGroup.Prepend>\n                                </InputGroup>\n                                <div className=\"invalid-feedback d-block\">\n                                    {this.props.ErrorStatus}\n                                </div>\n                            </Form.Group>\n                            <Form.Group  id=\"formGridCheckbox\" controlId=\"Inspection\">\n                                  \n                                  <Form.Label>Inspection</Form.Label>\n                                  <Form.Check\n                                      type=\"switch\"\n                                      id=\"custom-switch\"\n                                      label=\"\"\n                                      name=\"Inspection\"\n                                      checked={this.props.Inspection === 1 ? true : false}\n                                      onChange={this.props.changeEventandValidation}\n                                  />\n                              </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete Betting Type\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.BettingTypeName} onChange={this.props.changeDescription} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default BettingTypesModal;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport BettingTypesTable from './Tables/BettingTypesTable';\nimport BettingTypesModal from './Modals/BettingTypesModal';\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr'\n\nclass BettingTypes extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        var Dropdownvalidation = 0;\n        this.state = {\n            errors: {},\n            columns: [],\n            data: [],\n            filteredData: [],\n            value: '',\n            show: false,\n            showStatus: true,\n            showdelete: false,\n\n            BETTING_TYPE_ID: 0,\n            BETTING_TYPE_NAME: '',\n            SYS_STATUS_ID: 0,\n            CREATEDBY:props.user.EMAIL,\n            MODIFIEDBY:props.user.EMAIL,\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n            INSPECTION:0,\n            InsertUpdate: '',\n\n            opensearch: false,\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            searchcolumns: [],\n            searchdata: [],\n            searchFilteredData: [],\n            searchvalue: '',\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n        this.handleShowSearch = () => {\n            this.setState({ opensearch: true });\n        };\n\n        this.handleHideSearch = () => {\n            this.setState({ opensearch: false });\n        };\n\n        this.populateData();\n        this.populateStatus();\n    }\n    handleValidation() {\n\n\n        let errors = {};\n        let formIsValid = true;\n\n        if (!this.state.BETTING_TYPE_NAME) {\n            formIsValid = false;\n            errors[\"BettingTypeName\"] = \"Please Enter Type Name\";\n        }\n        if (!this.state.SYSTEMSTATUSTYPEDESCRIPTION) {\n            formIsValid = false;\n            errors[\"Status\"] = \"Please Select Status\";\n        }\n        if (!this.state.SYS_STATUS_ID) {\n            formIsValid = false;\n            errors[\"Status\"] = \"Please Select Status\";\n        }\n        if (this.Dropdownvalidation === 1) {\n            errors[\"Status\"] = \"\";\n            this.Dropdownvalidation = 0;\n        }\n        this.setState({ errors: errors });\n        return formIsValid;\n    }\n    populateData() {\n        const getdata = `\n            query{\n                BettingTypes{\n                    BETTING_TYPE_ID\n                    BETTING_TYPE_NAME\n                    SYS_STATUS_ID\n                    INSPECTION\n                    SYSTEMSTATUS{\n                        SYS_STATUS_ID\n                        SYS_STATUS_NAME\n                    }\n                    CREATEDBY\n                    MODIFIEDBY\n                    CREATED_DATE\n                    MODIFIED_DATE\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                data: data.data.BettingTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    populateStatus() {\n        const getdata = `\n            query {\n                SystemStatusFilter (\n                    CATEGORY:\"SET\"\n                    ){\n                        SYS_STATUS_ID,\n                        SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to System Status Type Load Data');\n                }\n            })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.handleValidation()) {\n            const form = `\n        mutation{\n            addBettingType(\n                BETTING_TYPE_NAME:\"${this.state.BETTING_TYPE_NAME}\",\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                INSPECTION:${this.state.INSPECTION},\n                CREATEDBY:\"${this.state.CREATEDBY}\",\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                ){\n                    BETTING_TYPE_ID\n            }\n        }\n        `;\n\n            const formEdit = `\n        mutation{\n            updateBettingType(\n                BETTING_TYPE_ID:${this.state.BETTING_TYPE_ID},\n                BETTING_TYPE_NAME:\"${this.state.BETTING_TYPE_NAME}\",\n                INSPECTION:${this.state.INSPECTION},\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CREATEDBY:\"${this.state.CREATEDBY}\",\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                ){\n                    BETTING_TYPE_ID\n            }\n        }\n        `;\ndebugger;\n            if (this.state.InsertUpdate === 'Insert') {\n                API.create(form)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.success('Create Record', 'Record Created Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            } else {\n                API.update(formEdit)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.info('Update Record', 'Record Updated Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            }\n        }\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteBettingType(\n                BETTING_TYPE_ID:${this.state.BETTING_TYPE_ID}\n                ){\n                    BETTING_TYPE_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleCloseSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            opensearch: false,\n\n        });\n        this.Dropdownvalidation = 1;\n        this.handleValidation();\n\n    };\n\n    handleEditData = (e) => {\n        this.setState({\n            BETTING_TYPE_ID: e.BETTING_TYPE_ID,\n            INSPECTION: e.INSPECTION,\n            BETTING_TYPE_NAME: e.BETTING_TYPE_NAME,\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            BETTING_TYPE_ID: e.BETTING_TYPE_ID,\n            BETTING_TYPE_NAME: e.BETTING_TYPE_NAME,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            BETTING_TYPE_NAME: '',\n            SYS_STATUS_ID: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            INSPECTION:0,\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.BETTING_TYPE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.BETTING_TYPE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n    handleSearchFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchdata\n        let filteredData = this.state.searchFilteredData\n        this.setState({ searchvalue: value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n    changeEventandValidation = (e) => {\n\n\n        if (e.target.name === \"BettingTypeName\") {\n            this.setState({\n                [e.target.name]: e.target.value,\n                BETTING_TYPE_NAME: e.target.value\n\n\n            });\n        }\n        if (e.target.name === \"Inspection\") {\n            this.setState({\n                [e.target.name]: e.target.checked === true ? 1 : 0,\n                INSPECTION: e.target.checked === true ? 1 : 0\n            });\n        }\n        if (e.target.name === \"Status\") {\n            this.setState({\n                [e.target.name]: e.target.value,\n                SYSTEMSTATUSTYPEDESCRIPTION: e.target.value\n\n\n            });\n\n        }\n        if (e.target.name === \"StatusID\") {\n            this.setState({\n                [e.target.name]: e.target.value,\n                SYS_STATUS_ID: e.target.value\n\n\n            });\n\n        }\n\n\n        this.handleValidation();\n\n    };\n    render() {\n        const { data, columns, value, filteredData, searchdata, searchvalue } = this.state\n        return (\n            <>\n                <Helmet><title>Betting Types</title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"Betting Types\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Betting Types</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseSearch}\n                                        opensearch={this.state.opensearch}\n                                        handleHideSearch={this.handleHideSearch}\n                                        value={searchvalue}\n                                        data={searchdata}\n                                        handleFilter={this.handleSearchFilter}\n                                        filteredData={filteredData}\n                                    />\n                                    <BettingTypesTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        columns={columns}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <BettingTypesModal\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowSearch={this.handleShowSearch}\n\n                                        SystemStatusTypeID={this.state.SYS_STATUS_ID}\n\n\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n\n                                        Inspection={this.state.INSPECTION}\n                                        BettingTypeName={this.state.BETTING_TYPE_NAME}\n\n                                        changeEventandValidation={this.changeEventandValidation}\n                                        ErrorDescription={this.state.errors[\"BettingTypeName\"]}\n                                        ErrorStatus={this.state.errors[\"Status\"]}\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n                                    />\n\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(BettingTypes));"],"sourceRoot":""}