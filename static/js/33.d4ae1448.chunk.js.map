{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/SearchComponents/ClientTypeSearch/ClientTypeSearch.js","views/pages/Registration/ClientRegistration/Tables/ClientRegistrationTable.js","views/pages/Registration/ClientRegistration/Modals/ClientRegistrationModal.js","views/pages/SearchComponents/ClientDocumentTypeSearch/ClientDocumentTypeSearch.js","views/pages/Registration/ClientRegistration/ClientRegistration.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","hasOwnProperty","createButton","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","ClientTypeSearch","handleSearchClientType","CLIENT_TYPE_DESCRIPTION","ClientRegistrationTable","Button","handleEdit","handleDelete","CLIENT_REG_NUMBER","CLIENT_DOCUMENT_NUMBER","PIN_NUMBER","CITY","POSTAL_ADDRESS","POSTAL_CODE","TELEPHONE_NUMBER","MOBILE_NUMBER","EMAIL","WEBSITE","ClientTypes","Client_DocumentType","CLIENT_DOCUMENT_TYPE_NAME","SYSTEMSTATUS","subHeader","responsive","subHeaderComponent","ClientRegistrationModal","Modal","handleHide","id","InsertUpdate","Form","noValidate","validated","onSubmit","handleSubmit","autoComplete","Row","Group","Col","md","controlId","Label","Control","placeholder","required","changeCLIENT_REG_NUMBER","Feedback","CLIENT_NAME","changeCLIENT_NAME","changeCLIENT_DOCUMENT_NUMBER","aria-describedby","variant","handleClientTypeSearch","handleClientDocumentTypeSearch","changePIN_NUMBER","changePOSTAL_ADDRESS","changeCITY","changePOSTAL_CODE","changeTELEPHONE_NUMBER","changeMOBILE_NUMBER","changeEMAIL","changeWEBSITE","SystemStatusTypeDescription","handleShowSearch","Footer","isEnabled","showdelete","handleHideDelete","readOnly","ClientDocumentTypeSearch","handleSearchClientDocumentType","Input","ClientRegistration","context","event","preventDefault","currentTarget","checkValidity","stopPropagation","form","state","CLIENT_DOCUMENT_TYPE_ID","SYS_STATUS_ID","CLIENT_TYPE_ID","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","formEdit","CLIENT_ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","setState","formDelete","warning","handleCloseSearch","SYSTEMSTATUSTYPEDESCRIPTION","handleCloseClientTypeSearch","openClientTypeSearch","populateCDT","handleCloseCDTSearch","openCDTsearch","handleEditData","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","handleSearchClientTypeFilter","searchClientTypedata","filteredClientTypeData","searchFilteredData","searchClientTypevalue","handleSearchClientDocumentTypeFilter","searchCDTdata","filteredCDTData","searchCDTvalue","handleSearchFilter","searchdata","searchvalue","Date","searchcolumns","handleHideClientTypeSearch","handleHideCDTSearch","populateTypes","populateClientTypes","Clients","SystemStatusFilter","getdata","ClientDocumentTypesFilter","Helmet","Fragment","sm","Card","CardHeader","CardTitle","CardBody","constructor","connect"],"mappings":"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","file":"static/js/33.d4ae1448.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n        { \n          (!props.hasOwnProperty('createButton') || (props.hasOwnProperty('createButton') && props.createButton)) ? (\n            <Can I=\"create\" a={props.role} passThrough>\n              { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n            </Can>\n          ) : (\"\")\n        }\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass ClientTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchClientType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"CLIENT_TYPE_DESCRIPTION\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_TYPE_DESCRIPTION}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Client Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default ClientTypeSearch","import React from \"react\"\nimport {\n    Button\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\nclass ClientRegistrationTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            \n            {\n                name: \"Client Register Number\",\n                selector: \"CLIENT_REG_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_REG_NUMBER}</p>\n            }\n            ,\n            {\n                name: \"Client Name\",\n                selector: \"CLIENT_DOCUMENT_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_DOCUMENT_NUMBER}</p>\n            }\n            ,\n            {\n                name: \"Client Document Number\",\n                selector: \"CLIENT_DOCUMENT_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_DOCUMENT_NUMBER}</p>\n            }\n            ,\n            {\n                name: \"PIN Number\",\n                selector: \"PIN_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.PIN_NUMBER}</p>\n            }\n            ,\n            {\n                name: \"City\",\n                selector: \"CITY\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CITY}</p>\n            },\n            {\n                name: \"Postal Address\",\n                selector: \"POSTAL_ADDRESS\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.POSTAL_ADDRESS}</p>\n            },\n            {\n                name: \"Postal Code\",\n                selector: \"POSTAL_CODE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.POSTAL_CODE}</p>\n            },\n            {\n                name: \"Telephone Number\",\n                selector: \"TELEPHONE_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.TELEPHONE_NUMBER}</p>\n            },\n            {\n                name: \"Mobile Number\",\n                selector: \"MOBILE_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.MOBILE_NUMBER}</p>\n            },\n            {\n                name: \"Email\",\n                selector: \"EMAIL\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.EMAIL}</p>\n            },\n            {\n                name: \"Web Site\",\n                selector: \"WEBSITE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WEBSITE}</p>\n            },\n            {\n                name: \"Client Type Description\",\n                selector: \"CLIENT_TYPE_DESCRIPTION\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.ClientTypes.CLIENT_TYPE_DESCRIPTION}</p>\n            },\n            {\n                name: \"Client Document Type\",\n                selector: \"CLIENT_DOCUMENT_TYPE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.Client_DocumentType.CLIENT_DOCUMENT_TYPE_NAME}</p>\n            }\n             ,\n            {\n                name: \"Status\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYSTEMSTATUS.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n            <DataTable\n                className=\"dataTable-custom\"\n                data={this.props.value.length ? this.props.filteredData : this.props.data}\n                columns={this.tableProperties.columns}\n                noHeader\n                pagination\n                subHeader\n                striped\n                responsive\n                subHeaderComponent={\n                    <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                }\n            />\n            </>\n\n        )\n    }\n}\n\n\nexport default ClientRegistrationTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup, Col } from 'react-bootstrap';\nimport \"../../../../../assets/scss/plugins/forms/react-select/_react-select.scss\";\nimport { Search } from 'react-feather';\n\n\nclass ClientRegistrationModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                    size=\"lg\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Client Registration\n                        </Modal.Title>\n                    </Modal.Header>\n\n                    <Form noValidate validated={this.props.validated} onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CLIENT_REG_NUMBER\">\n                                    <Form.Label>Client Register Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Client Register Number\"\n                                        value={this.props.CLIENT_REG_NUMBER} required\n                                        onChange={this.props.changeCLIENT_REG_NUMBER}\n                                        name=\"CLIENT_REG_NUMBER\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select Client Register Number.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CLIENT_NAME\">\n                                    <Form.Label>Client Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Client Name\"\n                                        value={this.props.CLIENT_NAME} required\n                                        onChange={this.props.changeCLIENT_NAME}\n                                        name=\"CLIENT_NAME\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select Client Name.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CLIENT_DOCUMENT_NUMBER\">\n                                    <Form.Label>Client Document Number</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter Client Document Number\"\n                                        value={this.props.CLIENT_DOCUMENT_NUMBER} required\n                                        onChange={this.props.changeCLIENT_DOCUMENT_NUMBER}\n                                        name=\"CLIENT_DOCUMENT_NUMBER\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select Client Document Number.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CLIENT_TYPE_DESCRIPTION\">\n                                    <Form.Label>Client Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.CLIENT_TYPE_DESCRIPTION}\n                                            placeholder=\"Search Client Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            name=\"CLIENT_TYPE_DESCRIPTION\"\n                                            required\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleClientTypeSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select Client Type.\n                                        </Form.Control.Feedback>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CLIENT_DOCUMENT_TYPE_NAME\">\n                                    <Form.Label>Client Document Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.CLIENT_DOCUMENT_TYPE_NAME}\n                                            placeholder=\"Search Client Document Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            name=\"CLIENT_DOCUMENT_TYPE_NAME\"\n                                            required\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleClientDocumentTypeSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select Client Document Type.\n                                        </Form.Control.Feedback>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"PIN_NUMBER\">\n                                    <Form.Label>PIN Number</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter PIN Number\"\n                                        value={this.props.PIN_NUMBER} required\n                                        onChange={this.props.changePIN_NUMBER} name=\"PIN_NUMBER\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select PIN Number.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"POSTAL_ADDRESS\">\n                                    <Form.Label>Postal Address</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Postal Address\"\n                                        value={this.props.POSTAL_ADDRESS} required\n                                        onChange={this.props.changePOSTAL_ADDRESS}\n                                        name=\"POSTAL_ADDRESS\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select Postal Address.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CITY\">\n                                    <Form.Label>City</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter City\"\n                                        value={this.props.CITY} required\n                                        onChange={this.props.changeCITY} name=\"CITY\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select City.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"POSTAL_CODE\">\n                                    <Form.Label>Postal Code</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter Postal Code\"\n                                        value={this.props.POSTAL_CODE} required\n                                        onChange={this.props.changePOSTAL_CODE}\n                                        name=\"POSTAL_CODE\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select Postal Code.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"TELEPHONE_NUMBER\">\n                                    <Form.Label>Telephone number</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter Telephone number\"\n                                        value={this.props.TELEPHONE_NUMBER} required\n                                        onChange={this.props.changeTELEPHONE_NUMBER}\n                                        name=\"TELEPHONE_NUMBER\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select Telephone number.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"MOBILE_NUMBER\">\n                                    <Form.Label>Mobile Number</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter Mobile Number\"\n                                        value={this.props.MOBILE_NUMBER} required\n                                        onChange={this.props.changeMOBILE_NUMBER}\n                                        name=\"MOBILE_NUMBER\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select Mobile Number.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"EMAIL\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"Enter Email\"\n                                        value={this.props.EMAIL} required\n                                        onChange={this.props.changeEMAIL} name=\"EMAIL\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select Email.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"WEBSITE\">\n                                    <Form.Label>WebSite</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter WebSite\"\n                                        value={this.props.WEBSITE} required\n                                        onChange={this.props.changeWEBSITE}\n                                        name=\"WEBSITE\" />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please select WebSite.\n                                        </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"SystemStatusType\">\n                                    <Form.Label>System Status Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"SystemStatus\"\n                                            value={this.props.SystemStatusTypeDescription}\n                                            placeholder=\"Search System Status Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select status.\n                                        </Form.Control.Feedback>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete Client\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.CLIENT_NAME} onChange={this.props.CLIENT_NAME} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ClientRegistrationModal;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass ClientDocumentTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchClientDocumentType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Client Document Type Name\",\n                selector: \"CLIENT_DOCUMENT_TYPE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_DOCUMENT_TYPE_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Client Dcoument Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default ClientDocumentTypeSearch","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\";\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport ClientRegistrationTable from './Tables/ClientRegistrationTable';\nimport ClientRegistrationModal from './Modals/ClientRegistrationModal';\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport ClientTypeSearch from '../../SearchComponents/ClientTypeSearch/ClientTypeSearch';\nimport ClientDocumentTypeSearch from '../../SearchComponents/ClientDocumentTypeSearch/ClientDocumentTypeSearch';\n\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr';\n\nclass ClientRegistration extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n\n        this.state = {\n            validated: false,\n            columns: [],\n            data: [],\n            filteredData: [],\n            filteredClientTypeData: [],\n            filteredCDTData: [],\n\n            value: '',\n            show: false,\n            showdelete: false,\n            CLIENT_ID: 0,\n            CLIENT_NAME: '',\n            CLIENT_REG_NUMBER: '',\n            CLIENT_DOCUMENT_NUMBER: '',\n            PIN_NUMBER: '',\n            POSTAL_ADDRESS: '',\n            CITY: '',\n            POSTAL_CODE: '',\n            TELEPHONE_NUMBER: '',\n            MOBILE_NUMBER: '',\n            EMAIL: '',\n            WEBSITE: '',\n            CLIENT_DOCUMENT_TYPE_ID: 0,\n            CLIENT_TYPE_ID: 0,\n            SYS_STATUS_ID: 0,\n            CREATEDBY: props.user.EMAIL,\n            MODIFIEDBY: props.user.EMAIL,\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n            InsertUpdate: '',\n\n            opensearch: false,\n            openClientTypeSearch: false,\n            openCDTsearch: false,\n\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            CLIENT_DOCUMENT_TYPE_NAME: '',\n            CLIENT_TYPE_DESCRIPTION: '',\n            searchcolumns: [],\n            searchdata: [],\n            searchCDTdata: [],\n            searchClientTypedata: [],\n            searchFilteredData: [],\n            searchvalue: '',\n            searchClientTypevalue: '',\n            searchCDTvalue: '',\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n        this.handleShowSearch = () => {\n            this.setState({ opensearch: true });\n        };\n        this.handleClientTypeSearch = () => {\n            this.setState({ openClientTypeSearch: true });\n        };\n\n        this.handleClientDocumentTypeSearch = () => {\n            this.setState({ openCDTsearch: true });\n        };\n        this.handleHideSearch = () => {\n            this.setState({ opensearch: false });\n        };\n\n        this.handleHideClientTypeSearch = () => {\n            this.setState({ openClientTypeSearch: false });\n        };\n\n\n        this.handleHideCDTSearch = () => {\n            this.setState({ openCDTsearch: false });\n        };\n        this.populateData();\n        this.populateTypes();\n        this.populateClientTypes();\n    }\n\n    populateData() {\n        const getdata = `\n        query {\n            Clients  {\n               CLIENT_ID\n                CLIENT_NAME\n                CLIENT_REG_NUMBER\n                CLIENT_TYPE_ID\n                ClientTypes{\n                CLIENT_TYPE_ID\n                CLIENT_TYPE_DESCRIPTION\n                }\n                CLIENT_DOCUMENT_TYPE_ID\n                Client_DocumentType\n                {\n                CLIENT_DOCUMENT_TYPE_ID\n                CLIENT_DOCUMENT_TYPE_NAME\n                }\n                CLIENT_DOCUMENT_NUMBER\n                PIN_NUMBER\n                POSTAL_ADDRESS\n                CITY\n                POSTAL_CODE\n                TELEPHONE_NUMBER\n                MOBILE_NUMBER\n                EMAIL\n                WEBSITE\n                SYS_STATUS_ID\n                SYSTEMSTATUS{\n                    SYS_STATUS_ID,\n                    SYS_STATUS_NAME\n                },\n                    CREATEDBY\n                    MODIFIEDBY\n                    CREATED_DATE\n                    MODIFIED_DATE \n            }\n        }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                data: data.data.Clients\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n    }\n\n    populateTypes() {\n        const getdata = `\n            query {\n                SystemStatusFilter (\n                    CATEGORY:\"SET\"\n                    ){\n                        SYS_STATUS_ID,\n                        SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to System Status Type Load Data');\n                }\n            })\n    }\n\n    populateClientTypes() {\n        const getdata = `\n            query {\n                ClientTypes{\n                    CLIENT_TYPE_ID\n                    CLIENT_TYPE_DESCRIPTION\n                  }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchClientTypedata: data.data.ClientTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Client Type Load Data');\n                }\n            })\n    }\n    populateCDT(value) {\n        const getdata = `\n            query {\n                ClientDocumentTypesFilter\n                (\n                    SET_CLIENT_TYPE_ID:${value}\n                    )\n                {\n                  CLIENT_DOCUMENT_TYPE_ID\n                  CLIENT_DOCUMENT_TYPE_NAME\n                }\n            }\n        `;\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchCDTdata: data.data.ClientDocumentTypesFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Client Document Type Load Data');\n                }\n            })\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const validate = event.currentTarget;\n        if (validate.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n            const form = `\n        mutation{\n            addClient(\n                CLIENT_NAME:\"${this.state.CLIENT_NAME}\",\n                CLIENT_REG_NUMBER:\"${this.state.CLIENT_REG_NUMBER}\",\n                CLIENT_DOCUMENT_NUMBER:\"${this.state.CLIENT_DOCUMENT_NUMBER}\",\n                POSTAL_ADDRESS:\"${this.state.POSTAL_ADDRESS}\",\n                PIN_NUMBER:\"${this.state.PIN_NUMBER}\",\n                CITY:\"${this.state.CITY}\",\n                POSTAL_CODE:\"${this.state.POSTAL_CODE}\",\n                TELEPHONE_NUMBER:\"${this.state.TELEPHONE_NUMBER}\",\n                MOBILE_NUMBER:\"${this.state.MOBILE_NUMBER}\",\n                EMAIL:\"${this.state.EMAIL}\",\n                WEBSITE:\"${this.state.WEBSITE}\",\n                CLIENT_DOCUMENT_TYPE_ID:${this.state.CLIENT_DOCUMENT_TYPE_ID},\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CLIENT_TYPE_ID:${this.state.CLIENT_TYPE_ID},\n                CREATEDBY:\"${this.state.CREATEDBY}\",\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                ){\n                    CLIENT_ID\n            }\n        }\n        `;\n\n            const formEdit = `\n        mutation{\n            updateClient(\n                CLIENT_ID:${this.state.CLIENT_ID},\n                CLIENT_NAME:\"${this.state.CLIENT_NAME}\",\n                CLIENT_REG_NUMBER:\"${this.state.CLIENT_REG_NUMBER}\",\n                CLIENT_DOCUMENT_NUMBER:\"${this.state.CLIENT_DOCUMENT_NUMBER}\",\n                POSTAL_ADDRESS:\"${this.state.POSTAL_ADDRESS}\",\n                PIN_NUMBER:\"${this.state.PIN_NUMBER}\",\n                CITY:\"${this.state.CITY}\",\n                POSTAL_CODE:\"${this.state.POSTAL_CODE}\",\n                TELEPHONE_NUMBER:\"${this.state.TELEPHONE_NUMBER}\",\n                MOBILE_NUMBER:\"${this.state.MOBILE_NUMBER}\",\n                EMAIL:\"${this.state.EMAIL}\",\n                WEBSITE:\"${this.state.WEBSITE}\",\n                CLIENT_DOCUMENT_TYPE_ID:${this.state.CLIENT_DOCUMENT_TYPE_ID},\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CLIENT_TYPE_ID:${this.state.CLIENT_TYPE_ID},\n                CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                ){\n                    CLIENT_ID\n            }\n        }\n        `;\n\n            if (this.state.InsertUpdate === 'Insert') {\n                API.create(form)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.success('Create Record', 'Record Created Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            } else {\n                API.update(formEdit)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.info('Update Record', 'Record Updated Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            }\n        }\n        this.setState({\n            validated: true\n        })\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n        const formDelete = `\n        mutation{\n            deleteClient(\n                CLIENT_ID:${this.state.CLIENT_ID}\n                ){\n                    CLIENT_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleCloseSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            opensearch: false,\n        });\n\n    };\n\n\n    handleCloseClientTypeSearch = (e) => {\n\n        this.setState({\n            CLIENT_TYPE_ID: e.CLIENT_TYPE_ID,\n            CLIENT_TYPE_DESCRIPTION: e.CLIENT_TYPE_DESCRIPTION,\n            openClientTypeSearch: false,\n        });\n        this.populateCDT(e.CLIENT_TYPE_ID);\n\n    };\n\n\n\n    handleCloseCDTSearch = (e) => {\n        this.setState({\n            CLIENT_DOCUMENT_TYPE_ID: e.CLIENT_DOCUMENT_TYPE_ID,\n            CLIENT_DOCUMENT_TYPE_NAME: e.CLIENT_DOCUMENT_TYPE_NAME,\n            openCDTsearch: false,\n        });\n    };\n\n\n    handleEditData = (e) => {\n        this.setState({\n            CLIENT_ID: e.CLIENT_ID,\n            CLIENT_NAME: e.CLIENT_NAME,\n            CLIENT_REG_NUMBER: e.CLIENT_REG_NUMBER,\n\n            CLIENT_DOCUMENT_NUMBER: e.CLIENT_DOCUMENT_NUMBER,\n            POSTAL_ADDRESS: e.POSTAL_ADDRESS,\n            PIN_NUMBER: e.PIN_NUMBER,\n            CITY: e.CITY,\n            POSTAL_CODE: e.POSTAL_CODE,\n            TELEPHONE_NUMBER: e.TELEPHONE_NUMBER,\n            MOBILE_NUMBER: e.MOBILE_NUMBER,\n            EMAIL: e.EMAIL,\n            WEBSITE: e.WEBSITE,\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            CLIENT_DOCUMENT_TYPE_ID: e.CLIENT_DOCUMENT_TYPE_ID,\n            CLIENT_TYPE_ID: e.CLIENT_TYPE_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\n            CLIENT_TYPE_DESCRIPTION: e.ClientTypes.CLIENT_TYPE_DESCRIPTION,\n            CLIENT_DOCUMENT_TYPE_NAME: e.Client_DocumentType.CLIENT_DOCUMENT_TYPE_NAME,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n        this.populateCDT(e.ClientTypes.CLIENT_TYPE_ID);\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            CLIENT_ID: e.CLIENT_ID,\n            CLIENT_NAME: e.CLIENT_NAME,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            CLIENT_NAME: '',\n            CLIENT_REG_NUMBER: '',\n            CLIENT_DOCUMENT_NUMBER: '',\n            POSTAL_ADDRESS: '',\n            PIN_NUMBER: '',\n            CITY: '',\n            POSTAL_CODE: '',\n            TELEPHONE_NUMBER: '',\n            MOBILE_NUMBER: '',\n            EMAIL: '',\n            WEBSITE: '',\n            SYS_STATUS_ID: '',\n            CLIENT_TYPE_ID: '',\n            CLIENT_DOCUMENT_TYPE_ID: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            CLIENT_DOCUMENT_TYPE_NAME: '',\n            CLIENT_TYPE_DESCRIPTION: '',\n            validated: false\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENT_REG_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase())\n\n\n                let includesCondition =\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENT_REG_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    handleSearchClientTypeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchClientTypedata\n        let filteredClientTypeData = this.state.searchFilteredData\n        this.setState({ searchClientTypevalue: value });\n\n        if (value.length) {\n            filteredClientTypeData = data.filter(item => {\n                let startsWithCondition =\n                    item.CLIENT_TYPE_DESCRIPTION.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.CLIENT_TYPE_DESCRIPTION.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredClientTypeData })\n        }\n    }\n\n\n    handleSearchClientDocumentTypeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchCDTdata\n        let filteredCDTData = this.state.searchFilteredData\n        this.setState({ searchCDTvalue: value });\n\n        if (value.length) {\n            filteredCDTData = data.filter(item => {\n                let startsWithCondition =\n                    item.CLIENT_DOCUMENT_TYPE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.CLIENT_DOCUMENT_TYPE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredCDTData })\n        }\n    }\n    handleSearchFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchdata\n        let filteredData = this.state.searchFilteredData\n        this.setState({ searchvalue: value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    render() {\n        const { data, value, filteredData, filteredClientTypeData, filteredCDTData,\n            searchdata, searchClientTypedata, searchCDTdata,\n            searchvalue, searchClientTypevalue, searchCDTvalue } = this.state\n        return (\n            <>\n                <Helmet><title>Client Registration</title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"Client Registration\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Client Registration</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseSearch}\n                                        opensearch={this.state.opensearch}\n                                        handleHideSearch={this.handleHideSearch}\n                                        value={searchvalue}\n                                        data={searchdata}\n                                        handleFilter={this.handleSearchFilter}\n                                        filteredData={filteredData}\n                                    />\n\n                                    <ClientDocumentTypeSearch\n                                        handleSearchClientDocumentType={this.handleCloseCDTSearch}\n                                        opensearch={this.state.openCDTsearch}\n                                        handleHideSearch={this.handleHideCDTSearch}\n                                        value={searchCDTvalue}\n                                        data={searchCDTdata}\n                                        handleFilter={this.handleSearchClientDocumentTypeFilter}\n                                        filteredData={filteredCDTData}\n                                    />\n                                    <ClientTypeSearch\n                                        handleSearchClientType={this.handleCloseClientTypeSearch}\n                                        opensearch={this.state.openClientTypeSearch}\n                                        handleHideSearch={this.handleHideClientTypeSearch}\n                                        value={searchClientTypevalue}\n                                        data={searchClientTypedata}\n                                        handleFilter={this.handleSearchClientTypeFilter}\n                                        filteredData={filteredClientTypeData}\n                                    />\n\n\n                                    <ClientRegistrationTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <ClientRegistrationModal\n                                        validated={this.state.validated}\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowSearch={this.handleShowSearch}\n                                        handleClientTypeSearch={this.handleClientTypeSearch}\n                                        handleClientDocumentTypeSearch={this.handleClientDocumentTypeSearch}\n\n                                        changeCLIENT_REG_NUMBER={e => this.setState({ CLIENT_REG_NUMBER: e.target.value })}\n                                        changeCLIENT_NAME={e => this.setState({ CLIENT_NAME: e.target.value })}\n                                        changeCLIENT_DOCUMENT_NUMBER={e => this.setState({ CLIENT_DOCUMENT_NUMBER: e.target.value })}\n                                        changePIN_NUMBER={e => this.setState({ PIN_NUMBER: e.target.value })}\n                                        changePOSTAL_ADDRESS={e => this.setState({ POSTAL_ADDRESS: e.target.value })}\n                                        changePOSTAL_CODE={e => this.setState({ POSTAL_CODE: e.target.value })}\n                                        changeTELEPHONE_NUMBER={e => this.setState({ TELEPHONE_NUMBER: e.target.value })}\n                                        changeMOBILE_NUMBER={e => this.setState({ MOBILE_NUMBER: e.target.value })}\n                                        changeWEBSITE={e => this.setState({ WEBSITE: e.target.value })}\n                                        changeCITY={e => this.setState({ CITY: e.target.value })}\n                                        changeEMAIL={e => this.setState({ EMAIL: e.target.value })}\n                                        \n\n                                        CLIENT_DOCUMENT_TYPE_NAME={this.state.CLIENT_DOCUMENT_TYPE_NAME}\n                                        CLIENT_TYPE_DESCRIPTION={this.state.CLIENT_TYPE_DESCRIPTION}\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n                                        CLIENT_NAME={this.state.CLIENT_NAME}\n                                        CLIENT_REG_NUMBER={this.state.CLIENT_REG_NUMBER}\n                                        CLIENT_DOCUMENT_NUMBER={this.state.CLIENT_DOCUMENT_NUMBER}\n                                        POSTAL_ADDRESS={this.state.POSTAL_ADDRESS}\n                                        PIN_NUMBER={this.state.PIN_NUMBER}\n                                        CITY={this.state.CITY}\n                                        POSTAL_CODE={this.state.POSTAL_CODE}\n                                        TELEPHONE_NUMBER={this.state.TELEPHONE_NUMBER}\n                                        MOBILE_NUMBER={this.state.MOBILE_NUMBER}\n                                        EMAIL={this.state.EMAIL}\n                                        WEBSITE={this.state.WEBSITE}\n\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n\n                                    />\n\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(ClientRegistration));"],"sourceRoot":""}