{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","utility/dateAndTime.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/SearchComponents/ClientTypeSearch/ClientTypeSearch.js","views/pages/Setups/ClientDocumentTypes/Tables/ClientDocumentTypesTable.js","views/pages/Setups/ClientDocumentTypes/Modals/ClientDocumentTypesModal.js","views/pages/Setups/ClientDocumentTypes/ClientDocumentTypes.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","ShowDate","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","ClientTypeSearch","handleSearchClientType","CLIENT_TYPE_DESCRIPTION","ClientDocumentTypesTable","Button","handleEdit","handleDelete","CLIENT_DOCUMENT_TYPE_NAME","CLIENTTYPE","SYSTEMSTATUS","subHeader","responsive","subHeaderComponent","ClientDocumentTypesModal","Modal","handleHide","id","InsertUpdate","Form","onSubmit","handleSubmit","autoComplete","Group","controlId","Label","Control","placeholder","ClientDocumentTypeName","changeEventandValidation","ClientDocumentTypeNameError","ClientTypeID","handleChangeClientTypeID","hidden","ClientTypeDescription","aria-describedby","readOnly","variant","handleShowClientTypeSearch","ClientTypeError","SystemStatusTypeID","handleChangeSystemStatusTypeID","SystemStatusTypeDescription","handleShowStatusSearch","SystemStatusTypeError","Footer","isEnabled","showdelete","handleHideDelete","changeClientDocumentTypeName","ClientDocumentTypes","context","event","preventDefault","handleValidation","form","state","CLIENT_TYPE_ID","SYS_STATUS_ID","CREATEDBY","LASTMODIFIEDBY","CREATED_DATE","MODIFIED_DATE","formEdit","CLIENT_DOCUMENT_TYPE_ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","formDelete","warning","handleCloseClientTypeSearch","setState","CLIENTTYPEDESCRIPTION","openclienttypesearch","DropdownvalidationClientType","DropdownvalidationSystemStatus","handleCloseStatusSearch","SYSTEMSTATUSTYPEDESCRIPTION","openstatussearch","handleEditData","SET_CLIENT_TYPE_ID","SET_SYS_STATUS_ID","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","handleSearchClientTypeFilter","searchclienttypedata","filteredClientTypeData","searchFilteredClientTypeData","searchclienttypevalue","includes","handleSearchStatusFilter","searchstatusdata","filteredStatusData","searchFilteredStatusData","searchstatusvalue","errors","searchcolumns","searchdata","handleHideClientTypeSearch","handleHideStatusSearch","populateTypes","populateStatus","formIsValid","ClientTypes","SystemStatusFilter","Helmet","Fragment","Row","Col","sm","Card","CardHeader","CardTitle","CardBody","constructor","handleChangeClientTypeDescription","handleChangeSystemStatusTypeDescription","connect"],"mappings":"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","file":"static/js/47.9f480432.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","\nimport React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n      <Can I=\"create\" a={props.role} passThrough>\n          { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n        </Can>\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader\n","\nexport function ShowDate() {\n\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  return yyyy + '-' + mm + '-' + dd;\n}\n\n\nexport function ShowTime() {\n\n  let today = new Date();\n  let time = today.getHours() + \":\" + today.getMinutes();\n\n  return time;\n}\n","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass ClientTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchClientType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"CLIENT_TYPE_DESCRIPTION\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_TYPE_DESCRIPTION}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Client Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default ClientTypeSearch","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\nclass ClientDocumentTypesTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"Client Document Type Name\",\n                selector: \"CLIENT_DOCUMENT_TYPE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_DOCUMENT_TYPE_NAME}</p>\n            },\n            {\n                name: \"Client Type\",\n                selector: \"CLIENT_TYPE_DESCRIPTION\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENTTYPE.CLIENT_TYPE_DESCRIPTION}</p>\n            },\n            {\n                name: \"Status\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYSTEMSTATUS.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n                <DataTable\n                    className=\"dataTable-custom\"\n                    data={this.props.value.length ? this.props.filteredData : this.props.data}\n                    columns={this.tableProperties.columns}\n                    noHeader\n                    pagination\n                    subHeader\n                    striped\n                    responsive\n                    subHeaderComponent={\n                        <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                    }\n                />\n            </>\n\n        )\n    }\n}\n\n\nexport default ClientDocumentTypesTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup } from 'react-bootstrap';\n\nimport { Search } from 'react-feather';\n\nclass ClientDocumentTypesModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                // size=\"lg\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Client Document Types\n                        </Modal.Title>\n                    </Modal.Header>\n\n                    <Form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n\n                            <Form.Group controlId=\"ClientDocumentTypeName\">\n                                <Form.Label>Client Document Type Name</Form.Label>\n                                <Form.Control type=\"text\"\n                                name=\"ClientDocumentTypeName\"\n                                placeholder=\"Enter Client Document Type Name\"\n                                value={this.props.ClientDocumentTypeName}\n                                onChange={this.props.changeEventandValidation} />\n                                <div className=\"invalid-feedback d-block\">\n                                        {this.props.ClientDocumentTypeNameError}\n                                    </div>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"ClientType\">\n                                <Form.Label>Client Type</Form.Label>\n                                <InputGroup>\n                                    <Form.Control value={this.props.ClientTypeID} onChange={this.props.handleChangeClientTypeID} hidden name=\"ClientTypeID\" />\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"ClientType\"\n                                        value={this.props.ClientTypeDescription}\n                                        onChange={this.props.changeEventandValidation}\n                                        placeholder=\"Search Client Type\"\n                                        aria-describedby=\"inputGroupPrepend\"\n                                        readOnly\n                                    />\n                                    <InputGroup.Prepend>\n                                        <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowClientTypeSearch}>\n                                            <Search />\n                                        </Button>\n                                    </InputGroup.Prepend>\n                                </InputGroup>\n                                <div className=\"invalid-feedback d-block\">\n                                        {this.props.ClientTypeError}\n                                    </div>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"SystemStatusType\">\n                                <Form.Label>System Status Type</Form.Label>\n                                <InputGroup>\n                                    <Form.Control value={this.props.SystemStatusTypeID} onChange={this.props.handleChangeSystemStatusTypeID} hidden name=\"SystemStatusID\" />\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"SystemStatus\"\n                                        value={this.props.SystemStatusTypeDescription}\n                                        onChange={this.props.changeEventandValidation}\n                                        placeholder=\"Search System Status Type\"\n                                        aria-describedby=\"inputGroupPrepend\"\n                                        readOnly\n                                    />\n                                    <InputGroup.Prepend>\n                                        <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowStatusSearch}>\n                                            <Search />\n                                        </Button>\n                                    </InputGroup.Prepend>\n                                </InputGroup>\n                                <div className=\"invalid-feedback d-block\">\n                                        {this.props.SystemStatusTypeError}\n                                    </div>\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete Client Document Type\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description_del\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.ClientDocumentTypeName} onChange={this.props.changeClientDocumentTypeName} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ClientDocumentTypesModal;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\";\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport ClientDocumentTypesTable from './Tables/ClientDocumentTypesTable';\nimport ClientDocumentTypesModal from './Modals/ClientDocumentTypesModal';\nimport ClientTypeSearch from '../../SearchComponents/ClientTypeSearch/ClientTypeSearch';\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr';\n\nclass ClientDocumentTypes extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        var DropdownvalidationSystemStatus = 0;\n        var DropdownvalidationClientType = 0;\n        this.state = {\n            errors: {},\n            columns: [],\n            data: [],\n            filteredData: [],\n            filteredClientTypeData: [],\n            filteredStatusData: [],\n            value: '',\n            show: false,\n            showdelete: false,\n            CLIENT_DOCUMENT_TYPE_ID: 0,\n            CLIENT_DOCUMENT_TYPE_NAME: '',\n            SET_CLIENT_TYPE_ID: 0,\n            SET_SYS_STATUS_ID: 0,\n            CREATEDBY: 'Sravan',\n            LASTMODIFIEDBY: 'Sravan',\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n            InsertUpdate: '',\n\n            openclienttypesearch: false,\n            openstatussearch: false,\n\n            CLIENTTYPEDESCRIPTION: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n\n            searchcolumns: [],\n\n            searchdata: [],\n            searchclienttypedata: [],\n            searchstatusdata: [],\n\n            searchFilteredClientTypeData: [],\n            searchFilteredStatusData: [],\n\n            searchclienttypevalue: '',\n            searchstatusvalue: '',\n\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n        this.handleShowClientTypeSearch = () => {\n            this.setState({ openclienttypesearch: true });\n        };\n\n        this.handleShowStatusSearch = () => {\n            this.setState({ openstatussearch: true });\n        };\n\n        this.handleHideClientTypeSearch = () => {\n            this.setState({ openclienttypesearch: false });\n        };\n\n        this.handleHideStatusSearch = () => {\n            this.setState({ openstatussearch: false });\n        };\n\n        this.populateData();\n        this.populateTypes();\n        this.populateStatus();\n\n    }\n\n    handleValidation(){\n        let errors = {};\n        let formIsValid = true;\n\n        if(!this.state.CLIENT_DOCUMENT_TYPE_NAME){\n            formIsValid = false;\n            errors[\"ClientDocumentTypeName\"] = \"Please Enter Client Document Type Name\";\n        }\n\n        if(!this.state.CLIENTTYPEDESCRIPTION){\n            formIsValid = false;\n            errors[\"ClientType\"] = \"Please select Client Type\";\n        }\n\n        if(!this.state.CLIENT_TYPE_ID)\n        {\n         formIsValid = false;\n         errors[\"ClientType\"] = \"Please select Client Type\";\n        }\n\n        if(!this.state.SYSTEMSTATUSTYPEDESCRIPTION){\n            formIsValid = false;\n            errors[\"SystemStatus\"] = \"Please select System Status Type\";\n        }\n\n        if(!this.state.SYS_STATUS_ID)\n        {\n         formIsValid = false;\n         errors[\"SystemStatus\"] = \"Please select System Status Type\";\n        }\n\n        if(this.DropdownvalidationClientType === 1)\n        {\n            errors[\"ClientType\"] = \"\";\n            this.DropdownvalidationClientType = 0;\n        }\n\n        if(this.DropdownvalidationSystemStatus === 1)\n        {\n            errors[\"SystemStatus\"] = \"\";\n            this.DropdownvalidationSystemStatus = 0;\n        }\n\n        this.setState({errors: errors});\n        return formIsValid;\n    }\n\n    populateData() {\n        const getdata = `\n            query{\n                ClientDocumentTypes{\n                    CLIENT_DOCUMENT_TYPE_ID\n                    CLIENT_DOCUMENT_TYPE_NAME                    \n                    SET_CLIENT_TYPE_ID   \n                    CLIENTTYPE{\n                        CLIENT_TYPE_ID\n                        CLIENT_TYPE_DESCRIPTION\n                    }                    \n                    SET_SYS_STATUS_ID\n                    SYSTEMSTATUS{\n                        SYS_STATUS_ID\n                        SYS_STATUS_NAME\n                    }\n                    CREATEDBY\n                    MODIFIEDBY\n                    CREATED_DATE\n                    MODIFIED_DATE\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                data: data.data.ClientDocumentTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Client Document Types Data');\n                }\n            })\n\n    }\n\n    populateTypes() {\n        const getdata = `\n            query {\n                ClientTypes {\n                    CLIENT_TYPE_ID,\n                    CLIENT_TYPE_DESCRIPTION\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchclienttypedata: data.data.ClientTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Client Type Data');\n                }\n            })\n    }\n\n    populateStatus() {\n        const getdata = `\n            query {\n                SystemStatusFilter (\n                    CATEGORY:\"SET\"\n                    ){\n                        SYS_STATUS_ID,\n                        SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchstatusdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to System Status Type Load Data');\n                }\n            })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        if(this.handleValidation()){\n\n            const form = `\n            mutation{\n                addClientDocumentType(\n                    CLIENT_DOCUMENT_TYPE_NAME:\"${this.state.CLIENT_DOCUMENT_TYPE_NAME}\",                \n                    SET_CLIENT_TYPE_ID:${this.state.CLIENT_TYPE_ID},                                        \n                    SET_SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                    CREATEDBY:\"${this.state.CREATEDBY}\",\n                    MODIFIEDBY:\"${this.state.LASTMODIFIEDBY}\",\n                    CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                    MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                    ){\n                        CLIENT_DOCUMENT_TYPE_ID\n                }\n            }\n            `;\n\n            const formEdit = `\n            mutation{\n                updateClientDocumentType(\n                    CLIENT_DOCUMENT_TYPE_ID:${this.state.CLIENT_DOCUMENT_TYPE_ID},\n                    CLIENT_DOCUMENT_TYPE_NAME:\"${this.state.CLIENT_DOCUMENT_TYPE_NAME}\",                \n                    SET_CLIENT_TYPE_ID:${this.state.CLIENT_TYPE_ID},                                        \n                    SET_SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                    CREATEDBY:\"${this.state.CREATEDBY}\",\n                    MODIFIEDBY:\"${this.state.LASTMODIFIEDBY}\",\n                    CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                    MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                    ){\n                        CLIENT_DOCUMENT_TYPE_ID\n                }\n            }\n            `;\n\n            if (this.state.InsertUpdate === 'Insert') {\n                API.create(form)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.success('Create Record', 'Record Created Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            } else {\n                API.update(formEdit)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.info('Update Record', 'Record Updated Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error Loading Data', 'Failed to Load Data');\n                        }\n                    })\n            }\n        }\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteClientDocumentType(\n                CLIENT_DOCUMENT_TYPE_ID:${this.state.CLIENT_DOCUMENT_TYPE_ID}\n                ){\n                    CLIENT_DOCUMENT_TYPE_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleCloseClientTypeSearch = (e) => {\n\n        this.setState({\n            CLIENT_TYPE_ID: e.CLIENT_TYPE_ID,\n            CLIENTTYPEDESCRIPTION: e.CLIENT_TYPE_DESCRIPTION,\n            openclienttypesearch: false,\n        });\n\n        this.DropdownvalidationClientType=1;\n        this.DropdownvalidationSystemStatus=1;\n        this.handleValidation();\n    };\n\n    handleCloseStatusSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            openstatussearch: false,\n        });\n\n        this.DropdownvalidationClientType=1;\n        this.DropdownvalidationSystemStatus=1;\n        this.handleValidation();\n    };\n\n    handleEditData = (e) => {\n        this.setState({\n            CLIENT_DOCUMENT_TYPE_ID: e.CLIENT_DOCUMENT_TYPE_ID,\n            CLIENT_DOCUMENT_TYPE_NAME: e.CLIENT_DOCUMENT_TYPE_NAME,\n            SET_CLIENT_TYPE_ID: e.SET_CLIENT_TYPE_ID,\n            CLIENTTYPEDESCRIPTION: e.CLIENTTYPE.CLIENT_TYPE_DESCRIPTION,\n            SET_SYS_STATUS_ID: e.SET_SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            CLIENT_DOCUMENT_TYPE_ID: e.CLIENT_DOCUMENT_TYPE_ID,\n            CLIENT_DOCUMENT_TYPE_NAME: e.CLIENT_DOCUMENT_TYPE_NAME,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            CLIENT_DOCUMENT_TYPE_NAME: '',\n            SET_CLIENT_TYPE_ID: '',\n            CLIENTTYPEDESCRIPTION: '',\n            SET_SYS_STATUS_ID: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.CLIENT_DOCUMENT_TYPE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENTTYPE.CLIENT_TYPE_DESCRIPTION.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.CLIENT_DOCUMENT_TYPE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENTTYPE.CLIENT_TYPE_DESCRIPTION.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SYSTEMSTATUS.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    handleSearchClientTypeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchclienttypedata\n        let filteredClientTypeData = this.state.searchFilteredClientTypeData\n        this.setState({ searchclienttypevalue: value });\n\n        if (value.length) {\n            filteredClientTypeData = data.filter(item => {\n                let startsWithCondition =\n                    item.CLIENT_TYPE_DESCRIPTION.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.CLIENT_TYPE_DESCRIPTION.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredClientTypeData })\n        }\n    }\n\n    handleSearchStatusFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchstatusdata\n        let filteredStatusData = this.state.searchFilteredStatusData\n        this.setState({ searchstatusvalue: value });\n\n        if (value.length) {\n            filteredStatusData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredStatusData })\n        }\n    }\n\n    changeEventandValidation = (e) => {\n      \n        if(e.target.name===\"ClientDocumentTypeName\")\n        {\n            this.setState({ \n            [e.target.name]: e.target.value ,\n            CLIENT_DOCUMENT_TYPE_NAME:e.target.value\n            });\n        }\n\n        if(e.target.name===\"ClientType\")\n        {\n            this.setState({ \n            [e.target.name]: e.target.value ,\n            CLIENTTYPEDESCRIPTION:e.target.value\n            });\n        }\n\n        if(e.target.name===\"SystemStatus\")\n        {\n            this.setState({ \n            [e.target.name]: e.target.value ,\n            SYSTEMSTATUSTYPEDESCRIPTION:e.target.value\n            });\n        }\n\n        if(e.target.name===\"ClientTypeID\")\n        {\n            this.setState({ \n            [e.target.name]: e.target.value ,\n            CLIENT_TYPE_ID:e.target.value\n            });\n        }\n\n        if(e.target.name===\"SystemStatusID\")\n        {\n            this.setState({ \n            [e.target.name]: e.target.value ,\n            SYS_STATUS_ID:e.target.value\n            });\n        }        \n         \n    this.handleValidation();\n   \n};\n\n\n    render() {\n\n        const { data, columns, value, filteredData, filteredClientTypeData, filteredStatusData, searchclienttypevalue, searchstatusvalue, searchstatusdata, searchclienttypedata } = this.state\n\n        return (\n            <>\n                <Helmet><title>Client Document Types</title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"Client Document Types\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Client Document Types</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n\n                                    <ClientTypeSearch\n                                        handleSearchClientType={this.handleCloseClientTypeSearch}\n                                        opensearch={this.state.openclienttypesearch}\n                                        handleHideSearch={this.handleHideClientTypeSearch}\n                                        value={searchclienttypevalue}\n                                        data={searchclienttypedata}\n                                        handleFilter={this.handleSearchClientTypeFilter}\n                                        filteredData={filteredClientTypeData}\n                                    />\n\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseStatusSearch}\n                                        opensearch={this.state.openstatussearch}\n                                        handleHideSearch={this.handleHideStatusSearch}\n                                        value={searchstatusvalue}\n                                        data={searchstatusdata}\n                                        handleFilter={this.handleSearchStatusFilter}\n                                        filteredData={filteredStatusData}\n                                    />\n\n                                    <ClientDocumentTypesTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        columns={columns}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <ClientDocumentTypesModal\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowClientTypeSearch={this.handleShowClientTypeSearch}\n                                        handleShowStatusSearch={this.handleShowStatusSearch}\n\n                                        ClientDocumentTypeName={this.state.CLIENT_DOCUMENT_TYPE_NAME}\n                                        changeClientDocumentTypeName={e => this.setState({ CLIENT_DOCUMENT_TYPE_NAME: e.target.value })}\n\n                                        ClientTypeID={this.state.SET_CLIENT_TYPE_ID}\n                                        handleChangeClientTypeID={e => this.setState({ SET_CLIENT_TYPE_ID: e.target.value })}\n\n                                        ClientTypeDescription={this.state.CLIENTTYPEDESCRIPTION}\n                                        handleChangeClientTypeDescription={e => this.setState({ CLIENTTYPEDESCRIPTION: e.target.value })}\n\n                                        SystemStatusTypeID={this.state.SET_SYS_STATUS_ID}\n                                        handleChangeSystemStatusTypeID={e => this.setState({ SET_SYS_STATUS_ID: e.target.value })}\n\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n                                        handleChangeSystemStatusTypeDescription={e => this.setState({ SYSTEMSTATUSTYPEDESCRIPTION: e.target.value })}\n\n                                        changeEventandValidation={this.changeEventandValidation}\n                                        ClientDocumentTypeNameError={this.state.errors[\"ClientDocumentTypeName\"]}\n                                        ClientTypeError={this.state.errors[\"ClientType\"]}\n                                        SystemStatusTypeError={this.state.errors[\"SystemStatus\"]}\n\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n\n                                    />\n\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(ClientDocumentTypes));"],"sourceRoot":""}