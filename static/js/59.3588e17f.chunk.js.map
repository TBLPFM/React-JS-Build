{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/Setups/WorkflowMaster/Tables/WorkflowMasterTable.js","views/pages/Setups/WorkflowMaster/Modals/WorkflowMasterModals.js","views/pages/SearchComponents/ModuleTypeSearch/ModuleTypeSearch.js","views/pages/Setups/WorkflowMaster/WorkflowMaster.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","hasOwnProperty","createButton","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","WorkfowMasterTable","Button","handleEdit","handleDelete","WORKFLOW_MASTER_NAME","SYS_STATUS_TYPE","MODULE_TYPE","MODULE_NAME","APPROVAL_LEVEL","subHeader","responsive","subHeaderComponent","WorkflowMasterModal","Modal","handleHide","id","InsertUpdate","Form","noValidate","validated","onSubmit","handleSubmit","autoComplete","Group","controlId","Label","Control","placeholder","WorkflowMasterName","changeWorkflowMasterName","required","Feedback","ModuleTypeDescription","aria-describedby","variant","handleShowModuleTypeSearch","SystemStatusTypeDescription","handleShowStatusSearch","ApprovalLevel","changeApprovalLevel","Footer","isEnabled","showdelete","handleHideDelete","readOnly","ModuleTypeSearch","handleSearchModuleType","Input","WorkflowMaster","context","event","preventDefault","currentTarget","checkValidity","stopPropagation","form","state","MODULE_ID","SYS_STATUS_ID","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","formEdit","WORKFLOW_MASTER_ID","SET_MODULE_ID","getdata","API","response","workflowDetails","workflowMasterExists","then","clearData","populateData","toastr","success","catch","error","request","info","setState","formDelete","warning","handleCloseModuleTypeSearch","MODULEYPEDESCRIPTION","openmoduletypesearch","handleCloseStatusSearch","SYSTEMSTATUSTYPEDESCRIPTION","openstatussearch","handleEditData","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","includesCondition","includes","handleSearchModuleTypeFilter","searchmoduletypedata","filteredModuleTypeData","searchFilteredModuleTypeData","searchmoduletypevalue","handleSearchStatusFilter","searchstatusdata","filteredStatusData","searchFilteredStatusData","searchstatusvalue","EMAIL","Date","searchcolumns","searchdata","handleHideModuleTypeSearch","handleHideStatusSearch","populateTypes","populateStatus","WorkflowMasters","Modules","SystemStatusFilter","Helmet","Fragment","Row","Col","sm","Card","CardHeader","CardTitle","CardBody","WorkflowMasterTable","constructor","WorkflowMasterModals","handleChangeModuleTypeDescription","handleChangeSystemStatusTypeDescription","connect"],"mappings":"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","file":"static/js/59.3588e17f.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n        { \n          (!props.hasOwnProperty('createButton') || (props.hasOwnProperty('createButton') && props.createButton)) ? (\n            <Can I=\"create\" a={props.role} passThrough>\n              { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n            </Can>\n          ) : (\"\")\n        }\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport {\n    Button\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\nclass WorkfowMasterTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            { allowed => \n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"Workflow Master Name\",\n                selector: \"WORKFLOW_MASTER_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WORKFLOW_MASTER_NAME}</p>\n            },\n            {\n                name: \"Status\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_TYPE.SYS_STATUS_NAME}</p>\n            },\n            {\n                name: \"Module Type\",\n                selector: \"MODULE_TYPE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.MODULE_TYPE.MODULE_NAME}</p>\n            },\n            {\n                name: \"Approval Level\",\n                selector: \"APPROVAL_LEVEL\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.APPROVAL_LEVEL}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n            <DataTable\n                className=\"dataTable-custom\"\n                data={this.props.value.length ? this.props.filteredData : this.props.data}\n                columns={this.tableProperties.columns}\n                noHeader\n                pagination\n                subHeader\n                striped\n                responsive\n                subHeaderComponent={\n                    <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                }\n            />\n            </>\n\n        )\n    }\n}\n\n\nexport default WorkfowMasterTable","import React from 'react';\nimport { Button, Modal, Form, InputGroup } from 'react-bootstrap';\nimport { Search } from 'react-feather';\n\nclass WorkflowMasterModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} Workflow Master\n                        </Modal.Title>\n                    </Modal.Header>\n\n                    <Form noValidate validated={this.props.validated} onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                                <Form.Group controlId=\"WorkflowMasterName\">\n                                    <Form.Label>Workflow Name</Form.Label>\n                                    <Form.Control type=\"text\"\n                                        name=\"WorkflowMasterName\"\n                                        placeholder=\"Enter Workflow Master Name\"\n                                        value={this.props.WorkflowMasterName}\n                                        onChange={this.props.changeWorkflowMasterName}\n                                        required\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please enter Workflow Master Name.\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group controlId=\"ModuleType\">\n                                    <Form.Label>Module Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"ModuleType\"\n                                            value={this.props.ModuleTypeDescription}\n                                            placeholder=\"Search Module Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowModuleTypeSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select Module Type.\n                                        </Form.Control.Feedback>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Form.Group controlId=\"SystemStatusType\">\n                                    <Form.Label>System Status Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"SystemStatus\"\n                                            value={this.props.SystemStatusTypeDescription}\n                                            placeholder=\"Search System Status Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowStatusSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please select status.\n                                        </Form.Control.Feedback>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Form.Group controlId=\"ApprovalLevel\">\n                                    <Form.Label>Approval Level</Form.Label>\n                                    <Form.Control type=\"number\"\n                                        name=\"ApprovalLevel\"\n                                        placeholder=\"Enter Approval Level\"\n                                        value={this.props.ApprovalLevel}\n                                        onChange={this.props.changeApprovalLevel}\n                                        required\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please enter Approval Level.\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete Workflow Master\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description_del\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.WorkflowMasterName} onChange={this.props.changeWorkflowMasterName} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default WorkflowMasterModal;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass ModuleTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchModuleType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"MODULE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.MODULE_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search Module Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default ModuleTypeSearch","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr'\nimport WorkflowMasterTable from \"./Tables/WorkflowMasterTable\";\nimport WorkflowMasterModals from \"./Modals/WorkflowMasterModals\";\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport ModuleTypeSearch from '../../SearchComponents/ModuleTypeSearch/ModuleTypeSearch';\n\nclass WorkflowMaster extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            validated: false,\n            columns: [],\n            data: [],\n            filteredData: [],\n            filteredModuleTypeData: [],\n            filteredStatusData: [],\n            value: '',\n            show: false,\n            showdelete: false,\n            APPROVAL_LEVEL: 0,\n            WORKFLOW_MASTER_ID: 0,\n            WORKFLOW_MASTER_NAME: '',\n            SET_MODULE_ID: 0,\n            SYS_STATUS_ID: 0,\n            CREATEDBY: props.user.EMAIL,\n            MODIFIEDBY: props.user.EMAIL,\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n            InsertUpdate: '',\n\n            openmoduletypesearch: false,\n            openstatussearch: false,\n\n            MODULEYPEDESCRIPTION: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n\n            searchcolumns: [],\n\n            searchdata: [],\n            searchmoduletypedata: [],\n            searchstatusdata: [],\n\n            searchFilteredModuleTypeData: [],\n            searchFilteredStatusData: [],\n\n            searchmoduletypevalue: '',\n            searchstatusvalue: '',\n\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n        this.handleShowModuleTypeSearch = () => {\n            this.setState({ openmoduletypesearch: true });\n        };\n\n        this.handleShowStatusSearch = () => {\n            this.setState({ openstatussearch: true });\n        };\n\n        this.handleHideModuleTypeSearch = () => {\n            this.setState({ openmoduletypesearch: false });\n        };\n\n        this.handleHideStatusSearch = () => {\n            this.setState({ openstatussearch: false });\n        };\n\n        this.populateData();\n        this.populateTypes();\n        this.populateStatus();\n\n    }\n\n    populateData() {\n        const getdata = `\n            query{\n                WorkflowMasters{\n                    WORKFLOW_MASTER_ID\n                    WORKFLOW_MASTER_NAME\n                    SET_MODULE_ID   \n                    MODULE_TYPE{\n                        MODULE_ID\n                        MODULE_NAME\n                    }\n                    SYS_STATUS_ID\n                    SYS_STATUS_TYPE{\n                        SYS_STATUS_ID\n                        SYS_STATUS_NAME\n                    }\n                    APPROVAL_LEVEL\n                    CREATEDBY\n                    MODIFIEDBY\n                    CREATED_DATE\n                    MODIFIED_DATE\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                data: data.data.WorkflowMasters\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Workflow Master Data');\n                }\n            })\n\n    }\n\n    populateTypes() {\n        const getdata = `\n            query {\n                Modules {\n                    MODULE_ID,\n                    MODULE_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchmoduletypedata: data.data.Modules\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Modules Data');\n                }\n            })\n    }\n\n    populateStatus() {\n        const getdata = `\n            query {\n                SystemStatusFilter (\n                    CATEGORY:\"SET\"\n                    ){\n                        SYS_STATUS_ID,\n                        SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchstatusdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load System Status Type Data');\n                }\n            })\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const validate = event.currentTarget;\n        if (validate.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n\n            const form = `\n                mutation {\n                    addWorkflowMaster(\n                        WORKFLOW_MASTER_NAME:\"${this.state.WORKFLOW_MASTER_NAME}\",\n                        SET_MODULE_ID:${this.state.MODULE_ID},\n                        SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                        APPROVAL_LEVEL:${this.state.APPROVAL_LEVEL},\n                        CREATEDBY:\"${this.state.CREATEDBY}\",\n                        MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                        CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                        MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                    ) {\n                        WORKFLOW_MASTER_ID\n                    }\n                }   \n            `;\n\n            const formEdit = `\n                mutation {\n                    updateWorkflowMaster(\n                        WORKFLOW_MASTER_ID:${this.state.WORKFLOW_MASTER_ID},\n                        WORKFLOW_MASTER_NAME:\"${this.state.WORKFLOW_MASTER_NAME}\",\n                        SET_MODULE_ID:${this.state.SET_MODULE_ID},\n                        SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                        APPROVAL_LEVEL:${this.state.APPROVAL_LEVEL},\n                        CREATEDBY:\"${this.state.CREATEDBY}\",\n                        MODIFIEDBY:\"${this.state.MODIFIEDBY}\",\n                        CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                        MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                    ) {\n                        WORKFLOW_MASTER_ID\n                    }\n                }\n            `;\n\n            let getdata = ``;\n\n            if (this.state.InsertUpdate === 'Insert') {\n                getdata = `\n                    query {\n                        workflowMasterExists (\n                            WORKFLOW_MASTER_NAME:\"${this.state.WORKFLOW_MASTER_NAME}\",\n                            SET_MODULE_ID:${this.state.MODULE_ID},\n                        ) {\n                            WORKFLOW_MASTER_ID\n                        }\n                    }\n                `;\n            } else {\n                getdata = `\n                    query {\n                        workflowMasterExists (\n                            WORKFLOW_MASTER_NAME:\"${this.state.WORKFLOW_MASTER_NAME}\",\n                            SET_MODULE_ID:${this.state.SET_MODULE_ID},\n                        ) {\n                            WORKFLOW_MASTER_ID\n                        }\n                    }\n                `;\n            }\n\n            const response = await API.getData(getdata);\n\n            const workflowDetails = response.data.data.workflowMasterExists\n\n            if (this.state.InsertUpdate === 'Insert' && workflowDetails && workflowDetails.WORKFLOW_MASTER_ID <= 0) {\n                API.create(form)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.success('Create Record', 'Record Created Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error !!', 'Failed to create workflow master');\n                        }\n                    })\n            } else {\n                toastr.error('ERROR !!', 'Workflow master name or module already Exists');\n            }\n            \n            if (this.state.InsertUpdate === 'Update' && workflowDetails && workflowDetails.WORKFLOW_MASTER_ID === this.state.WORKFLOW_MASTER_ID) {\n                API.update(formEdit)\n                    .then(() => {\n                        this.clearData();\n                        this.handleHide();\n                        this.populateData();\n                        toastr.info('Update Record', 'Record Updated Successfully');\n                    }).catch(error => {\n                        if (error.response || error.request) {\n                            toastr.error('Error !!', 'Failed to update workflow master');\n                        }\n                    })\n            }\n        }\n\n        this.setState({\n            validated: true\n        })\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteWorkflowMaster(\n                WORKFLOW_MASTER_ID:${this.state.WORKFLOW_MASTER_ID}\n                ){\n                    WORKFLOW_MASTER_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleCloseModuleTypeSearch = (e) => {\n\n        this.setState({\n            MODULE_ID: e.MODULE_ID,\n            MODULEYPEDESCRIPTION: e.MODULE_NAME,\n            openmoduletypesearch: false,\n        });\n    };\n\n    handleCloseStatusSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            openstatussearch: false,\n        });\n    };\n\n    handleEditData = (e) => {\n        this.setState({\n            WORKFLOW_MASTER_ID: e.WORKFLOW_MASTER_ID,\n            WORKFLOW_MASTER_NAME: e.WORKFLOW_MASTER_NAME,\n            SET_MODULE_ID: e.SET_MODULE_ID,\n            MODULEYPEDESCRIPTION: e.MODULE_TYPE.MODULE_NAME,\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            APPROVAL_LEVEL: e.APPROVAL_LEVEL,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_TYPE.SYS_STATUS_NAME,\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            WORKFLOW_MASTER_ID: e.WORKFLOW_MASTER_ID,\n            WORKFLOW_MASTER_NAME: e.WORKFLOW_MASTER_NAME,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n            WORKFLOW_MASTER_NAME: '',\n            SET_MODULE_ID: '',\n            MODULEYPEDESCRIPTION: '',\n            SYS_STATUS_ID: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            APPROVAL_LEVEL: '',\n            validated: false\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_TYPE.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.WORKFLOW_MASTER_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.MODULE_TYPE.MODULE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_TYPE.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.WORKFLOW_MASTER_NAME.toString().toLowerCase().includes(value.toLowerCase()) ||\n                    item.MODULE_TYPE.MODULE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    handleSearchModuleTypeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchmoduletypedata\n        let filteredModuleTypeData = this.state.searchFilteredModuleTypeData\n        this.setState({ searchmoduletypevalue: value });\n\n        if (value.length) {\n            filteredModuleTypeData = data.filter(item => {\n                let startsWithCondition =\n                    item.MODULE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.MODULE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredModuleTypeData })\n        }\n    }\n\n    handleSearchStatusFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchstatusdata\n        let filteredStatusData = this.state.searchFilteredStatusData\n        this.setState({ searchstatusvalue: value });\n\n        if (value.length) {\n            filteredStatusData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredStatusData })\n        }\n    }\n\n    render() {\n\n        const { data, columns, value, filteredData, filteredModuleTypeData, filteredStatusData, searchmoduletypevalue, searchstatusvalue, searchstatusdata, searchmoduletypedata } = this.state\n\n        return (\n            <>\n                <Helmet><title>Workflow Master</title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Setup\"\n                        breadCrumbActive=\"Workflow Master\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Workflow Master</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n\n                                    <ModuleTypeSearch\n                                        handleSearchModuleType={this.handleCloseModuleTypeSearch}\n                                        opensearch={this.state.openmoduletypesearch}\n                                        handleHideSearch={this.handleHideModuleTypeSearch}\n                                        value={searchmoduletypevalue}\n                                        data={searchmoduletypedata}\n                                        handleFilter={this.handleSearchModuleTypeFilter}\n                                        filteredData={filteredModuleTypeData}\n                                    />\n\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseStatusSearch}\n                                        opensearch={this.state.openstatussearch}\n                                        handleHideSearch={this.handleHideStatusSearch}\n                                        value={searchstatusvalue}\n                                        data={searchstatusdata}\n                                        handleFilter={this.handleSearchStatusFilter}\n                                        filteredData={filteredStatusData}\n                                    />\n\n                                    <WorkflowMasterTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        columns={columns}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <WorkflowMasterModals\n                                        validated={this.state.validated}\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowModuleTypeSearch={this.handleShowModuleTypeSearch}\n                                        handleShowStatusSearch={this.handleShowStatusSearch}\n\n                                        ModuleTypeDescription={this.state.MODULEYPEDESCRIPTION}\n                                        handleChangeModuleTypeDescription={e => this.setState({ MODULEYPEDESCRIPTION: e.target.value })}\n\n                                        WorkflowMasterName={this.state.WORKFLOW_MASTER_NAME}\n                                        changeWorkflowMasterName={e => this.setState({ WORKFLOW_MASTER_NAME: e.target.value })}\n\n                                        ApprovalLevel={this.state.APPROVAL_LEVEL}\n                                        changeApprovalLevel={e => this.setState({ APPROVAL_LEVEL: e.target.value })}\n\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n                                        handleChangeSystemStatusTypeDescription={e => this.setState({ SYSTEMSTATUSTYPEDESCRIPTION: e.target.value })}\n\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n\n                                    />\n\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(WorkflowMaster));"],"sourceRoot":""}