{"version":3,"sources":["utility/permissions/ability.js","utility/permissions/can.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/pages/MainDataTable/TableCustomHeader.js","utility/dateAndTime.js","views/pages/SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/pages/SearchComponents/ModuleSearch/ModuleSearch.js","views/pages/SearchComponents/SubCountyTypeSearch/SubCountyTypeSearch.js","views/pages/SearchComponents/FeeCategorySearch/FeeCategorySearch.js","views/pages/SearchComponents/WardsSearch/WardsSearch.js","views/pages/SearchComponents/FeesSearch/FeesSearch.js","views/pages/SearchComponents/ClientRegistrationSearch/ClientRegistrationSearch.js","views/pages/SearchComponents/HouseTypeSearch/HouseTypeSearch.js","views/pages/SearchComponents/EstateSearch/EstateSearch.js","views/pages/Registration/HouseRegistration/Tables/HouseRegistrationTables.js","views/pages/Registration/HouseRegistration/Modals/HouseRegistrationModal.js","views/pages/SearchComponents/HouseDetailsSearch/HouseDetailsSearch.js","views/pages/Registration/HouseRegistration/HouseRegistration.js"],"names":["currentAuthUser","ability","Ability","AbilityBuilder","can","rules","defineRulesFor","user","USER_GROUPS","canArr","length","forEach","user_group","GROUP_ROLES","group_role","ACTIVE","READ_PERMISSION","push","ROLE","ROLE_NAME","CREATE_PERMISSION","UPDATE_PERMISSION","DELETE_PERMISSION","PRINT_PERMISSION","APPROVE_PERMISSION","generateUserAbilities","store","getState","auth","update","createCanBoundTo","BreadCrumbs","className","this","props","breadCrumbTitle","tag","to","size","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","color","style","left","right","React","Component","TableCustomHeader","I","a","role","passThrough","allowed","Ripple","disabled","onClick","handleShow","value","onChange","e","handleFilter","ShowDate","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","SystemStatusTypeSearch","tableProperties","columns","name","cell","row","handleSearchSystemStatusType","selector","sortable","SYS_STATUS_NAME","show","opensearch","onHide","handleHideSearch","Header","closeButton","Title","Body","data","filteredData","noHeader","pagination","striped","InputGroup","forwardRef","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","RMSModuleSearch","handleSearchModule","MODULE_NAME","paginationPerPage","SubCountySearch","handleSearchSubCounty","SUBCOUNTY_NAME","FeeCategorySearch","handleSearchFEECATEGORY","FEECATEGORY_CODE","FEECATEGORY_NAME","WardsSearch","handleSearchWards","WARD_NAME","FeesSearch","handleSearchFees","FEE_NAME","ClientRegistrationSearch","handleSearchClientRegistration","CLIENT_NAME","CLIENT_DOCUMENT_NUMBER","HouseTypeSearch","handleSearchHouseTypes","HOUSE_TYPE","EstateSearch","handleSearchEstates","ESTATE_NAME","HouseRegistrationTable","Button","handleEdit","handleDelete","REG_TENANT_NUMBER","CLIENT","ESTATETYPE","HOUSETYPE","HOUSEDETAILS","HOUSE_NUMBER","MODULES","SUBCOUNTY","WARD","FEE","subHeader","responsive","subHeaderComponent","HouseRegistrationModal","Modal","handleHide","id","InsertUpdate","Form","onSubmit","handleSubmit","autoComplete","Row","Group","Col","md","controlId","Label","Control","placeholder","TenantNo","changeTenantNo","EstateID","handleChangeEstateID","hidden","EstateName","handleChangeEstateName","aria-describedby","required","readOnly","variant","handleShowEstateName","HouseTypeID","handleChangeHouseTypeID","HouseType","handleChangeHouseType","handleShowHouseType","HouseNumber","handleChangeHouseNumber","handleShowHouseDetail","SubCountyID","handleChangeSubCountyID","SubCountyName","handleChangeSubCountyName","handleShowSubCounty","WardID","handleChangeWardID","WardName","handleChangeWardName","handleShowWard","ModuleID","handleChangeModulesID","ModuleName","handleChangeModuleName","handleShowModules","FeeCategoryID","handleChangeFeeCategoryID","FeeCategoryName","handleChangeFeeCategoryName","handleShowFeeCategorySearch","FeeID","handleChangeFeeID","FeeName","handleChangeFeeName","handleShowFees","SystemStatusTypeID","handleChangeSystemStatusTypeID","SystemStatusTypeDescription","handleChangeSystemStatusTypeDescription","handleShowSearch","ClientID","handleChangeClientID","ClientName","handleChangeClientName","handleShowClientRegistrationSearch","ClientPostalAddress","changeClientPostalAddress","ClientDocumentNumber","changeClientDocumentNumber","ClientMobileNumber","changeMobileNumber","Footer","isEnabled","showdelete","handleHideDelete","HouseDetailsSearch","handleSearchHouseDetails","Input","HouseRegistration","context","event","preventDefault","form","state","SET_ESTATE_ID","SET_HOUSE_TYPE_ID","SET_HOUSE_DETAILS","SET_MODULE_ID","SET_SUB_COUNTY_ID","SET_WARD_ID","SET_DEPT_FEECATEGORY_ID","SET_DEPT_FEE_ID","CLIENT_ID","SYS_STATUS_ID","CREATEDBY","MODIFIEDBY","CREATED_DATE","MODIFIED_DATE","formEdit","REG_HOUSE_ID","API","then","clearData","populateData","toastr","success","catch","error","response","request","info","handleCloseEstateNamesSearch","setState","ESTATE_ID","openestatenamessearch","handleCloseHouseTypesSearch","HOUSE_TYPE_ID","openhousetypessearch","handleCloseHouseDetailsSearch","HOUSE_DETAILS_ID","openhousedetailssearch","handleCloseModulesSearch","MODULE_ID","openmodulessearch","populateFeeCategory","handleCloseSubCountySearch","SUBCOUNTY_ID","opensubcountysearch","populateWard","handleCloseWardSearch","WARD_ID","openwardsearch","handleCloseFeeCategorySearch","FEECATEGORY_ID","openfeecategorysearch","populateFee","handleCloseFeeSearch","FEE_ID","openfeesearch","handleCloseSystemStatusSearch","SYSTEMSTATUSTYPEDESCRIPTION","opensystemstatussearch","handleCloseClientRegistrationSearch","CLIENT_POSTAL_ADDRESS","POSTAL_ADDRESS","CLIENT_MOBILE_NUMBER","MOBILE_NUMBER","openclientregistrationsearch","handleEditData","FEECATEGORY","SYSTEMSTATUS","formDelete","warning","handleDeleteData","target","filter","item","startsWithCondition","toString","toLowerCase","startsWith","FEECATEGORY_TYPE","SYSTEM_STATUS_NAME","includesCondition","handleSearchEstateNamesFilter","searchestatenamesdata","filteredEstateNamesData","searchFilteredEstateNamesData","searchestatenamesvalue","includes","handleSearchHouseTypesFilter","searchhousetypesdata","filteredHouseTypesData","searchFilteredHouseTypesData","searchhousetypesvalue","handleSearchHouseDetailsFilter","searchhousedetailsdata","filteredHouseDetailsData","searchFilteredHouseDetailsData","searchhousedetailsvalue","handleSearchModulesFilter","searchmodulesdata","filteredModulesData","searchFilteredModulesData","searchmodulesvalue","handleSearchSubCountyFilter","searchsubcountydata","filteredSubCountyData","searchFilteredSubCountyData","searchsubcountyvalue","handleSearchWardFilter","searchwarddata","filteredWardData","searchFilteredWardData","searchwardvalue","handleSearchFeeCategoryFilter","searchfeecategorydata","filteredFeeCategoryData","searchFilteredFeeCategoryData","handleSearchFeeFilter","searchfeedata","filteredFeeData","searchFilteredFeeData","searchfeevalue","handleSearchSystemStatusFilter","searchsystemstatusdata","filteredsystemstatusData","searchFilteredSystemStatusData","searchsystemstatusvalue","handleSearchClientRegistrationFilter","searchclientregistrationdata","filteredClientRegistrationData","searchFilteredClientRegistrationData","searchclientregistrationvalue","EMAIL","searchcolumns","searchdata","searchFilteredData","searchvalue","searchfeecategoryvalue","handleShowEstateNamesSearch","handleShowHouseTypesSearch","handleShowHouseDetailsSearch","handleShowModulesSearch","handleShowSubCountySearch","handleShowWardSearch","handleShowFeesSearch","handleHideEstateNamesSearch","handleHideHouseTypesSearch","handleHideHouseDetailsSearch","handleHideModulesSearch","handleHideSubCountySearch","handleHideWardSearch","handleHideFeeCategorySearch","handleHideFeesSearch","handleShowStatusSearch","openstatussearch","handleHideClientRegistrationSearch","populateEstates","populateHouseTypes","populateHouseDetails","populateModules","populateSubCounty","populateStatus","populateClientRegistration","HouseRegisters","Estates","HouseTypes","HouseDetails","Modules","SubCounties","getdata","WardFilter","FeeCategoryFilter","FeeFilter","SystemStatusFilter","Clients","filteredModuelesData","Helmet","Fragment","sm","Card","CardHeader","CardTitle","CardBody","SubCountyTypeSearch","handleHideSystemStatusSearch","constructor","HouseDetailsID","handleChangeHouseDetailsID","handleChangeWardIDID","handleChangeFeeIDID","handleChangeFeeCategoryIDID","changeClientMobileNumber","connect"],"mappings":"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","file":"static/js/9.16e893dd.chunk.js","sourcesContent":["\nimport { Ability, AbilityBuilder } from '@casl/ability';\n\nimport { store } from '../../redux/storeConfig/store'\n\nconst ability = new Ability([])\nconst { can, rules } = new AbilityBuilder();\n\nfunction generateUserAbilities(USER_GROUPS) {\n  let canArr = [];\n\n  if (USER_GROUPS.length > 0) {\n    USER_GROUPS.forEach(user_group => {\n      if (user_group.GROUP_ROLES.length > 0) {\n        user_group.GROUP_ROLES.forEach(group_role => {\n          if (group_role.ACTIVE){\n            if (group_role.READ_PERMISSION) { canArr.push(can(\"read\", group_role.ROLE.ROLE_NAME, group_role.READ_PERMISSION)); }\n            if (group_role.CREATE_PERMISSION) { canArr.push(can(\"create\", group_role.ROLE.ROLE_NAME, group_role.CREATE_PERMISSION)); }\n            if (group_role.UPDATE_PERMISSION) { canArr.push(can(\"update\", group_role.ROLE.ROLE_NAME, group_role.UPDATE_PERMISSION)); }\n            if (group_role.DELETE_PERMISSION) { canArr.push(can(\"delete\", group_role.ROLE.ROLE_NAME, group_role.DELETE_PERMISSION)); }\n            if (group_role.PRINT_PERMISSION) { canArr.push(can(\"print\", group_role.ROLE.ROLE_NAME, group_role.PRINT_PERMISSION)); }\n            if (group_role.APPROVE_PERMISSION) { canArr.push(can(\"approve\", group_role.ROLE.ROLE_NAME, group_role.APPROVE_PERMISSION)); }\n          }\n        });\n      }\n    });\n  }\n\n  return canArr;\n}\n\nfunction defineRulesFor(user) {\n  //console.log(user);\n  if (user) {\n    generateUserAbilities(user.USER_GROUPS)\n  }\n\n  return rules\n}\n\nlet currentAuthUser;\n(() => {\n  const prevAuth = currentAuthUser;\n  currentAuthUser = store.getState().auth.user;\n\n  if (prevAuth !== currentAuthUser) {\n    ability.update(defineRulesFor(currentAuthUser));\n  }\n})();\n\nexport default ability;","import { createCanBoundTo } from '@casl/react';\nimport ability from './ability';\n \nexport default createCanBoundTo(ability)","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { Home, Settings } from \"react-feather\"\nimport { NavLink } from \"react-router-dom\"\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                \"\"\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    \"\"\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\n                    Chat\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\n                    Email\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\n                    Calendar\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","\nimport React from \"react\"\nimport {\n  Input,\n  Button,\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport Can from '../../../utility/permissions/can';\n\nconst TableCustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between w-100\">\n      <div className=\"add-new\">\n      <Can I=\"create\" a={props.role} passThrough>\n          { allowed => <Button.Ripple disabled={!allowed} className=\"mr-1 mb-1 bg-gradient-primary round\" color=\"none\" onClick={props.handleShow}>Add New</Button.Ripple> }\n        </Can>\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableCustomHeader\n","\nexport function ShowDate() {\n\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0');\n  let yyyy = today.getFullYear();\n\n  return yyyy + '-' + mm + '-' + dd;\n}\n\n\nexport function ShowTime() {\n\n  let today = new Date();\n  let time = today.getHours() + \":\" + today.getMinutes();\n\n  return time;\n}\n","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SystemStatusTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSystemStatusType(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Description\",\n                selector: \"SYS_STATUS_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SYS_STATUS_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search/> Search System Status Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SystemStatusTypeSearch","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass RMSModuleSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchModule(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"MODULE_NAME\",\n                selector: \"MODULE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.MODULE_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Module Name\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                            paginationPerPage={5}\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default RMSModuleSearch","import React from \"react\"\nimport { Button, Input } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass SubCountySearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchSubCounty(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"SUBCOUNTY NAME\",\n                selector: \"SUBCOUNTY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SUBCOUNTY_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Sub County Name\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                            paginationPerPage={5}\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default SubCountySearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass FeeCategorySearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchFEECATEGORY(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Fee Category Code\",\n                selector: \"FEECATEGORY_CODE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FEECATEGORY_CODE}</p>\n            },\n            {\n                name: \"Fee Category Name\",\n                selector: \"FEECATEGORY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FEECATEGORY_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Fee Category\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default FeeCategorySearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass WardsSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchWards(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Wards\",\n                selector: \"WARD_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WARD_NAME}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Ward\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default WardsSearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass FeesSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchFees(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Fees\",\n                selector: \"FEE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FEE_NAME}</p>\n            }\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                    size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Detailed Description\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default FeesSearch","import React from \"react\";\nimport { Button, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\n\nclass ClientRegistrationSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchClientRegistration(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Client Name\",\n                selector: \"CLIENT_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_NAME}</p>\n            },\n            {\n                name: \"Document Number\",\n                selector: \"CLIENT_DOCUMENT_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT_DOCUMENT_NUMBER}</p>\n            },\n\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Citizen\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                            paginationPerPage={5}\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ClientRegistrationSearch","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass HouseTypeSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchHouseTypes(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"House Type\",\n                selector: \"HOUSE_TYPE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.HOUSE_TYPE}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search House Types\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default HouseTypeSearch","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass EstateSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchEstates(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"Estate Type\",\n                selector: \"ESTATE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.ESTATE_NAME}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search Estates\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default EstateSearch","import React from \"react\"\nimport { Button } from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport TableCustomHeader from \"../../../MainDataTable/TableCustomHeader\";\nimport { Edit, Trash2 } from \"react-feather\"\nimport Can from '../../../../../utility/permissions/can';\n\nclass HouseRegistrationTable extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Can I=\"update\" a={this.props.role} passThrough>\n                            {allowed =>\n                                <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleEdit(row)}\n                                >\n                                    <Edit size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n\n                        <Can I=\"delete\" a={this.props.role} passThrough>\n                            {allowed =>\n                                <Button.Ripple className=\"mr-1 mb-1  bg-gradient-danger\" size=\"sm\" color=\"none\"\n                                    disabled={!allowed}\n                                    onClick={() => this.props.handleDelete(row)}\n                                ><Trash2 size={14} />\n                                </Button.Ripple>\n                            }\n                        </Can>\n                    </>\n                )\n            },\n            {\n                name: \"Tenant Number\",\n                selector: \"REG_TENANT_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.REG_TENANT_NUMBER}</p>\n            },\n            {\n                name: \"Client Name\",\n                selector: \"CLIENT_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.CLIENT.CLIENT_NAME}</p>\n            },\n            {\n                name: \"Estate Name\",\n                selector: \"ESTATE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.ESTATETYPE.ESTATE_NAME}</p>\n            },\n\n            {\n                name: \"House Type\",\n                selector: \"HOUSE_TYPE\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.HOUSETYPE.HOUSE_TYPE}</p>\n            },\n\n            {\n                name: \"House Number\",\n                selector: \"HOUSE_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.HOUSEDETAILS.HOUSE_NUMBER}</p>\n            },\n            {\n                name: \"Module\",\n                selector: \"MODULE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.MODULES.MODULE_NAME}</p>\n            },\n            {\n                name: \"SubCounty\",\n                selector: \"SUBCOUNTY_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.SUBCOUNTY.SUBCOUNTY_NAME}</p>\n            },\n            {\n                name: \"Ward\",\n                selector: \"WARD_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.WARD.WARD_NAME}</p>\n            },\n            {\n                name: \"Revenue Name\",\n                selector: \"FEE_NAME\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.FEE.FEE_NAME}</p>\n            },\n\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n                <DataTable\n                    className=\"dataTable-custom\"\n                    data={this.props.value.length ? this.props.filteredData : this.props.data}\n                    columns={this.tableProperties.columns}\n                    noHeader\n                    pagination\n                    subHeader\n                    striped\n                    responsive\n                    subHeaderComponent={\n                        <TableCustomHeader role={this.props.role} value={this.props.value} handleShow={this.props.handleShow} handleFilter={this.props.handleFilter} />\n\n                    }\n                />\n            </>\n\n        )\n    }\n}\n\n\nexport default HouseRegistrationTable","import React from 'react';\nimport { Button, Modal, Form, Col, InputGroup } from 'react-bootstrap';\n\nimport { Search } from 'react-feather';\n\nclass HouseRegistrationModal extends React.Component {\n    render() {\n        return (\n            <div>\n                <Modal\n                    show={this.props.show}\n                    onHide={this.props.handleHide}\n                    size=\"lg\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            {this.props.InsertUpdate} House Registration\n                        </Modal.Title>\n                    </Modal.Header>\n\n                    <Form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"3\" controlId=\"TenantNumber\">\n                                    <Form.Label>Tenant Number</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Enter Tenant Number\" value={this.props.TenantNo} onChange={this.props.changeTenantNo} />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"EstateNames\">\n                                    <Form.Label>Estate Name</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.EstateID} onChange={this.props.handleChangeEstateID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.EstateName}\n                                            onChange={this.props.handleChangeEstateName}\n                                            placeholder=\"Search Estate Name\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowEstateName}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"HouseTypes\">\n                                    <Form.Label>House Types</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.HouseTypeID} onChange={this.props.handleChangeHouseTypeID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.HouseType}\n                                            onChange={this.props.handleChangeHouseType}\n                                            placeholder=\"Search House Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowHouseType}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"EstateNames\">\n                                    <Form.Label>House Detail</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.HouseTypeID} onChange={this.props.handleChangeHouseTypeID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.HouseNumber}\n                                            onChange={this.props.handleChangeHouseNumber}\n                                            placeholder=\"Search House Number\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowHouseDetail}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"SubCounty\">\n                                    <Form.Label>SubCounty Name</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.SubCountyID} onChange={this.props.handleChangeSubCountyID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.SubCountyName}\n                                            onChange={this.props.handleChangeSubCountyName}\n                                            placeholder=\"Search SubCounty Name\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSubCounty}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n\n                                <Form.Group as={Col} md=\"6\" controlId=\"Ward\">\n                                    <Form.Label>Ward Name</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.WardID} onChange={this.props.handleChangeWardID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.WardName}\n                                            onChange={this.props.handleChangeWardName}\n                                            placeholder=\"Search Ward Name\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowWard}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"Fee\">\n                                    <Form.Label>Module</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.ModuleID} onChange={this.props.handleChangeModulesID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.ModuleName}\n                                            onChange={this.props.handleChangeModuleName}\n                                            placeholder=\"Search Module Name\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowModules}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"FeeCategory\">\n                                    <Form.Label>Revenue Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.FeeCategoryID} onChange={this.props.handleChangeFeeCategoryID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.FeeCategoryName}\n                                            onChange={this.props.handleChangeFeeCategoryName}\n                                            placeholder=\"Search Revenue Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowFeeCategorySearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"Fee\">\n                                    <Form.Label>Revenue Name</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.FeeID} onChange={this.props.handleChangeFeeID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.FeeName}\n                                            onChange={this.props.handleChangeFeeName}\n                                            placeholder=\"Search Revenue Name\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowFees}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"SystemStatusType\">\n                                    <Form.Label>System Status Type</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.SystemStatusTypeID} onChange={this.props.handleChangeSystemStatusTypeID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.SystemStatusTypeDescription}\n                                            onChange={this.props.handleChangeSystemStatusTypeDescription}\n                                            placeholder=\"Search System Status Type\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"CitizenID\">\n                                    <Form.Label>Client</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control value={this.props.ClientID} onChange={this.props.handleChangeClientID} hidden />\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.props.ClientName}\n                                            onChange={this.props.handleChangeClientName}\n                                            placeholder=\"Search Client Name\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            readOnly\n                                        />\n                                        <InputGroup.Prepend>\n                                            <Button variant=\"info\" size=\"sm\" onClick={this.props.handleShowClientRegistrationSearch}>\n                                                <Search />\n                                            </Button>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"PostalAddress\">\n                                    <Form.Label>Postal Address</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Postal Address\" value={this.props.ClientPostalAddress}\n                                        onChange={this.props.changeClientPostalAddress} readOnly />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"6\" controlId=\"DocumentNumber\">\n                                    <Form.Label>Document Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Document Number\" value={this.props.ClientDocumentNumber}\n                                        onChange={this.props.changeClientDocumentNumber} readOnly />\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"6\" controlId=\"MobileNumber\">\n                                    <Form.Label>Tele Phone Number</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Mobile Number\" value={this.props.ClientMobileNumber}\n                                        onChange={this.props.changeMobileNumber} readOnly />\n                                </Form.Group>\n                            </Form.Row>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHide}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={this.props.isEnabled}>\n                                {this.props.InsertUpdate}\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    show={this.props.showdelete}\n                    onHide={this.props.handleHideDelete}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"AddUpdate\">\n                            Delete House\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.props.handleDelete} autoComplete=\"off\">\n                        <Modal.Body>\n                            <Form.Group controlId=\"description_del\">\n                                <h4>Are you sure you want to delete this record?</h4>\n                                <Form.Control type=\"text\" placeholder=\"Click Delete Button\" value={this.props.TenantNo} onChange={this.props.changeTenantNo} readOnly />\n                            </Form.Group>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button variant=\"success\" onClick={this.props.handleHideDelete}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Yes Delete\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default HouseRegistrationModal;","import React from \"react\"\nimport {\n    Button, Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport { Search } from \"react-feather\";\nimport { Modal } from 'react-bootstrap';\n\nclass HouseDetailsSearch extends React.Component {\n\n    tableProperties = {\n        columns: [\n            {\n                name: \"Action\",\n                cell: (row) => (\n                    <>\n                        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" size=\"sm\" color=\"none\"\n                            onClick={() => this.props.handleSearchHouseDetails(row)}\n                        ><Search size={14} />\n                        </Button.Ripple>\n                    </>\n                )\n            },\n            {\n                name: \"House Type\",\n                selector: \"HOUSE_NUMBER\",\n                sortable: true,\n                cell: row => <p className=\"mb-0\">{row.HOUSE_NUMBER}</p>\n            }\n        ]\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <Modal\n                    show={this.props.opensearch}\n                    onHide={this.props.handleHideSearch}\n                // size='lg'\n                >\n                    <Modal.Header className=\"bg-info\" closeButton>\n                        <Modal.Title >\n                            <Search /> Search House Details\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"position-relative has-icon-left mb-1\">\n                            <Input value={this.props.value} onChange={e => this.props.handleFilter(e)} />\n                            <div className=\"form-control-position\">\n                                <Search size=\"15\" />\n                            </div>\n                        </div>\n                        <DataTable\n                            className=\"dataTable-custom\"\n                            data={this.props.value.length ? this.props.filteredData : this.props.data}\n                            columns={this.tableProperties.columns}\n                            noHeader\n                            pagination\n                            striped\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n\n        )\n    }\n}\n\n\nexport default HouseDetailsSearch","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Card, CardBody, CardHeader, CardTitle, Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport HouseRegistrationTable from './Tables/HouseRegistrationTables';\nimport HouseRegistrationModal from './Modals/HouseRegistrationModal';\nimport * as API from \"../../../../utility/crud/app.crud\";\nimport * as Date from \"../../../../utility/dateAndTime\";\nimport { toastr } from 'react-redux-toastr';\nimport EstateNamesSearch from '../../SearchComponents/EstateSearch/EstateSearch';\nimport HouseTypeSearch from '../../SearchComponents/HouseTypeSearch/HouseTypeSearch';\nimport HouseDetailsSearch from '../../SearchComponents/HouseDetailsSearch/HouseDetailsSearch';\nimport RMSModuleSearch from '../../SearchComponents/ModuleSearch/ModuleSearch';\nimport SubCountyTypeSearch from '../../SearchComponents/SubCountyTypeSearch/SubCountyTypeSearch';\nimport WardsSearch from '../../SearchComponents/WardsSearch/WardsSearch';\nimport FeeCategorySearch from '../../SearchComponents/FeeCategorySearch/FeeCategorySearch';\nimport FeesSearch from '../../SearchComponents/FeesSearch/FeesSearch';\nimport SystemStatusTypeSearch from '../../SearchComponents/SystemStatusTypeSearch/SystemStatusTypeSearch';\nimport ClientRegistrationSearch from '../../SearchComponents/ClientRegistrationSearch/ClientRegistrationSearch';\n\nclass HouseRegistration extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            columns: [],\n            data: [],\n            filteredData: [],\n            value: '',\n            show: false,\n            showdelete: false,\n\n            REG_HOUSE_ID: 0,\n            REG_TENANT_NUMBER: 0,\n            SET_ESTATE_ID: 0,\n            SET_HOUSE_TYPE_ID: 0,\n            SET_HOUSE_DETAILS: 0,\n            SET_MODULE_ID: 0,\n            SET_SUB_COUNTY_ID: 0,\n            SET_WARD_ID: 0,\n            SET_DEPT_FEECATEGORY_ID: 0,\n            SET_DEPT_FEE_ID: 0,\n            CLIENT_ID: 0,\n            SYS_STATUS_ID: 0,\n            CREATEDBY: props.user.EMAIL,\n            MODIFIEDBY: props.user.EMAIL,\n            CREATED_DATE: Date.ShowDate(),\n            MODIFIED_DATE: Date.ShowDate(),\n\n            ESTATE_NAME: '',\n            HOUSE_TYPE: '',\n            HOUSE_NUMBER: '',\n            MODULE_NAME: '',\n            SUBCOUNTY_NAME: '',\n            WARD_NAME: '',\n            FEECATEGORY_CODE: '',\n            FEE_NAME: '',\n            CLIENT_NAME: '',\n            CLIENT_DOCUMENT_NUMBER: '',\n            CLIENT_POSTAL_ADDRESS: '',\n            CLIENT_MOBILE_NUMBER: '',\n\n\n            InsertUpdate: '',\n            opensearch: false,\n\n\n            searchcolumns: [],\n            searchdata: [],\n            searchFilteredData: [],\n            searchvalue: '',\n\n            openestatenamessearch: false,\n            searchFilteredEstateNamesData: [],\n            searchestatenamesvalue: '',\n\n            openhousetypessearch: false,\n            searchFilteredHouseTypesData: [],\n            searchhousetypesvalue: '',\n\n            openhousedetailssearch: false,\n            searchFilteredHouseDetailsData: [],\n            searchhousedetailsvalue: '',\n\n            openmodulessearch: false,\n            searchFilteredModulesData: [],\n            searchmodulesvalue: '',\n\n            opensubcountysearch: false,\n            searchFilteredSubCountyData: [],\n            searchsubcountyvalue: '',\n\n            openwardsearch: false,\n            searchFilteredWardData: [],\n            searchwardvalue: '',\n\n            openfeecategorysearch: false,\n            searchFilteredFeeCategoryData: [],\n            searchfeecategoryvalue: '',\n\n            openfeesearch: false,\n            searchFilteredFeeData: [],\n            searchfeevalue: '',\n\n            openclientregistrationsearch: false,\n            searchFilteredClientRegistrationData: [],\n            searchclientregistrationvalue: '',\n\n            opensystemstatussearch: false,\n            searchFilteredSystemStatusData: [],\n            searchsystemstatusvalue: '',\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n\n        }\n\n        this.handleShow = () => {\n            this.setState({\n                show: true,\n                InsertUpdate: 'Insert'\n            });\n            this.clearData();\n        }\n\n        this.handleHide = () => {\n            this.setState({\n                show: false\n            });\n        }\n\n        this.handleHideDelete = () => {\n            this.setState({\n                showdelete: false\n            });\n        }\n\n        this.handleShowSearch = () => {\n\n            this.setState({ opensearch: true });\n        };\n\n        this.handleHideSearch = () => {\n            this.setState({ opensearch: false });\n        };\n\n\n        this.handleShowEstateNamesSearch = () => {\n            this.setState({ openestatenamessearch: true });\n        };\n\n        this.handleShowHouseTypesSearch = () => {\n            this.setState({ openhousetypessearch: true });\n        };\n\n        this.handleShowHouseDetailsSearch = () => {\n            this.setState({ openhousedetailssearch: true });\n        };\n\n        this.handleShowModulesSearch = () => {\n            this.setState({ openmodulessearch: true });\n        };\n\n        this.handleShowSubCountySearch = () => {\n            this.setState({ opensubcountysearch: true });\n        };\n\n        this.handleShowWardSearch = () => {\n            this.setState({ openwardsearch: true });\n        };\n\n        this.handleShowFeeCategorySearch = () => {\n            this.setState({ openfeecategorysearch: true });\n        };\n\n        this.handleShowFeesSearch = () => {\n            this.setState({ openfeesearch: true });\n        };\n\n        this.handleShowSearch = () => {\n            this.setState({ opensystemstatussearch: true });\n        };\n\n        this.handleShowClientRegistrationSearch = () => {\n            this.setState({ openclientregistrationsearch: true });\n        };\n\n\n        this.handleHideEstateNamesSearch = () => {\n            this.setState({ openestatenamessearch: false });\n        };\n\n        this.handleHideHouseTypesSearch = () => {\n            this.setState({ openhousetypessearch: false });\n        };\n\n        this.handleHideHouseDetailsSearch = () => {\n            this.setState({ openhousedetailssearch: false });\n        };\n\n        this.handleHideModulesSearch = () => {\n            this.setState({ openmodulessearch: false });\n        };\n\n        this.handleHideSubCountySearch = () => {\n            this.setState({ opensubcountysearch: false });\n        };\n\n        this.handleHideWardSearch = () => {\n            this.setState({ openwardsearch: false });\n        };\n\n        this.handleHideFeeCategorySearch = () => {\n            this.setState({ openfeecategorysearch: false });\n        };\n\n        this.handleHideFeesSearch = () => {\n            this.setState({ openfeesearch: false });\n        };\n\n        this.handleShowStatusSearch = () => {\n            this.setState({ openstatussearch: true });\n        };\n\n        this.handleHideClientRegistrationSearch = () => {\n            this.setState({ openclientregistrationsearch: false });\n        };\n\n\n        this.populateData();\n        this.populateEstates();\n        this.populateHouseTypes();\n        this.populateHouseDetails();\n        this.populateModules();\n        this.populateSubCounty();\n        //this.populateFeeCategory();\n        this.populateStatus();\n        this.populateClientRegistration();\n    }\n\n    populateData() {\n        const getdata = `\n        query {\n            HouseRegisters { \n                REG_HOUSE_ID   \n               REG_TENANT_NUMBER\n               SET_ESTATE_ID\n               ESTATETYPE{\n                   ESTATE_ID\n                   ESTATE_NAME\n               }\n               SET_HOUSE_TYPE_ID\n               HOUSETYPE{\n                   HOUSE_TYPE_ID\n                   HOUSE_TYPE\n               }\n               SET_HOUSE_DETAILS\n               HOUSEDETAILS{\n                   HOUSE_DETAILS_ID\n                   HOUSE_NUMBER\n               }\n               SET_MODULE_ID\n               MODULES{\n                MODULE_ID\n                MODULE_NAME\n               }\n               SET_SUB_COUNTY_ID\n               SUBCOUNTY{\n                   SUBCOUNTY_ID\n                   SUBCOUNTY_NAME\n               }\n               SET_WARD_ID\n               WARD\n               {\n                   WARD_ID\n                   WARD_NAME\n               }\n               SET_DEPT_FEECATEGORY_ID\n               FEECATEGORY{\n                   FEECATEGORY_ID\n                   FEECATEGORY_CODE\n               }\n               SET_DEPT_FEE_ID\n               FEE{\n                   FEE_ID\n                   FEE_NAME\n               }\n               CLIENT_ID\n               CLIENT{\n                   CLIENT_ID\n                   CLIENT_NAME\n                   CLIENT_DOCUMENT_NUMBER\n                    POSTAL_ADDRESS\n                    MOBILE_NUMBER\n               }\n               SYS_STATUS_ID\n               SYSTEMSTATUS{\n                   SYS_STATUS_ID\n                   SYS_STATUS_NAME\n               }\n               CREATEDBY\n               MODIFIEDBY\n               CREATED_DATE\n               MODIFIED_DATE\n            }\n           }\n           \n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                data: data.data.HouseRegisters\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    populateEstates() {\n        const getdata = `\n            query {\n                Estates {\n                    ESTATE_ID,\n                    ESTATE_NAME                \n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchestatenamesdata: data.data.Estates\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Estate Names Data');\n                }\n            })\n    }\n\n    populateHouseTypes() {\n        const getdata = `\n            query {\n                HouseTypes {\n                    HOUSE_TYPE_ID,\n                    HOUSE_TYPE                \n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchhousetypesdata: data.data.HouseTypes\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load House Types Data');\n                }\n            })\n    }\n\n    populateHouseDetails() {\n        const getdata = `\n            query {\n                HouseDetails {\n                    HOUSE_DETAILS_ID,\n                    HOUSE_NUMBER                \n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchhousedetailsdata: data.data.HouseDetails\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load House Numbers Data');\n                }\n            })\n    }\n\n    populateModules() {\n        const getdata = `\n            query {\n                Modules {\n                    MODULE_ID,\n                    MODULE_NAME                \n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchmodulesdata: data.data.Modules\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Modules Data');\n                }\n            })\n    }\n\n    populateSubCounty() {\n        const getdata = `\n            query {\n                SubCounties {\n                    SUBCOUNTY_ID,\n                    SUBCOUNTY_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchsubcountydata: data.data.SubCounties\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Sub County Data');\n                }\n            })\n    }\n\n\n    populateWard(value) {\n        const getdata = `\n        query {\n            WardFilter \n            (\n                SET_SUBCOUNTY_ID:${value}\n            ) \n           {\n                WARD_ID\n                WARD_NAME\n           }\n       }\n            \n    `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchwarddata: data.data.WardFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Wards Data');\n                }\n            })\n    }\n\n\n    populateFeeCategory(value) {\n        const getdata = `\n            query {\n                FeeCategoryFilter(\n                    SET_MODULE_ID:${value}\n                ) {\n                    FEECATEGORY_ID\n                    FEECATEGORY_NAME\n                    FEECATEGORY_CODE\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchfeecategorydata: data.data.FeeCategoryFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Fee Category Data');\n                }\n            })\n    }\n\n    populateFee(value) {\n        const getdata = `\n        query {\n            FeeFilter \n            (\n                SET_DEPT_FEECATEGORY_ID:${value}\n            ) \n           {\n                FEE_ID\n                FEE_NAME\n           }\n       }\n            \n    `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchfeedata: data.data.FeeFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Fee Data');\n                }\n            })\n    }\n\n    populateStatus() {\n\n        const getdata = `\n            query {\n                SystemStatusFilter (\n                    CATEGORY:\"SET\"\n                    ){\n                        SYS_STATUS_ID,\n                        SYS_STATUS_NAME\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchsystemstatusdata: data.data.SystemStatusFilter\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to System Status Type Load Data');\n                }\n            })\n    }\n\n    populateClientRegistration() {\n        const getdata = `\n            query {\n                Clients {\n                    CLIENT_ID\n                    CLIENT_NAME\n                    CLIENT_TYPE_ID\n                    CLIENT_DOCUMENT_NUMBER\n                    POSTAL_ADDRESS\n                    MOBILE_NUMBER\n                }\n            }\n        `;\n\n        API.getData(getdata)\n            .then(({ data }) => this.setState({\n                searchclientregistrationdata: data.data.Clients\n            })).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Client Data');\n                }\n            })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const form = `\n        mutation{\n            addHouseRegister(\n                REG_TENANT_NUMBER: ${this.state.REG_TENANT_NUMBER},\n                SET_ESTATE_ID: ${this.state.SET_ESTATE_ID},\n                SET_HOUSE_TYPE_ID: ${this.state.SET_HOUSE_TYPE_ID},\n                SET_HOUSE_DETAILS: ${this.state.SET_HOUSE_DETAILS}, \n                SET_MODULE_ID: ${this.state.SET_MODULE_ID},                    \n                SET_SUB_COUNTY_ID:${this.state.SET_SUB_COUNTY_ID},\n                SET_WARD_ID:${this.state.SET_WARD_ID},\n                SET_DEPT_FEECATEGORY_ID:${this.state.SET_DEPT_FEECATEGORY_ID},\n                SET_DEPT_FEE_ID:${this.state.SET_DEPT_FEE_ID},\n                CLIENT_ID:${this.state.CLIENT_ID},\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CREATEDBY:\"${this.state.CREATEDBY}\"\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\"\n                CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                ){\n                    REG_HOUSE_ID\n            }\n         }\n        `;\n\n        const formEdit = `\n        mutation{\n            updateHouseRegister(\n                REG_HOUSE_ID:${this.state.REG_HOUSE_ID},\n                REG_TENANT_NUMBER: ${this.state.REG_TENANT_NUMBER},\n                SET_ESTATE_ID: ${this.state.SET_ESTATE_ID},\n                SET_HOUSE_TYPE_ID: ${this.state.SET_HOUSE_TYPE_ID},\n                SET_HOUSE_DETAILS: ${this.state.SET_HOUSE_DETAILS}, \n                SET_MODULE_ID: ${this.state.SET_MODULE_ID},                    \n                SET_SUB_COUNTY_ID:${this.state.SET_SUB_COUNTY_ID},\n                SET_WARD_ID:${this.state.SET_WARD_ID},\n                SET_DEPT_FEECATEGORY_ID:${this.state.SET_DEPT_FEECATEGORY_ID},\n                SET_DEPT_FEE_ID:${this.state.SET_DEPT_FEE_ID},\n                CLIENT_ID:${this.state.CLIENT_ID},\n                SYS_STATUS_ID:${this.state.SYS_STATUS_ID},\n                CREATEDBY:\"${this.state.CREATEDBY}\"\n                MODIFIEDBY:\"${this.state.MODIFIEDBY}\"\n                CREATED_DATE:\"${this.state.CREATED_DATE}\",\n                MODIFIED_DATE:\"${this.state.MODIFIED_DATE}\"\n                ){\n                    REG_HOUSE_ID\n            }\n         }\n        `;\ndebugger;\n        if (this.state.InsertUpdate === 'Insert') {\n            API.create(form)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.success('Create Record', 'Record Created Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        } else {\n            API.update(formEdit)\n                .then(() => {\n                    this.clearData();\n                    this.handleHide();\n                    this.populateData();\n                    toastr.info('Update Record', 'Record Updated Successfully');\n                }).catch(error => {\n                    if (error.response || error.request) {\n                        toastr.error('Error Loading Data', 'Failed to Load Data');\n                    }\n                })\n        }\n\n    }\n\n    handleCloseEstateNamesSearch = (e) => {\n\n        this.setState({\n            SET_ESTATE_ID: e.ESTATE_ID,\n            ESTATE_NAME: e.ESTATE_NAME,\n            openestatenamessearch: false,\n        });\n    };\n\n    handleCloseHouseTypesSearch = (e) => {\n\n        this.setState({\n            SET_HOUSE_TYPE_ID: e.HOUSE_TYPE_ID,\n            HOUSE_TYPE: e.HOUSE_TYPE,\n            openhousetypessearch: false,\n        });\n    };\n\n    handleCloseHouseDetailsSearch = (e) => {\n\n        this.setState({\n            SET_HOUSE_DETAILS: e.HOUSE_DETAILS_ID,\n            HOUSE_NUMBER: e.HOUSE_NUMBER,\n            openhousedetailssearch: false,\n        });\n    };\n\n    handleCloseModulesSearch = (e) => {\n\n        this.setState({\n            SET_MODULE_ID: e.MODULE_ID,\n            MODULE_NAME: e.MODULE_NAME,\n            FEECATEGORY_CODE: '',\n            openmodulessearch: false,\n        });\n        this.populateFeeCategory(e.MODULE_ID);\n    };\n\n    handleCloseSubCountySearch = (e) => {\n\n        this.setState({\n            SET_SUB_COUNTY_ID: e.SUBCOUNTY_ID,\n            SUBCOUNTY_NAME: e.SUBCOUNTY_NAME,\n            WARD_NAME: '',\n            opensubcountysearch: false,\n        });\n        this.populateWard(e.SUBCOUNTY_ID);\n    };\n\n    handleCloseWardSearch = (e) => {\n\n        this.setState({\n            SET_WARD_ID: e.WARD_ID,\n            WARD_NAME: e.WARD_NAME,\n            openwardsearch: false,\n        });\n    };\n\n    handleCloseFeeCategorySearch = (e) => {\n\n        this.setState({\n            SET_DEPT_FEECATEGORY_ID: e.FEECATEGORY_ID,\n            FEECATEGORY_CODE: e.FEECATEGORY_CODE,\n            FEE_NAME: '',\n            openfeecategorysearch: false,\n        });\n        this.populateFee(e.FEECATEGORY_ID);\n    };\n\n    handleCloseFeeSearch = (e) => {\n\n        this.setState({\n            SET_DEPT_FEE_ID: e.FEE_ID,\n            FEE_NAME: e.FEE_NAME,\n            openfeesearch: false,\n        });\n    };\n\n    handleCloseSystemStatusSearch = (e) => {\n\n        this.setState({\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYS_STATUS_NAME,\n            opensystemstatussearch: false,\n        });\n    };\n\n    handleCloseClientRegistrationSearch = (e) => {\n        this.setState({\n            CLIENT_ID: e.CLIENT_ID,\n            CLIENT_NAME: e.CLIENT_NAME,\n            CLIENT_DOCUMENT_NUMBER: e.CLIENT_DOCUMENT_NUMBER,\n            CLIENT_POSTAL_ADDRESS: e.POSTAL_ADDRESS,\n            CLIENT_MOBILE_NUMBER: e.MOBILE_NUMBER,\n            openclientregistrationsearch: false,\n        });\n    };\n\n    handleEditData = (e) => {\n\n        this.setState({\n            REG_HOUSE_ID: e.REG_HOUSE_ID,\n            REG_TENANT_NUMBER: e.REG_TENANT_NUMBER,\n            SET_ESTATE_ID: e.SET_ESTATE_ID,\n            SET_HOUSE_TYPE_ID: e.SET_HOUSE_TYPE_ID,\n            SET_HOUSE_DETAILS: e.SET_HOUSE_DETAILS,\n            SET_MODULE_ID: e.SET_MODULE_ID,\n            SET_SUB_COUNTY_ID: e.SET_SUB_COUNTY_ID,\n            SET_WARD_ID: e.SET_WARD_ID,\n            SET_DEPT_FEECATEGORY_ID: e.SET_DEPT_FEECATEGORY_ID,\n            SET_DEPT_FEE_ID: e.SET_DEPT_FEE_ID,\n            SYS_STATUS_ID: e.SYS_STATUS_ID,\n            CLIENT_ID: e.CLIENT.CLIENT_ID,\n\n            CLIENT_NAME: e.CLIENT.CLIENT_NAME,\n            CLIENT_DOCUMENT_NUMBER: e.CLIENT.CLIENT_DOCUMENT_NUMBER,\n            CLIENT_POSTAL_ADDRESS: e.CLIENT.POSTAL_ADDRESS,\n            CLIENT_MOBILE_NUMBER: e.CLIENT.MOBILE_NUMBER,\n            ESTATE_NAME: e.ESTATETYPE.ESTATE_NAME,\n            HOUSE_TYPE: e.HOUSETYPE.HOUSE_TYPE,\n            HOUSE_NUMBER: e.HOUSEDETAILS.HOUSE_NUMBER,\n            MODULE_NAME: e.MODULES.MODULE_NAME,\n            SUBCOUNTY_NAME: e.SUBCOUNTY.SUBCOUNTY_NAME,\n            FEECATEGORY_CODE: e.FEECATEGORY.FEECATEGORY_CODE,\n            FEE_NAME: e.FEE.FEE_NAME,\n            WARD_NAME: e.WARD.WARD_NAME,\n            SYSTEMSTATUSTYPEDESCRIPTION: e.SYSTEMSTATUS.SYS_STATUS_NAME,\n\n            show: true,\n            InsertUpdate: 'Update'\n        })\n    }\n    handleDelete = (event) => {\n        event.preventDefault();\n\n        const formDelete = `\n        mutation{\n            deleteHouseRegister(\n                REG_HOUSE_ID:${this.state.REG_HOUSE_ID}\n                ){\n                    REG_HOUSE_ID\n            }\n        }\n        `;\n\n        API.remove(formDelete)\n            .then(() => {\n                this.handleHideDelete();\n                this.populateData();\n                toastr.warning('Delete Record', 'Record Deleted Successfully');\n            }).catch(error => {\n                if (error.response || error.request) {\n                    toastr.error('Error Loading Data', 'Failed to Load Data');\n                }\n            })\n\n    }\n\n    handleDeleteData = (e) => {\n        this.setState({\n            REG_HOUSE_ID: e.REG_HOUSE_ID,\n            REG_TENANT_NUMBER: e.REG_TENANT_NUMBER,\n            showdelete: true,\n            InsertUpdate: 'Delete'\n        })\n    }\n\n    clearData() {\n        this.setState({\n\n            SYSTEMSTATUSTYPEDESCRIPTION: '',\n            REG_TENANT_NUMBER: 0,\n            ESTATE_NAME: '',\n            HOUSE_TYPE: '',\n            HOUSE_NUMBER: '',\n            MODULE_NAME: '',\n            SUBCOUNTY_NAME: '',\n            WARD_NAME: '',\n            FEECATEGORY_NAME: '',\n            FEECATEGORY_CODE: '',\n            FEE_NAME: '',\n            CLIENT_NAME: '',\n            CLIENT_DOCUMENT_NUMBER: '',\n            CLIENT_POSTAL_ADDRESS: '',\n            CLIENT_MOBILE_NUMBER: '',\n            SYS_STATUS_NAME: '',\n\n        })\n    }\n\n    handleFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.data\n        let filteredData = this.state.filteredData\n        this.setState({ value });\n\n        if (value.length) {\n            filteredData = data.filter(item => {\n                let startsWithCondition =\n                    item.ESTATETYPE.ESTATE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.HOUSETYPE.HOUSE_TYPE.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.HOUSEDETAILS.HOUSE_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.MODULES.MODULE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SUBCOUNTY.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.WARD.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.FEECATEGORY_TYPE.FEECATEGORY_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.FEE.FEE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENT.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SYSTEMSTATUS.SYSTEM_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.REG_TENANT_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase())\n\n\n                let includesCondition =\n                    item.ESTATETYPE.ESTATE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.HOUSETYPE.HOUSE_TYPE.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.HOUSEDETAILS.HOUSE_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.MODULES.MODULE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SUBCOUNTY.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.WARD.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.FEECATEGORY_TYPE.FEECATEGORY_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.FEE.FEE_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.CLIENT.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.SYSTEMSTATUS.SYSTEM_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase()) ||\n                    item.REG_TENANT_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredData })\n        }\n    }\n\n    handleSearchEstateNamesFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchestatenamesdata\n        let filteredEstateNamesData = this.state.searchFilteredEstateNamesData\n        this.setState({ searchestatenamesvalue: value });\n\n        if (value.length) {\n            filteredEstateNamesData = data.filter(item => {\n                let startsWithCondition =\n                    item.ESTATE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.ESTATE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredEstateNamesData })\n        }\n    }\n\n    handleSearchHouseTypesFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchhousetypesdata\n        let filteredHouseTypesData = this.state.searchFilteredHouseTypesData\n        this.setState({ searchhousetypesvalue: value });\n\n        if (value.length) {\n            filteredHouseTypesData = data.filter(item => {\n                let startsWithCondition =\n                    item.HOUSE_TYPE.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.HOUSE_TYPE.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredHouseTypesData })\n        }\n    }\n\n    handleSearchHouseDetailsFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchhousedetailsdata\n        let filteredHouseDetailsData = this.state.searchFilteredHouseDetailsData\n        this.setState({ searchhousedetailsvalue: value });\n\n        if (value.length) {\n            filteredHouseDetailsData = data.filter(item => {\n                let startsWithCondition =\n                    item.HOUSE_NUMBER.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.HOUSE_NUMBER.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredHouseDetailsData })\n        }\n    }\n\n    handleSearchModulesFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchmodulesdata\n        let filteredModulesData = this.state.searchFilteredModulesData\n        this.setState({ searchmodulesvalue: value });\n\n        if (value.length) {\n            filteredModulesData = data.filter(item => {\n                let startsWithCondition =\n                    item.MODULE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.MODULE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredModulesData })\n        }\n    }\n\n    handleSearchSubCountyFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchsubcountydata\n        let filteredSubCountyData = this.state.searchFilteredSubCountyData\n        this.setState({ searchsubcountyvalue: value });\n\n        if (value.length) {\n            filteredSubCountyData = data.filter(item => {\n                let startsWithCondition =\n                    item.SUBCOUNTY_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SUBCOUNTY_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredSubCountyData })\n        }\n    }\n\n    handleSearchWardFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchwarddata\n        let filteredWardData = this.state.searchFilteredWardData\n        this.setState({ searchwardvalue: value });\n\n        if (value.length) {\n            filteredWardData = data.filter(item => {\n                let startsWithCondition =\n                    item.WARD_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.WARD_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredWardData })\n        }\n    }\n\n    handleSearchFeeCategoryFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchfeecategorydata\n        let filteredFeeCategoryData = this.state.searchFilteredFeeCategoryData\n        this.setState({ searchwardvalue: value });\n\n        if (value.length) {\n            filteredFeeCategoryData = data.filter(item => {\n                let startsWithCondition =\n                    item.FEECATEGORY_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.FEECATEGORY_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredFeeCategoryData })\n        }\n    }\n\n    handleSearchFeeFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchfeedata\n        let filteredFeeData = this.state.searchFilteredFeeData\n        this.setState({ searchfeevalue: value });\n\n        if (value.length) {\n            filteredFeeData = data.filter(item => {\n                let startsWithCondition =\n                    item.FEE_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.FEE_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredFeeData })\n        }\n    }\n\n    handleSearchSystemStatusFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchsystemstatusdata\n        let filteredsystemstatusData = this.state.searchFilteredSystemStatusData\n        this.setState({ searchsystemstatusvalue: value });\n\n        if (value.length) {\n            filteredsystemstatusData = data.filter(item => {\n                let startsWithCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.SYS_STATUS_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredsystemstatusData })\n        }\n    }\n\n    handleSearchClientRegistrationFilter = (e) => {\n        let value = e.target.value\n        let data = this.state.searchclientregistrationdata\n        let filteredClientRegistrationData = this.state.searchFilteredClientRegistrationData\n        this.setState({ searchclientregistrationvalue: value });\n\n        if (value.length) {\n            filteredClientRegistrationData = data.filter(item => {\n                let startsWithCondition =\n                    item.CLIENT_NAME.toString().toLowerCase().startsWith(value.toLowerCase())\n\n                let includesCondition =\n                    item.CLIENT_NAME.toString().toLowerCase().includes(value.toLowerCase())\n\n                if (startsWithCondition) {\n                    return startsWithCondition\n                } else if (!startsWithCondition && includesCondition) {\n                    return includesCondition\n                } else return null\n            })\n            this.setState({ filteredClientRegistrationData })\n        }\n    }\n\n    render() {\n        const { data, columns, value, filteredData,\n            searchestatenamesvalue, searchestatenamesdata, filteredEstateNamesData,\n            searchhousetypesvalue, searchhousetypesdata, filteredHouseTypesData,\n            searchhousedetailsvalue, searchhousedetailsdata, filteredHouseDetailsData,\n            searchmodulesvalue, searchmodulesdata, filteredModuelesData,\n            searchsubcountyvalue, searchsubcountydata, filteredSubCountyData,\n            searchwardvalue, searchwarddata, filteredWardData,\n            searchfeecategoryvalue, searchfeecategorydata, filteredFeeCategoryData,\n            searchfeevalue, searchfeedata, filteredFeeData,\n            searchsystemstatusvalue, searchsystemstatusdata, filteredsystemstatusData,\n            searchclientregistrationvalue, searchclientregistrationdata, filteredClientRegistrationData\n\n        } = this.state\n        return (\n            <>\n                <Helmet><title>House Registration</title></Helmet>\n\n                <React.Fragment>\n                    <Breadcrumbs\n                        breadCrumbTitle=\"Admin\"\n                        breadCrumbParent=\"Registration\"\n                        breadCrumbActive=\"House Registration\"\n                    />\n                    <Row>\n                        <Col sm=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>House Registration</CardTitle>\n                                </CardHeader>\n                                <CardBody className=\"rdt_Wrapper\">\n\n                                    <EstateNamesSearch\n                                        handleSearchEstates={this.handleCloseEstateNamesSearch}\n                                        opensearch={this.state.openestatenamessearch}\n                                        handleHideSearch={this.handleHideEstateNamesSearch}\n                                        value={searchestatenamesvalue}\n                                        data={searchestatenamesdata}\n                                        handleFilter={this.handleSearchEstateNamesFilter}\n                                        filteredData={filteredEstateNamesData}\n                                    />\n\n                                    <HouseTypeSearch\n                                        handleSearchHouseTypes={this.handleCloseHouseTypesSearch}\n                                        opensearch={this.state.openhousetypessearch}\n                                        handleHideSearch={this.handleHideHouseTypesSearch}\n                                        value={searchhousetypesvalue}\n                                        data={searchhousetypesdata}\n                                        handleFilter={this.handleSearchHouseTypesFilter}\n                                        filteredData={filteredHouseTypesData}\n                                    />\n\n                                    <HouseDetailsSearch\n                                        handleSearchHouseDetails={this.handleCloseHouseDetailsSearch}\n                                        opensearch={this.state.openhousedetailssearch}\n                                        handleHideSearch={this.handleHideHouseDetailsSearch}\n                                        value={searchhousedetailsvalue}\n                                        data={searchhousedetailsdata}\n                                        handleFilter={this.handleSearchHouseDetailsFilter}\n                                        filteredData={filteredHouseDetailsData}\n                                    />\n                                    <RMSModuleSearch\n                                        handleSearchModule={this.handleCloseModulesSearch}\n                                        opensearch={this.state.openmodulessearch}\n                                        handleHideSearch={this.handleHideModulesSearch}\n                                        value={searchmodulesvalue}\n                                        data={searchmodulesdata}\n                                        handleFilter={this.handleSearchModulesFilter}\n                                        filteredData={filteredModuelesData}\n                                    />\n                                    <SubCountyTypeSearch\n                                        handleSearchSubCounty={this.handleCloseSubCountySearch}\n                                        opensearch={this.state.opensubcountysearch}\n                                        handleHideSearch={this.handleHideSubCountySearch}\n                                        value={searchsubcountyvalue}\n                                        data={searchsubcountydata}\n                                        handleFilter={this.handleSearchSubCountyFilter}\n                                        filteredData={filteredSubCountyData}\n                                    />\n\n                                    <WardsSearch\n                                        handleSearchWards={this.handleCloseWardSearch}\n                                        opensearch={this.state.openwardsearch}\n                                        handleHideSearch={this.handleHideWardSearch}\n                                        value={searchwardvalue}\n                                        data={searchwarddata}\n                                        handleFilter={this.handleSearchWardFilter}\n                                        filteredData={filteredWardData}\n                                    />\n\n                                    <FeesSearch\n                                        handleSearchFees={this.handleCloseFeeSearch}\n                                        opensearch={this.state.openfeesearch}\n                                        handleHideSearch={this.handleHideFeesSearch}\n                                        value={searchfeevalue}\n                                        data={searchfeedata}\n                                        handleFilter={this.handleSearchFeeFilter}\n                                        filteredData={filteredFeeData}\n                                    />\n\n                                    <FeeCategorySearch\n                                        handleSearchFEECATEGORY={this.handleCloseFeeCategorySearch}\n                                        opensearch={this.state.openfeecategorysearch}\n                                        handleHideSearch={this.handleHideFeeCategorySearch}\n                                        value={searchfeecategoryvalue}\n                                        data={searchfeecategorydata}\n                                        handleFilter={this.handleSearchFeeCategoryFilter}\n                                        filteredData={filteredFeeCategoryData}\n                                    />\n\n                                    <SystemStatusTypeSearch\n                                        handleSearchSystemStatusType={this.handleCloseSystemStatusSearch}\n                                        opensearch={this.state.opensystemstatussearch}\n                                        handleHideSearch={this.handleHideSystemStatusSearch}\n                                        value={searchsystemstatusvalue}\n                                        data={searchsystemstatusdata}\n                                        handleFilter={this.handleSearchSystemStatusFilter}\n                                        filteredData={filteredsystemstatusData}\n                                    />\n\n                                    <ClientRegistrationSearch\n                                        handleSearchClientRegistration={this.handleCloseClientRegistrationSearch}\n                                        opensearch={this.state.openclientregistrationsearch}\n                                        handleHideSearch={this.handleHideClientRegistrationSearch}\n                                        value={searchclientregistrationvalue}\n                                        data={searchclientregistrationdata}\n                                        handleFilter={this.handleSearchClientRegistrationFilter}\n                                        filteredData={filteredClientRegistrationData}\n                                    />\n\n                                    <HouseRegistrationTable\n                                        role={this.constructor.name}\n                                        handleEdit={this.handleEditData}\n                                        handleDelete={this.handleDeleteData}\n                                        value={value}\n                                        data={data}\n                                        columns={columns}\n                                        filteredData={filteredData}\n                                        handleShow={this.handleShow}\n                                        handleFilter={this.handleFilter}\n                                    />\n\n                                    <HouseRegistrationModal\n                                        show={this.state.show}\n                                        handleHide={this.handleHide}\n                                        InsertUpdate={this.state.InsertUpdate}\n                                        handleSubmit={this.handleSubmit}\n                                        handleShowSearch={this.handleShowSearch}\n\n                                        handleShowEstateName={this.handleShowEstateNamesSearch}\n                                        handleShowHouseType={this.handleShowHouseTypesSearch}\n                                        handleShowHouseDetail={this.handleShowHouseDetailsSearch}\n                                        handleShowModules={this.handleShowModulesSearch}\n                                        handleShowSubCounty={this.handleShowSubCountySearch}\n                                        handleShowWard={this.handleShowWardSearch}\n                                        handleShowFees={this.handleShowFeesSearch}\n                                        handleShowFeeCategorySearch={this.handleShowFeeCategorySearch}\n                                        handleShowStatusSearch={this.handleShowStatusSearch}\n                                        handleShowClientRegistrationSearch={this.handleShowClientRegistrationSearch}\n\n                                        TenantNo={this.state.REG_TENANT_NUMBER}\n                                        changeTenantNo={e => this.setState({ REG_TENANT_NUMBER: e.target.value })}\n\n                                        EstateID={this.state.ESTATE_ID}\n                                        handleChangeEstateID={e => this.setState({ ESTATE_ID: e.target.value })}\n\n                                        HouseTypeID={this.state.HOUSE_TYPE_ID}\n                                        handleChangeHouseTypeID={e => this.setState({ HOUSE_TYPE_ID: e.target.value })}\n\n                                        HouseDetailsID={this.state.HOUSE_DETAILS_ID}\n                                        handleChangeHouseDetailsID={e => this.setState({ HOUSE_DETAILS_ID: e.target.value })}\n\n                                        ModuleID={this.state.MODULE_ID}\n                                        handleChangeModulesID={e => this.setState({ MODULE_ID: e.target.value })}\n\n                                        EstateName={this.state.ESTATE_NAME}\n                                        handleChangeEstateName={e => this.setState({ ESTATE_NAME: e.target.value })}\n\n                                        HouseType={this.state.HOUSE_TYPE}\n                                        handleChangeHouseType={e => this.setState({ HOUSE_TYPE: e.target.value })}\n\n                                        HouseNumber={this.state.HOUSE_NUMBER}\n                                        handleChangeHouseNumber={e => this.setState({ HOUSE_NUMBER: e.target.value })}\n\n                                        ModuleName={this.state.MODULE_NAME}\n                                        handleChangeModuleName={e => this.setState({ MODULE_NAME: e.target.value })}\n\n                                        SubCountyID={this.state.SUBCOUNTY_ID}\n                                        handleChangeSubCountyID={e => this.setState({ SUBCOUNTY_ID: e.target.value })}\n\n                                        SubCountyName={this.state.SUBCOUNTY_NAME}\n                                        handleChangeSubCountyName={e => this.setState({ SUBCOUNTY_NAME: e.target.value })}\n\n                                        WardID={this.state.WARD_ID}\n                                        handleChangeWardIDID={e => this.setState({ WARD_ID: e.target.value })}\n\n                                        WardName={this.state.WARD_NAME}\n                                        handleChangeWardName={e => this.setState({ WARD_NAME: e.target.value })}\n\n                                        FeeID={this.state.FEE_ID}\n                                        handleChangeFeeIDID={e => this.setState({ FEE_ID: e.target.value })}\n\n                                        FeeName={this.state.FEE_NAME}\n                                        handleChangeFeeName={e => this.setState({ FEE_NAME: e.target.value })}\n\n                                        FeeCategoryID={this.state.FEECATEGORY_ID}\n                                        handleChangeFeeCategoryIDID={e => this.setState({ FEECATEGORY_ID: e.target.value })}\n\n                                        FeeCategoryName={this.state.FEECATEGORY_CODE}\n                                        handleChangeFeeCategoryName={e => this.setState({ FEECATEGORY_CODE: e.target.value })}\n\n                                        SystemStatusTypeID={this.state.SYS_STATUS_ID}\n                                        handleChangeSystemStatusTypeID={e => this.setState({ SYS_STATUS_ID: e.target.value })}\n\n                                        SystemStatusTypeDescription={this.state.SYSTEMSTATUSTYPEDESCRIPTION}\n                                        handleChangeSystemStatusTypeDescription={e => this.setState({ SYSTEMSTATUSTYPEDESCRIPTION: e.target.value })}\n\n                                        ClientName={this.state.CLIENT_NAME}\n                                        handleChangeClientName={e => this.setState({ CLIENT_NAME: e.target.value })}\n\n                                        ClientID={this.state.CLIENT_ID}\n                                        handleChangeClientID={e => this.setState({ CLIENT_ID: e.target.value })}\n\n                                        ClientPostalAddress={this.state.CLIENT_POSTAL_ADDRESS}\n                                        changeClientPostalAddress={e => this.setState({ CLIENT_POSTAL_ADDRESS: e.target.value })}\n\n                                        ClientDocumentNumber={this.state.CLIENT_DOCUMENT_NUMBER}\n                                        changeClientDocumentNumber={e => this.setState({ CLIENT_DOCUMENT_NUMBER: e.target.value })}\n\n                                        ClientMobileNumber={this.state.CLIENT_MOBILE_NUMBER}\n                                        changeClientMobileNumber={e => this.setState({ CLIENT_MOBILE_NUMBER: e.target.value })}\n\n                                        showdelete={this.state.showdelete}\n                                        handleHideDelete={this.handleHideDelete}\n                                        handleDelete={this.handleDelete}\n\n                                    />\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </React.Fragment>\n\n            </>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ auth: { user } }) => ({\n    user\n});\n\nexport default (connect(mapStateToProps)(HouseRegistration));"],"sourceRoot":""}